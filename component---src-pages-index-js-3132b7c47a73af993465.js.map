{"version":3,"sources":["webpack:///./src/components/H1.js","webpack:///./src/pages/index.js","webpack:///./src/themes/GlobalStyle.js","webpack:///./src/components/Main.js","webpack:///./src/components/Nav.js","webpack:///./src/themes/index.js","webpack:///./src/components/Layout.js"],"names":["H1","styled_components_browser_esm","h1","withConfig","componentId","_ref","theme","lightGray","Object","polished_es","__webpack_exports__","_ref$data$allMarkdown","data","allMarkdownRemark","edges","totalCount","react_default","a","createElement","Layout","map","_ref2","_ref2$node","node","id","fields","frontmatter","key","gatsby_browser_entry","to","slug","title","date","query","themes_GlobalStyle","_templateObject","components_Main","main","bgColor","secondaryColor","_ref3","_ref4","defaultTransition","_ref5","NavTag","nav","Header","header","maxWidth","LinkList","ul","gray","headerFont","_ref6","_ref7","headerColor","HomeLink","_ref8","_ref9","_ref10","Nav","_ref11","themes","bodyColor","LayoutDiv","div","Layout_Layout","children","render","_ref4$site$siteMetada","site","siteMetadata","description","react","Helmet_default","meta","name","content","_3854292632","propTypes","prop_types","isRequired"],"mappings":"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","file":"component---src-pages-index-js-3132b7c47a73af993465.js","sourcesContent":["import styled from 'styled-components'\nimport { position } from 'polished'\n\nexport default styled.h1`\n  position: relative;\n  width: calc(100% - 60px);\n  small {\n    color: ${({ theme }) => theme.lightGray};\n    display: block;\n    font-size: .4em;\n    font-style: italic;\n    ${position('absolute', null, '-60px', 0, null)}\n    text-align: right;\n    width: 60px;\n  }\n`","import React from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport H1 from '../components/H1'\nimport Layout from '../components/Layout'\n\nexport default ({ data: { allMarkdownRemark: { edges, totalCount } } }) => (<Layout>\n  <H1>List of posts <small>{totalCount} posts</small></H1>\n  <nav>\n    <ul>\n      {edges.map(({ node: { id, fields, frontmatter } }) => (<li key={id}>\n        <Link to={fields.slug}><p>{frontmatter.title} - {frontmatter.date}</p></Link>\n      </li>))}\n    </ul>\n  </nav>\n</Layout>)\n\n\nexport const query = graphql`\nquery site {\n  allMarkdownRemark {\n    totalCount\n    edges {\n      node {\n        id\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MM/DD/YY\")\n          title\n        }\n      }\n    }\n  }\n}\n`","import { createGlobalStyle } from 'styled-components'\n\nconst GlobalStyle = createGlobalStyle /* css */ `\n  html, body, #___gatsby, #___gatsby>div {\n    height: 100%;\n  }\n`\nexport default GlobalStyle\n","import styled from 'styled-components'\nimport { position, size } from 'polished'\n\nconst Main = styled.main`\n  background: ${({ theme }) => theme.bgColor};\n  a {\n    position: relative;\n    display: inline-block;\n    background: transparent;\n    color: ${({ theme }) => theme.secondaryColor};\n    font-weight: bold;\n    text-decoration: none;\n    >span {\n      color: inherit;\n      background-color: inherit;\n    }\n    &::after {\n      content: '';\n      ${position('absolute', null, null, '0', '0')}\n      ${size('1px', '100%')}\n      background: ${({ theme }) => theme.secondaryColor};\n      transition:\n        opacity ${({ theme }) => theme.defaultTransition},\n        transform ${({ theme }) => theme.defaultTransition};\n      opacity: 0;\n      transform: translateY(.2em);\n    }\n    &:hover::after {\n      opacity: 1;\n      transform: none;\n    }\n  }\n`\nexport default Main","import React from 'react'\nimport styled from 'styled-components'\nimport { Link } from  'gatsby'\nimport { position, size } from 'polished'\n\nconst NavTag = styled.nav`\n  border-bottom: 1px solid ${({ theme }) => theme.lightGray};\n`\n\nconst Header = styled.header`\n  margin: 0 auto;\n  max-width: ${({ theme }) => theme.maxWidth}px;\n  a { text-decoration: none; }\n`\n\nconst LinkList = styled.ul`\n  display: block;\n  list-style-type: none;\n  margin: 0;\n  text-align: right;\n  position: relative;\n  white-space: nowrap;\n  width: 100%;\n  &::before {\n    content: '';\n    display: block;\n    background: linear-gradient(\n      to right,\n      transparent,\n      ${({ theme }) => theme.lightGray},\n      transparent\n    );\n    ${position('absolute', 0, null, null, null)}\n    ${size('1px', '100%')}\n  }\n  >li, a {\n    color: ${({ theme }) => theme.gray};\n    font-family: ${({ theme }) => theme.headerFont};\n    font-size: 14px;\n    margin: 0;\n    padding: 1em 0;\n    text-transform: uppercase;\n    transition: color ${({ theme }) => theme.defaultTransition};\n    &:not(:first-child) { margin-left: 1em; }\n    &:hover, &:active {\n      color: ${({ theme }) => theme.headerColor};\n    }\n  }\n`\n\nconst HomeLink = styled(Link)`\n  display: block;\n  text-align: center;\n  h1 {\n    display: inline-block;\n    margin: .5em;\n    font-weight: 900;\n    font-size: 22px;\n    letter-spacing: 1px;\n    position: relative;\n    transition: color ${({ theme }) => theme.defaultTransition};\n    &::after {\n      content: '';\n      border-radius: 50%;\n      display: block;\n      background: ${({ theme }) => theme.secondaryColor};\n      ${position('absolute', '10px', '-1em', null, null)}\n      ${size('10px')}\n    }\n    &:hover, &:active {\n      color: ${({ theme }) => theme.secondaryColor};\n    }\n  }\n`\n\nexport default function Nav ({ title }) {\n  return (<NavTag>\n    <Header>\n      <HomeLink to='/'><h1>{title}</h1></HomeLink>\n      <LinkList>\n        <li><Link to='/about'>About</Link></li>\n      </LinkList>\n    </Header>\n  </NavTag>)\n}","export default {\n  bodyColor: 'hsla(0,0%,0%,.8)',\n  bgColor: 'white',\n  defaultTransition: '.3s ease-in-out',\n  headerColor: 'hsla(0,0%,0%,.9)',\n  headerFont: `-apple-system,'BlinkMacSystemFont','Segoe UI','Roboto','Oxygen','Ubuntu','Cantarell','Fira Sans','Droid Sans','Helvetica Neue','sans-serif'`,\n  maxWidth: 960,\n  secondaryColor: '#ff0000',\n  gray: 'hsla(0,0%,0%,.5)',\n  lightGray: 'hsla(0,0%,0%,.1)'\n}","import React, { Fragment } from 'react'\nimport Helmet from 'react-helmet'\nimport styled, { ThemeProvider } from 'styled-components'\nimport { StaticQuery, graphql } from  'gatsby'\nimport { any } from 'prop-types'\nimport { size } from 'polished'\n\nimport GlobalStyle from '../themes/GlobalStyle'\nimport Main from '../components/Main'\nimport Nav from '../components/Nav'\nimport theme from '../themes'\n\nconst LayoutDiv = styled.div`\n  background: ${({ theme }) => theme.bgColor};\n  margin: 1em auto;\n  ${size('100%', '100vw')}\n  max-width: ${({ theme }) => theme.maxWidth}px;\n`\n\nconst Layout = ({ children }) => (<ThemeProvider theme={theme}>\n  <StaticQuery\n    query={graphql`\n      query {\n        site {\n          siteMetadata {\n            description\n            title\n          }\n        }\n      }\n    `}\n    render={({ site: { siteMetadata: { description, title } } }) => (<Fragment>\n      <Helmet\n        title={title}\n        meta={[\n          { name: 'description', content: description }\n        ]}\n      />\n    <Nav title={title} />\n    <Main>\n      <LayoutDiv>{children}</LayoutDiv>\n    </Main>\n    <GlobalStyle />\n  </Fragment>)}\n  />\n</ThemeProvider>)\nLayout.propTypes = {\n  children: any.isRequired\n}\nexport default Layout"],"sourceRoot":""}