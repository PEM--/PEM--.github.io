{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/hoc/noUpdate.js","webpack:///./src/themes/GlobalStyle.js","webpack:///./src/themes/prism.js","webpack:///./src/components/Main.js","webpack:///./src/components/Nav.js","webpack:///./src/components/Layout.js","webpack:///./src/themes/index.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["__webpack_require__","r","__webpack_exports__","react_emoji_render__WEBPACK_IMPORTED_MODULE_0__","react_emoji_render__WEBPACK_IMPORTED_MODULE_0___default","n","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_2__","_components_Layout__WEBPACK_IMPORTED_MODULE_3__","a","createElement","text","to","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","data","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","recompose__WEBPACK_IMPORTED_MODULE_0__","noUpdate","shouldUpdate","GlobalStyle","createGlobalStyle","_templateObject","_ref","theme","lightGray","_ref2","borderRadius","_ref3","bodyColor","monospaceFont","gray","secondaryColor","prism","Main","styled","main","withConfig","componentId","bgColor","position","size","_ref4","defaultTransition","_ref5","Header","header","maxWidth","LinkList","ul","headerFont","_ref6","headerColor","HomeLink","Link","_ref7","_ref8","_ref9","Nav","shouldComponentUpdate","react_default","this","title","gatsby_browser_entry","Component","LayoutDiv","div","Layout","componentDidMount","fbPixelInitialized","ReactPixel","init","pageView","_this$props","description","styled_components_browser_esm","siteMetadata","site","react","Helmet_default","lang","amp","name","content","property","googleSearchConsoleOwnershipId","Nav_Nav","components_Main","themes_GlobalStyle","_4226086209","any","smallFontSize","smallFontWeight","warningColor","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0___default","json","shape"],"mappings":"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","file":"component---src-pages-404-js-8fc5a030d51d7c4c6fe2.js","sourcesContent":["import Emoji from 'react-emoji-render'\nimport React, { Fragment } from 'react'\nimport { Link } from 'gatsby'\n\nimport Layout from '../components/Layout'\n\nexport default () => (<Layout>\n  {() => (<Fragment>\n    <h1>404 - Not found</h1>\n    <p><Emoji text=\"This route doesn't exist ðŸ¤”\" /></p>\n    <p><Link to='/'>Go back home</Link></p>\n  </Fragment>)}\n</Layout>)","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import { shouldUpdate } from 'recompose'\n\nconst noUpdate = shouldUpdate(() => false)\nexport default noUpdate","import { createGlobalStyle } from 'styled-components'\n\nimport prism from './prism'\n\nconst GlobalStyle = createGlobalStyle /* css */ `\n  html, body, #___gatsby, #___gatsby >div {\n    height: 100%;\n  }\n  div > p > .gatsby-resp-image-wrapper {\n    max-width: 100% !important;\n    .gatsby-resp-image-background-image {\n      border: 1px solid ${({ theme }) => theme.lightGray};\n      border-radius: ${({ theme }) => theme.borderRadius};\n      overflow: hidden;\n    }\n  }\n  .katex-display { margin: 0 0 .5em; }\n  .katex { font: 300 1.15em KaTeX_Main, serif; }\n  ${({ theme }) => prism(theme)}\n  .center { text-align: center; }\n`\nexport default GlobalStyle\n","export default theme => /* css */`\ncode[class*=\"language-\"],\npre[class*=\"language-\"] {\n\tcolor: ${theme.bodyColor};\n\tbackground: none;\n\tfont-family: ${theme.monospaceFont};\n\ttext-align: left;\n\twhite-space: pre;\n\tword-spacing: normal;\n\tword-break: normal;\n\tword-wrap: normal;\n\tline-height: 1.5;\n\thyphens: none;\n}\n\n/* Code blocks */\npre[class*=\"language-\"] {\n\tpadding: 1em;\n\tmargin: .5em 0;\n\toverflow: auto;\n\tborder-radius: ${theme.borderRadius};\n\tborder: 1px solid ${theme.gray};\n}\n\n:not(pre) > code[class*=\"language-\"],\npre[class*=\"language-\"] {\n\tbackground: ${theme.lightGray};\n}\n\n/* Inline code */\n:not(pre) > code[class*=\"language-\"] {\n\tpadding: .1em;\n\tborder-radius: ${theme.borderRadius};\n\twhite-space: normal;\n}\n\n.token.comment,\n.token.prolog,\n.token.doctype,\n.token.cdata {\n\tcolor: ${theme.gray};\n}\n\n.token.punctuation {\n\tcolor: ${theme.bodyColor};\n}\n\n.namespace {\n\topacity: .7;\n}\n\n.token.property,\n.token.tag,\n.token.constant,\n.token.symbol,\n.token.deleted {\n\tcolor: ${theme.secondaryColor};\n}\n\n.token.boolean,\n.token.number {\n\tcolor: ${theme.secondaryColor};\n}\n\n.token.selector,\n.token.attr-name,\n.token.string,\n.token.char,\n.token.builtin,\n.token.inserted {\n\tcolor: ${theme.secondaryColor};\n}\n\n.token.operator,\n.token.entity,\n.token.url,\n.language-css .token.string,\n.style .token.string,\n.token.variable {\n\tcolor: ${theme.bodyColor};\n}\n\n.token.atrule,\n.token.attr-value,\n.token.function,\n.token.class-name {\n\tcolor: ${theme.secondaryColor};\n}\n\n.token.keyword {\n\tcolor: ${theme.secondaryColor};\n}\n\n.token.regex,\n.token.important {\n\tcolor: ${theme.secondaryColor};\n}\n\n.token.important,\n.token.bold {\n\tfont-weight: bold;\n}\n.token.italic {\n\tfont-style: italic;\n}\n\n.token.entity {\n\tcursor: help;\n}\n`","import styled from 'styled-components'\nimport { position, size } from 'polished'\n\nconst Main = styled.main`\n  background: ${({ theme }) => theme.bgColor};\n  a {\n    position: relative;\n    display: inline-block;\n    background: transparent;\n    color: ${({ theme }) => theme.secondaryColor};\n    font-weight: bold;\n    text-decoration: none;\n    >span {\n      color: inherit;\n      background-color: inherit;\n    }\n    &::after {\n      content: '';\n      ${position('absolute', null, null, '0', '0')}\n      ${size('1px', '100%')}\n      background: ${({ theme }) => theme.secondaryColor};\n      transition:\n        opacity ${({ theme }) => theme.defaultTransition},\n        transform ${({ theme }) => theme.defaultTransition};\n      opacity: 0;\n      transform: translateY(.2em);\n    }\n    &:hover::after {\n      opacity: 1;\n      transform: none;\n    }\n  }\n`\nexport default Main","import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport { Link } from  'gatsby'\nimport { position, size } from 'polished'\nimport { string } from 'prop-types'\n\nimport noUpdate from '../hoc/noUpdate'\n\nconst Header = noUpdate(styled.header`\n  margin: 0 auto;\n  max-width: ${({ theme }) => theme.maxWidth}px;\n  a { text-decoration: none; }\n\n  @media print {\n    display: none;\n  }\n`)\n\nconst LinkList = noUpdate(styled.ul`\n  display: block;\n  list-style-type: none;\n  margin: 0;\n  text-align: right;\n  position: relative;\n  white-space: nowrap;\n  width: 100%;\n  &::before, &::after {\n    content: '';\n    display: block;\n    background:\n      linear-gradient(\n        to right,\n        transparent,\n        ${({ theme }) => theme.lightGray},\n        transparent\n      );\n    position: absolute;\n    ${size('1px', '100%')}\n  }\n  &::before { top: 0; }\n  &::after { bottom: 0; }\n  >li {\n    display: inline-block;\n    margin: 0;\n    padding: 1em 0;\n    &:not(:first-child) { margin-left: 1em; }\n  }\n  a {\n    color: ${({ theme }) => theme.gray};\n    font-family: ${({ theme }) => theme.headerFont};\n    font-size: 14px;\n    text-transform: uppercase;\n    transition: color ${({ theme }) => theme.defaultTransition};\n    &:hover, &:active {\n      color: ${({ theme }) => theme.headerColor};\n    }\n  }\n`)\n\nconst HomeLink = noUpdate(styled(Link)`\n  display: block;\n  text-align: center;\n  h1 {\n    display: inline-block;\n    margin: .5em;\n    font-weight: 900;\n    font-size: 22px;\n    letter-spacing: 1px;\n    position: relative;\n    transition: color ${({ theme }) => theme.defaultTransition};\n    &::after {\n      content: '';\n      border-radius: 50%;\n      display: block;\n      background: ${({ theme }) => theme.secondaryColor};\n      ${position('absolute', '8px', '-1em', null, null)}\n      ${size('10px')}\n    }\n    &:hover, &:active {\n      color: ${({ theme }) => theme.secondaryColor};\n    }\n  }\n`)\n\nexport default class Nav extends Component {\n  static propTypes = {\n    title: string.isRequired\n  }\n  shouldComponentUpdate = () => false\n  render () {\n    return (<nav>\n      <Header>\n        <HomeLink to='/'><h1>{this.props.title}</h1></HomeLink>\n        <LinkList>\n          <li><Link to='/'>Home</Link></li>\n          <li><Link to='/tools'>Tools</Link></li>\n          <li><Link to='/about'>About</Link></li>\n        </LinkList>\n      </Header>\n    </nav>)\n  }\n}","import Helmet from 'react-helmet'\nimport React, { Component, Fragment } from 'react'\nimport ReactPixel from 'react-facebook-pixel'\nimport styled, { ThemeProvider } from 'styled-components'\nimport { StaticQuery, graphql } from  'gatsby'\nimport { any, string } from 'prop-types'\nimport { size } from 'polished'\n\nimport GlobalStyle from '../themes/GlobalStyle'\nimport Main from '../components/Main'\nimport Nav from '../components/Nav'\nimport theme from '../themes'\n\nconst LayoutDiv = styled.div`\n  background: ${({ theme }) => theme.bgColor};\n  margin: 1em auto;\n  ${size('100%', '100vw')}\n  max-width: ${({ theme }) => theme.maxWidth}px;\n  position: relative;\n`\n\nconst facebookPixelId = '1915349895435128'\n\nexport default class Layout extends Component {\n  static fbPixelInitialized = false\n  static propTypes = {\n    children: any.isRequired,\n    description: string,\n    title: string\n  }\n  componentDidMount () {\n    if (!Layout.fbPixelInitialized) {\n      ReactPixel.init(facebookPixelId, {}, {})\n      Layout.fbPixelInitialized = true\n    }\n    ReactPixel.pageView()\n  }\n  shouldComponentUpdate = () => false\n  render () {\n    const { children, title, description } = this.props\n    return (<ThemeProvider theme={theme}>\n      <StaticQuery\n        query={graphql`\n          query {\n            site {\n              siteMetadata {\n                description\n                discussShortName\n                googleSearchConsoleOwnershipId\n                siteUrl\n                title\n              }\n            }\n          }\n        `}\n        render={({ site: { siteMetadata } }) => (<Fragment>\n          <Helmet>\n            <html lang='en' amp />\n            <title>{title ? `${siteMetadata.title}: ${title}`: siteMetadata.title}</title>\n            <meta name='description' content={description || siteMetadata.description} />\n            <meta property='og:title' content={title} />\n            <meta property='og:description' content={description || siteMetadata.description} />\n            <meta name='twitter:card' content='summary' />\n            <meta name='twitter:creator' content='PEM___' />\n            <meta name='google-site-verification' content={siteMetadata.googleSearchConsoleOwnershipId} />\n          </Helmet>\n        <Nav title={siteMetadata.title} />\n        <Main>\n          <LayoutDiv>{children({ siteMetadata })}</LayoutDiv>\n        </Main>\n        <GlobalStyle />\n      </Fragment>)}\n      />\n    </ThemeProvider>)\n  }\n}","export default {\n  bgColor: 'white',\n  bodyColor: '#333',\n  borderRadius: '5px',\n  defaultTransition: '.3s ease-in-out',\n  headerColor: '#181818',\n  /* eslint-disable */\n  headerFont: `-apple-system,'BlinkMacSystemFont','Segoe UI','Roboto','Oxygen','Ubuntu','Cantarell','Fira Sans','Droid Sans','Helvetica Neue','sans-serif'`,\n  monospaceFont: `'Andale Mono', 'Ubuntu Mono', monospace`,\n  /* eslint-enable */\n  maxWidth: 960,\n  secondaryColor: '#e70808',\n  smallFontSize: '10px',\n  smallFontWeight: 300,\n  gray: '#7f7f7f',\n  lightGray: '#e7e7e7',\n  warningColor: '#f4ab55'\n}","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}