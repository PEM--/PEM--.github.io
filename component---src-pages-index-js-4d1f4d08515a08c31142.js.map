{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/themes/GlobalStyle.js","webpack:///./src/components/main.js","webpack:///./src/themes/index.js","webpack:///./src/layouts/index.js"],"names":["__webpack_exports__","_ref","_ref$data$allMarkdown","data","allMarkdownRemark","edges","totalCount","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_layouts__WEBPACK_IMPORTED_MODULE_3__","map","_ref2","_ref2$node","node","id","fields","frontmatter","key","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","slug","title","date","query","themes_GlobalStyle","Object","styled_components_browser_esm","_templateObject","theme","secondaryColor","polished_es","_ref3","defaultTransition","_ref4","main","main_templateObject","bgColor","themes","bodyColor","headerColor","maxWidth","lightGray","LayoutDiv","div","layouts_templateObject","Nav","nav","_templateObject2","Header","header","_templateObject3","LinkList","ul","_templateObject4","layouts_Layout","_ref5","children","react_default","gatsby_browser_entry","render","_ref6","site","siteMetadata","react","Helmet_default","meta","name","content","_3892401927","propTypes","prop_types","isRequired"],"mappings":"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","file":"component---src-pages-index-js-4d1f4d08515a08c31142.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport Layout from '../layouts'\n\nexport default ({ data: { allMarkdownRemark: { edges, totalCount } } }) => (<Layout>\n  <h1>List of posts ({totalCount})</h1>\n  <p>Some random thoughts and notes about dev, Math, ML & AI</p>\n  <nav>\n    <ul>\n      {edges.map(({ node: { id, fields, frontmatter } }) => (<li key={id}>\n        <Link to={fields.slug}><p>{frontmatter.title} - {frontmatter.date}</p></Link>\n      </li>))}\n    </ul>\n  </nav>\n</Layout>)\n\n\nexport const query = graphql`\nquery site {\n  allMarkdownRemark {\n    totalCount\n    edges {\n      node {\n        id\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MM/DD/YY\")\n          title\n        }\n      }\n    }\n  }\n}\n`","import { createGlobalStyle } from 'styled-components'\nimport { position, size } from 'polished'\n\nconst GlobalStyle = createGlobalStyle /* css */ `\n  body main {\n    a {\n      position: relative;\n      display: inline-block;\n      background: transparent;\n      color: ${({ theme }) => theme.secondaryColor};\n      font-weight: bold;\n      text-decoration: none;\n      >span {\n        color: inherit;\n        background-color: inherit;\n      }\n      &::after {\n        content: '';\n        ${position('absolute', null, null, '0', '0')}\n        ${size('1px', '100%')}\n        background: ${({ theme }) => theme.secondaryColor};\n        transition:\n          opacity ${({ theme }) => theme.defaultTransition},\n          transform ${({ theme }) => theme.defaultTransition};\n        opacity: 0;\n        transform: translateY(.2em);\n      }\n      &:hover::after {\n        opacity: 1;\n        transform: none;\n      }\n    }\n  }\n`\nexport default GlobalStyle\n","import styled from 'styled-components'\n\nconst Main = styled.main`\n  background: ${({ theme }) => theme.bgColor};\n`\nexport default Main","export default {\n  bodyColor: 'hsla(0,0%,0%,.8)',\n  bgColor: 'white',\n  defaultTransition: '.3s ease-in-out',\n  headerColor: 'hsla(0,0%,0%,.9)',\n  maxWidth: 960,\n  secondaryColor: '#ff0000',\n  lightGray: 'hsla(0,0%,0%,.1)'\n}","import React, { Fragment } from 'react'\nimport Helmet from 'react-helmet'\nimport styled, { ThemeProvider } from 'styled-components'\nimport { StaticQuery, Link, graphql } from  'gatsby'\nimport { any } from 'prop-types'\nimport { size } from 'polished'\n\nimport GlobalStyle from '../themes/GlobalStyle'\nimport Main from '../components/main'\nimport theme from '../themes'\n\nconst LayoutDiv = styled.div`\n  background: ${({ theme }) => theme.bgColor};\n  margin: 1em auto;\n  ${size('100%', '100vw')}\n  max-width: ${({ theme }) => theme.maxWidth}px;\n`\n\nconst Nav = styled.nav`\n  border-bottom: 1px solid ${({ theme }) => theme.lightGray};\n`\n\nconst Header = styled.header`\n  align-items: center;\n  display: flex;\n  justify-content: space-between;\n  margin: 0 auto;\n  max-width: ${({ theme }) => theme.maxWidth}px;\n  padding: .5em 0;\n  >* {\n    display: block;\n    flex: 0 0 auto;\n  }\n  h1 { margin: 0; }\n`\n\nconst LinkList = styled.ul`\n  list-style-type: none;\n  margin: 0;\n  white-space: nowrap;\n  >li { margin: 0; }\n`\n\nconst Layout = ({ children }) => (<ThemeProvider theme={theme}>\n  <StaticQuery\n    query={graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={({ site: { siteMetadata: { title } } }) => (<Fragment>\n      <Helmet\n        title={title}\n        meta={[\n          { name: 'description', content: 'Sample' },\n          { name: 'keywords', content: 'sample, something' },\n        ]}\n      />\n      <Nav>\n        <Header>\n          <Link to='/'><h1>{title}</h1></Link>\n          <LinkList>\n            <li><Link to='/about'>About</Link></li>\n          </LinkList>\n        </Header>\n    </Nav>\n    <Main>\n      <LayoutDiv>{children}</LayoutDiv>\n    </Main>\n    <GlobalStyle />\n  </Fragment>)}\n  />\n</ThemeProvider>)\nLayout.propTypes = {\n  children: any.isRequired\n}\nexport default Layout"],"sourceRoot":""}