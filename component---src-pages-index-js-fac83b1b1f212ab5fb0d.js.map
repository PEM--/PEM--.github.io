{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/themes/GlobalStyle.js","webpack:///./src/components/Main.js","webpack:///./src/components/Nav.js","webpack:///./src/themes/index.js","webpack:///./src/components/Layout.js","webpack:///./src/components/H1.js"],"names":["__webpack_exports__","_ref","_ref$data$allMarkdown","data","allMarkdownRemark","edges","totalCount","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_4__","_components_H1__WEBPACK_IMPORTED_MODULE_3__","map","_ref2","_ref2$node","node","id","fields","frontmatter","key","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","slug","title","date","query","themes_GlobalStyle","Object","styled_components_browser_esm","_templateObject","components_Main","main","withConfig","componentId","theme","bgColor","secondaryColor","polished_es","_ref3","_ref4","defaultTransition","_ref5","NavTag","nav","lightGray","Header","header","maxWidth","LinkList","ul","gray","headerFont","_ref6","_ref7","headerColor","HomeLink","gatsby_browser_entry","_ref8","_ref9","_ref10","Nav","_ref11","react_default","themes","bodyColor","LayoutDiv","div","Layout","children","render","_ref4$site$siteMetada","site","siteMetadata","description","react","Helmet_default","meta","name","content","_4250549439","propTypes","prop_types","isRequired","styled_components__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","h1"],"mappings":"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","file":"component---src-pages-index-js-fac83b1b1f212ab5fb0d.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport H1 from '../components/H1'\nimport Layout from '../components/Layout'\n\nexport default ({ data: { allMarkdownRemark: { edges, totalCount } } }) => (<Layout>\n  <H1>List of posts <small>{totalCount} posts</small></H1>\n  <nav>\n    <ul>\n      {edges.map(({ node: { id, fields, frontmatter } }) => (<li key={id}>\n        <Link to={fields.slug}><p>{frontmatter.title} - {frontmatter.date}</p></Link>\n      </li>))}\n    </ul>\n  </nav>\n</Layout>)\n\n\nexport const query = graphql`\nquery site {\n  allMarkdownRemark {\n    totalCount\n    edges {\n      node {\n        id\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MM/DD/YY\")\n          title\n        }\n      }\n    }\n  }\n}\n`","import { createGlobalStyle } from 'styled-components'\n\nconst GlobalStyle = createGlobalStyle /* css */ `\n  html, body, #___gatsby, #___gatsby>div {\n    height: 100%;\n  }\n`\nexport default GlobalStyle\n","import styled from 'styled-components'\nimport { position, size } from 'polished'\n\nconst Main = styled.main`\n  background: ${({ theme }) => theme.bgColor};\n  a {\n    position: relative;\n    display: inline-block;\n    background: transparent;\n    color: ${({ theme }) => theme.secondaryColor};\n    font-weight: bold;\n    text-decoration: none;\n    >span {\n      color: inherit;\n      background-color: inherit;\n    }\n    &::after {\n      content: '';\n      ${position('absolute', null, null, '0', '0')}\n      ${size('1px', '100%')}\n      background: ${({ theme }) => theme.secondaryColor};\n      transition:\n        opacity ${({ theme }) => theme.defaultTransition},\n        transform ${({ theme }) => theme.defaultTransition};\n      opacity: 0;\n      transform: translateY(.2em);\n    }\n    &:hover::after {\n      opacity: 1;\n      transform: none;\n    }\n  }\n`\nexport default Main","import React from 'react'\nimport styled from 'styled-components'\nimport { Link } from  'gatsby'\nimport { position, size } from 'polished'\n\nconst NavTag = styled.nav`\n  border-bottom: 1px solid ${({ theme }) => theme.lightGray};\n`\n\nconst Header = styled.header`\n  margin: 0 auto;\n  max-width: ${({ theme }) => theme.maxWidth}px;\n  a { text-decoration: none; }\n`\n\nconst LinkList = styled.ul`\n  display: block;\n  list-style-type: none;\n  margin: 0;\n  text-align: right;\n  position: relative;\n  white-space: nowrap;\n  width: 100%;\n  &::before {\n    content: '';\n    display: block;\n    background: linear-gradient(\n      to right,\n      transparent,\n      ${({ theme }) => theme.lightGray},\n      transparent\n    );\n    ${position('absolute', 0, null, null, null)}\n    ${size('1px', '100%')}\n  }\n  >li, a {\n    color: ${({ theme }) => theme.gray};\n    font-family: ${({ theme }) => theme.headerFont};\n    font-size: 14px;\n    margin: 0;\n    padding: 1em 0;\n    text-transform: uppercase;\n    transition: color ${({ theme }) => theme.defaultTransition};\n    &:not(:first-child) { margin-left: 1em; }\n    &:hover, &:active {\n      color: ${({ theme }) => theme.headerColor};\n    }\n  }\n`\n\nconst HomeLink = styled(Link)`\n  display: block;\n  text-align: center;\n  h1 {\n    display: inline-block;\n    margin: .5em;\n    font-weight: 900;\n    font-size: 22px;\n    letter-spacing: 1px;\n    position: relative;\n    transition: color ${({ theme }) => theme.defaultTransition};\n    &::after {\n      content: '';\n      border-radius: 50%;\n      display: block;\n      background: ${({ theme }) => theme.secondaryColor};\n      ${position('absolute', '10px', '-1em', null, null)}\n      ${size('10px')}\n    }\n    &:hover, &:active {\n      color: ${({ theme }) => theme.secondaryColor};\n    }\n  }\n`\n\nexport default function Nav ({ title }) {\n  return (<NavTag>\n    <Header>\n      <HomeLink to='/'><h1>{title}</h1></HomeLink>\n      <LinkList>\n        <li><Link to='/about'>About</Link></li>\n      </LinkList>\n    </Header>\n  </NavTag>)\n}","export default {\n  bodyColor: 'hsla(0,0%,0%,.8)',\n  bgColor: 'white',\n  defaultTransition: '.3s ease-in-out',\n  headerColor: 'hsla(0,0%,0%,.9)',\n  headerFont: `-apple-system,'BlinkMacSystemFont','Segoe UI','Roboto','Oxygen','Ubuntu','Cantarell','Fira Sans','Droid Sans','Helvetica Neue','sans-serif'`,\n  maxWidth: 960,\n  secondaryColor: '#ff0000',\n  gray: 'hsla(0,0%,0%,.5)',\n  lightGray: 'hsla(0,0%,0%,.1)'\n}","import React, { Fragment } from 'react'\nimport Helmet from 'react-helmet'\nimport styled, { ThemeProvider } from 'styled-components'\nimport { StaticQuery, graphql } from  'gatsby'\nimport { any } from 'prop-types'\nimport { size } from 'polished'\n\nimport GlobalStyle from '../themes/GlobalStyle'\nimport Main from '../components/Main'\nimport Nav from '../components/Nav'\nimport theme from '../themes'\n\nconst LayoutDiv = styled.div`\n  background: ${({ theme }) => theme.bgColor};\n  margin: 1em auto;\n  ${size('100%', '100vw')}\n  max-width: ${({ theme }) => theme.maxWidth}px;\n`\n\nexport default function Layout ({ children }) {\n  return (<ThemeProvider theme={theme}>\n    <StaticQuery\n      query={graphql`\n        query {\n          site {\n            siteMetadata {\n              description\n              title\n            }\n          }\n        }\n      `}\n      render={({ site: { siteMetadata: { description, title } } }) => (<Fragment>\n        <Helmet\n          title={title}\n          meta={[\n            { name: 'description', content: description }\n          ]}\n        />\n      <Nav title={title} />\n      <Main>\n        <LayoutDiv>{children}</LayoutDiv>\n      </Main>\n      <GlobalStyle />\n    </Fragment>)}\n    />\n  </ThemeProvider>)\n}\nLayout.propTypes = {\n  children: any.isRequired\n}","import styled from 'styled-components'\nimport { position } from 'polished'\n\nexport default styled.h1`\n  position: relative;\n  width: calc(100% - 60px);\n  small {\n    color: ${({ theme }) => theme.lightGray};\n    display: block;\n    font-size: .4em;\n    font-style: italic;\n    ${position('absolute', null, '-60px', 0, null)}\n    text-align: right;\n    width: 60px;\n  }\n`"],"sourceRoot":""}