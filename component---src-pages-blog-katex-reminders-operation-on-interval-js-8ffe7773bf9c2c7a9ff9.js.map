{"version":3,"sources":["webpack:///./src/pages/blog/katex-reminders/OperationOnInterval.js","webpack:///./node_modules/@babel/runtime/helpers/taggedTemplateLiteralLoose.js","webpack:///./src/components/Katex.js","webpack:///./node_modules/core-js/modules/es6.string.raw.js"],"names":["__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components_Katex__WEBPACK_IMPORTED_MODULE_3__","displayMode","formulae","String","raw","_templateObject","module","exports","strings","slice","SpanWarning","styled_components__WEBPACK_IMPORTED_MODULE_6__","span","withConfig","componentId","_ref","theme","warningColor","Katex","shouldComponentUpdate","_ref2","_this","props","render","__html","katex__WEBPACK_IMPORTED_MODULE_5___default","renderToString","this","react__WEBPACK_IMPORTED_MODULE_4___default","dangerouslySetInnerHTML","err","formattedError","toString","replace","react__WEBPACK_IMPORTED_MODULE_4__","propTypes","prop_types__WEBPACK_IMPORTED_MODULE_7__","isRequired","$export","__webpack_require__","toIObject","toLength","S","callSite","tpl","len","length","aLen","arguments","res","i","push","join"],"mappings":"6jBAIeA,EAAA,mBACb,OAAOC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACLC,aAAW,EACXC,SAAUC,OAAOC,IAATC,2BCEZC,EAAAC,QATA,SAAAC,EAAAJ,GAMA,OALAA,IACAA,EAAAI,EAAAC,MAAA,IAGAD,EAAAJ,MACAI,+JCDME,EAAcC,EAAA,EAAOC,KAAVC,WAAA,CAAAC,YAAA,gBAAGH,CAAH,eACN,SAAAI,GAAA,OAAAA,EAAGC,MAAkBC,eAGXC,sJAKnBC,sBAAwB,SAAAC,GAAA,IAAGlB,EAAHkB,EAAGlB,SAAH,OAAkBmB,EAAKC,MAAMpB,WAAaA,iCAClEqB,kBACE,IACE,IAAMC,EAASC,EAAA3B,EAAM4B,eACnBC,KAAKL,MAAMpB,SACX,CAAED,YAAa0B,KAAKL,MAAMrB,cAE5B,OAAO2B,EAAA9B,EAAAC,cAAA,QAAM8B,wBAAyB,CAAEL,YACxC,MAAOM,GACP,IAAMC,EAAiBD,EAAIE,WACxBC,QAAQ,kCAAmC,IAC9C,OAAOL,EAAA9B,EAAAC,cAACW,EAAD,KAAcqB,QAhBQG,EAAA,WAAdhB,EACZiB,UAAY,CACjBlC,YAAamC,EAAA,KACblC,SAAUkC,EAAA,OAAOC,iCCZrB,IAAAC,EAAcC,EAAQ,GACtBC,EAAgBD,EAAQ,IACxBE,EAAeF,EAAQ,IAEvBD,IAAAI,EAAA,UAEAtC,IAAA,SAAAuC,GAMA,IALA,IAAAC,EAAAJ,EAAAG,EAAAvC,KACAyC,EAAAJ,EAAAG,EAAAE,QACAC,EAAAC,UAAAF,OACAG,EAAA,GACAC,EAAA,EACAL,EAAAK,GACAD,EAAAE,KAAAhD,OAAAyC,EAAAM,OACAA,EAAAH,GAAAE,EAAAE,KAAAhD,OAAA6C,UAAAE,KACK,OAAAD,EAAAG,KAAA","file":"component---src-pages-blog-katex-reminders-operation-on-interval-js-8ffe7773bf9c2c7a9ff9.js","sourcesContent":["import React from 'react'\n\nimport Katex from '../../../components/Katex'\n\nexport default function () {\n  return <Katex\n    displayMode\n    formulae={String.raw`\n      \\begin{aligned}\n        S_n &= \\sum_{n\\in\\N} a^n \\\\\n            &= 1 + a + a^2 + \\dots + a^n \\\\\n            &= \\cfrac{1 - a^{n+1}}{1 - a}\n      \\end{aligned}\n    `}\n  />\n}","function _taggedTemplateLiteralLoose(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  strings.raw = raw;\n  return strings;\n}\n\nmodule.exports = _taggedTemplateLiteralLoose;","import React, { Component } from 'react'\nimport katex from 'katex'\nimport styled from 'styled-components'\nimport { bool, string } from 'prop-types'\n\nconst SpanWarning = styled.span`\n  color: ${({ theme }) => theme.warningColor};\n`\n\nexport default class Katex extends Component {\n  static propTypes = {\n    displayMode: bool,\n    formulae: string.isRequired\n  }\n  shouldComponentUpdate = ({ formulae }) => this.props.formulae !== formulae\n  render () {\n    try {\n      const __html = katex.renderToString(\n        this.props.formulae,\n        { displayMode: this.props.displayMode }\n      )\n      return <span dangerouslySetInnerHTML={{ __html }} />\n    } catch (err) {\n      const formattedError = err.toString()\n        .replace('ParseError: KaTeX parse error: ', '')\n      return <SpanWarning>{formattedError}</SpanWarning>\n    }\n  }\n}","var $export = require('./_export');\nvar toIObject = require('./_to-iobject');\nvar toLength = require('./_to-length');\n\n$export($export.S, 'String', {\n  // 21.1.2.4 String.raw(callSite, ...substitutions)\n  raw: function raw(callSite) {\n    var tpl = toIObject(callSite.raw);\n    var len = toLength(tpl.length);\n    var aLen = arguments.length;\n    var res = [];\n    var i = 0;\n    while (len > i) {\n      res.push(String(tpl[i++]));\n      if (i < aLen) res.push(String(arguments[i]));\n    } return res.join('');\n  }\n});\n"],"sourceRoot":""}