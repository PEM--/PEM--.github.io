{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/themes/GlobalStyle.js","webpack:///./src/components/Main.js","webpack:///./src/themes/index.js","webpack:///./src/themes/typography.js","webpack:///./src/components/Nav.js","webpack:///./src/layouts/index.js"],"names":["__webpack_exports__","_ref","_ref$data$allMarkdown","data","allMarkdownRemark","edges","totalCount","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_layouts__WEBPACK_IMPORTED_MODULE_3__","map","_ref2","_ref2$node","node","id","fields","frontmatter","key","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","slug","title","date","query","themes_GlobalStyle","Object","styled_components_browser_esm","_templateObject","components_Main","main","Main_templateObject","theme","bgColor","secondaryColor","polished_es","_ref3","_ref4","defaultTransition","_ref5","themes","bodyColor","headerColor","headerFont","maxWidth","gray","lightGray","modifiedTheme","assign","omit_default","typography_theme_lawton_dist_default","headerFontFamily","replace","split","headerWeight","dist_default","NavTag","nav","Nav_templateObject","Header","header","_templateObject2","LinkList","ul","_templateObject3","_ref6","_ref7","HomeLink","gatsby_browser_entry","_templateObject4","_ref8","_ref9","_ref10","Nav","_ref11","react_default","LayoutDiv","div","layouts_templateObject","layouts_Layout","children","render","site","siteMetadata","react","Helmet_default","meta","name","content","_3892401927","propTypes","prop_types","isRequired"],"mappings":"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","file":"component---src-pages-index-js-eaf09daed03d1e28983e.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport Layout from '../layouts'\n\nexport default ({ data: { allMarkdownRemark: { edges, totalCount } } }) => (<Layout>\n  <h1>List of posts ({totalCount})</h1>\n  <p>Some random thoughts and notes about dev, Math, ML & AI</p>\n  <nav>\n    <ul>\n      {edges.map(({ node: { id, fields, frontmatter } }) => (<li key={id}>\n        <Link to={fields.slug}><p>{frontmatter.title} - {frontmatter.date}</p></Link>\n      </li>))}\n    </ul>\n  </nav>\n</Layout>)\n\n\nexport const query = graphql`\nquery site {\n  allMarkdownRemark {\n    totalCount\n    edges {\n      node {\n        id\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MM/DD/YY\")\n          title\n        }\n      }\n    }\n  }\n}\n`","import { createGlobalStyle } from 'styled-components'\n\nconst GlobalStyle = createGlobalStyle /* css */ `\n  html, body, #___gatsby, #___gatsby>div {\n    height: 100%;\n  }\n`\nexport default GlobalStyle\n","import styled from 'styled-components'\nimport { position, size } from 'polished'\n\nconst Main = styled.main`\n  background: ${({ theme }) => theme.bgColor};\n  a {\n    position: relative;\n    display: inline-block;\n    background: transparent;\n    color: ${({ theme }) => theme.secondaryColor};\n    font-weight: bold;\n    text-decoration: none;\n    >span {\n      color: inherit;\n      background-color: inherit;\n    }\n    &::after {\n      content: '';\n      ${position('absolute', null, null, '0', '0')}\n      ${size('1px', '100%')}\n      background: ${({ theme }) => theme.secondaryColor};\n      transition:\n        opacity ${({ theme }) => theme.defaultTransition},\n        transform ${({ theme }) => theme.defaultTransition};\n      opacity: 0;\n      transform: translateY(.2em);\n    }\n    &:hover::after {\n      opacity: 1;\n      transform: none;\n    }\n  }\n`\nexport default Main","export default {\n  bodyColor: 'hsla(0,0%,0%,.8)',\n  bgColor: 'white',\n  defaultTransition: '.3s ease-in-out',\n  headerColor: 'hsla(0,0%,0%,.9)',\n  headerFont: `-apple-system,'BlinkMacSystemFont','Segoe UI','Roboto','Oxygen','Ubuntu','Cantarell','Fira Sans','Droid Sans','Helvetica Neue','sans-serif'`,\n  maxWidth: 960,\n  secondaryColor: '#ff0000',\n  gray: 'hsla(0,0%,0%,.5)',\n  lightGray: 'hsla(0,0%,0%,.1)'\n}","import Typography from 'typography'\nimport lawtonTheme from 'typography-theme-lawton'\nimport omit from 'lodash/omit'\nimport theme from '.'\n\n// More info here:\n// https://github.com/KyleAMathews/typography.js/blob/master/packages/typography-theme-lawton/src/index.js\nconst modifiedTheme = {\n  ...omit(lawtonTheme, 'overrideStyles'),\n  headerFontFamily: theme.headerFont.replace(/'/g, '').split(','),\n  headerWeight: 500,\n  headerColor: theme.headerColor,\n  bodyColor: theme.bodyColor\n}\nconst typography = new Typography(modifiedTheme)\n\nexport default typography","import React from 'react'\nimport styled from 'styled-components'\nimport { Link } from  'gatsby'\nimport { position, size } from 'polished'\n\nimport typography from '../themes/typography'\n\nconsole.log('typography', typography)\n\nconst NavTag = styled.nav`\n  border-bottom: 1px solid ${({ theme }) => theme.lightGray};\n`\n\nconst Header = styled.header`\n  margin: 0 auto;\n  max-width: ${({ theme }) => theme.maxWidth}px;\n  a { text-decoration: none; }\n`\n\nconst LinkList = styled.ul`\n  display: block;\n  list-style-type: none;\n  margin: 0;\n  text-align: right;\n  position: relative;\n  white-space: nowrap;\n  width: 100%;\n  &::before {\n    content: '';\n    display: block;\n    background: linear-gradient(\n      to right,\n      transparent,\n      ${({ theme }) => theme.lightGray},\n      transparent\n    );\n    ${position('absolute', 0, null, null, null)}\n    ${size('1px', '100%')}\n  }\n  >li, a {\n    color: ${({ theme }) => theme.gray};\n    font-family: ${({ theme }) => theme.headerFont};\n    font-size: 14px;\n    margin: 0;\n    padding: 1em 0;\n    text-transform: uppercase;\n    transition: color ${({ theme }) => theme.defaultTransition};\n    &:not(:first-child) { margin-left: 1em; }\n    &:hover, &:active {\n      color: ${({ theme }) => theme.headerColor};\n    }\n  }\n`\n\nconst HomeLink = styled(Link)`\n  display: block;\n  text-align: center;\n  h1 {\n    display: inline-block;\n    margin: .5em;\n    font-weight: 900;\n    font-size: 22px;\n    letter-spacing: 1px;\n    position: relative;\n    transition: color ${({ theme }) => theme.defaultTransition};\n    &::after {\n      content: '';\n      border-radius: 50%;\n      display: block;\n      background: ${({ theme }) => theme.secondaryColor};\n      ${position('absolute', '10px', '-1em', null, null)}\n      ${size('10px')}\n    }\n    &:hover, &:active {\n      color: ${({ theme }) => theme.secondaryColor};\n    }\n  }\n`\n\nexport default function Nav ({ title }) {\n  return (<NavTag>\n    <Header>\n      <HomeLink to='/'><h1>{title}</h1></HomeLink>\n      <LinkList>\n        <li><Link to='/about'>About</Link></li>\n      </LinkList>\n    </Header>\n  </NavTag>)\n}","import React, { Fragment } from 'react'\nimport Helmet from 'react-helmet'\nimport styled, { ThemeProvider } from 'styled-components'\nimport { StaticQuery, graphql } from  'gatsby'\nimport { any } from 'prop-types'\nimport { size } from 'polished'\n\nimport GlobalStyle from '../themes/GlobalStyle'\nimport Main from '../components/Main'\nimport Nav from '../components/Nav'\nimport theme from '../themes'\n\nconst LayoutDiv = styled.div`\n  background: ${({ theme }) => theme.bgColor};\n  margin: 1em auto;\n  ${size('100%', '100vw')}\n  max-width: ${({ theme }) => theme.maxWidth}px;\n`\n\nconst Layout = ({ children }) => (<ThemeProvider theme={theme}>\n  <StaticQuery\n    query={graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={({ site: { siteMetadata: { title } } }) => (<Fragment>\n      <Helmet\n        title={title}\n        meta={[\n          { name: 'description', content: 'Sample' },\n          { name: 'keywords', content: 'sample, something' },\n        ]}\n      />\n    <Nav title={title} />\n    <Main>\n      <LayoutDiv>{children}</LayoutDiv>\n    </Main>\n    <GlobalStyle />\n  </Fragment>)}\n  />\n</ThemeProvider>)\nLayout.propTypes = {\n  children: any.isRequired\n}\nexport default Layout"],"sourceRoot":""}