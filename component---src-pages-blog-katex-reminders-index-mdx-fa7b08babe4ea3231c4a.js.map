{"version":3,"sources":["webpack:///./src/components/Blog/katex-reminders/AnnotationLower.js","webpack:///./src/components/Blog/katex-reminders/Existence.js","webpack:///./src/components/Blog/katex-reminders/FakeUnicode.js","webpack:///./src/components/Blog/katex-reminders/OperationOnInterval.js","webpack:///./src/components/Blog/katex-reminders/VectorAndMatrix.js","webpack:///./src/pages/blog/katex-reminders/index.mdx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/hoc/noUpdate.js","webpack:///./src/themes/GlobalStyle.js","webpack:///./src/themes/prism.js","webpack:///./src/components/Main.js","webpack:///./src/components/Nav.js","webpack:///./src/components/Layout.js","webpack:///./src/themes/index.js","webpack:///./src/components/ExternalLink.js","webpack:///./node_modules/lodash/isArray.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/ShareIconBar.js","webpack:///./node_modules/lodash/_Symbol.js","webpack:///./node_modules/lodash/_root.js","webpack:///./node_modules/lodash/isObjectLike.js","webpack:///./node_modules/lodash/_baseGetTag.js","webpack:///./node_modules/@mdx-js/tag/dist/index.js","webpack:///./node_modules/@mdx-js/tag/dist/mdx-provider.js","webpack:///./node_modules/disqus-react/lib/utils.js","webpack:///./src/components/H1.js","webpack:///./node_modules/lodash/_freeGlobal.js","webpack:///./node_modules/lodash/_getRawTag.js","webpack:///./node_modules/lodash/_objectToString.js","webpack:///./node_modules/lodash/isString.js","webpack:///./src/components/Contribute.js","webpack:///./src/components/MdxRenderer.js","webpack:///./src/components/BlogTemplate.js","webpack:///./node_modules/disqus-react/lib/index.js","webpack:///./node_modules/core-js/modules/es6.string.ends-with.js","webpack:///./src/components/Katex.js","webpack:///./node_modules/@mdx-js/tag/dist/mdx-tag.js","webpack:///./node_modules/disqus-react/lib/CommentCount.js","webpack:///./node_modules/disqus-react/lib/CommentEmbed.js","webpack:///./node_modules/disqus-react/lib/DiscussionEmbed.js","webpack:///./node_modules/core-js/modules/_string-context.js","webpack:///./node_modules/core-js/modules/_fails-is-regexp.js","webpack:///./node_modules/core-js/modules/es6.string.raw.js","webpack:///./node_modules/core-js/modules/es6.regexp.to-string.js","webpack:///./node_modules/core-js/modules/_flags.js","webpack:///./node_modules/core-js/modules/es6.date.to-string.js","webpack:///./node_modules/katex/dist/katex.js","webpack:///./node_modules/core-js/modules/es6.regexp.flags.js"],"names":["AnnotationLower","react_default","a","createElement","Katex","displayMode","formulae","Existence","String","raw","_templateObject","FakeUnicode","style","fontWeight","fontSize","FakeUnicode_templateObject","OperationOnInterval","OperationOnInterval_templateObject","VectorAndMatrix","VectorAndMatrix_templateObject","__webpack_exports__","_ref","components","props","objectWithoutPropertiesLoose_default","dist","name","Layout","DefaultLayout","layoutProps","className","data-language","parentName","lib_default","text","href","gatsby_browser_entry","to","_frontmatter","__webpack_require__","r","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","Consumer","staticQueryData","data","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","recompose__WEBPACK_IMPORTED_MODULE_0__","noUpdate","shouldUpdate","GlobalStyle","createGlobalStyle","theme","lightGray","_ref2","borderRadius","_ref3","bodyColor","monospaceFont","gray","secondaryColor","prism","Main","styled","main","withConfig","componentId","bgColor","position","size","_ref4","defaultTransition","_ref5","Header","header","maxWidth","LinkList","ul","headerFont","_ref6","headerColor","HomeLink","Link","_ref7","_ref8","_ref9","Nav","shouldComponentUpdate","this","title","Component","LayoutDiv","div","componentDidMount","fbPixelInitialized","ReactPixel","init","pageView","_this$props","description","styled_components_browser_esm","siteMetadata","site","react","Helmet_default","lang","amp","content","property","googleSearchConsoleOwnershipId","Nav_Nav","components_Main","themes_GlobalStyle","_4226086209","any","smallFontSize","smallFontWeight","warningColor","ExternalLink","react__WEBPACK_IMPORTED_MODULE_1___default","target","rel","isArray","Array","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0___default","json","shape","ShareIconBarContainer","ShareIconBar","_this","shareButtonProps","url","react__WEBPACK_IMPORTED_MODULE_2___default","react_share__WEBPACK_IMPORTED_MODULE_4__","Object","assign","react_share__WEBPACK_IMPORTED_MODULE_5__","shareIconProps","react_share__WEBPACK_IMPORTED_MODULE_6__","react_share__WEBPACK_IMPORTED_MODULE_7__","react_share__WEBPACK_IMPORTED_MODULE_8__","subject","react_share__WEBPACK_IMPORTED_MODULE_9__","round","Symbol","freeGlobal","freeSelf","self","root","Function","value","getRawTag","objectToString","nullTag","undefinedTag","symToStringTag","toStringTag","undefined","defineProperty","_mdxTag","enumerable","get","_interopRequireDefault","_mdxProvider","obj","__esModule","withMDXComponents","_extends","i","arguments","length","source","key","prototype","hasOwnProperty","call","_react2","_createReactContext3","_propTypes2","_createReactContext","Provider","keys","indexOf","_objectWithoutProperties","contextComponents","MDXProvider","element","insertScript","src","id","parentElement","script","window","document","async","appendChild","removeScript","getElementById","removeChild","debounce","wait","runOnFirstCall","timeout","context","args","callNow","clearTimeout","setTimeout","apply","styled_components__WEBPACK_IMPORTED_MODULE_0__","polished__WEBPACK_IMPORTED_MODULE_1__","h1","global","objectProto","nativeObjectToString","toString","isOwn","tag","unmasked","e","result","baseGetTag","isObjectLike","stringTag","ContributeContainer","span","Contribute","slug","Blockquote","blockquote","PwithSemiColonRaw","p","PwithSemiColon","isEndWithSemiColon","isString","endsWith","MdxRenderer","MdxRenderer_PwithSemiColon","CommentsContainer","MoizedBlogTemplate","moize","frontmatter","pageContext","discussConfig","identifier","H1","format","date","contribute","Contribute_Contribute","MdxRenderer_MdxRenderer","comment","DiscussionEmbed","config","shortname","discussShortName","CommentEmbed","CommentCount","_CommentCount","_CommentEmbed","_DiscussionEmbed","Disqus","$export","toLength","$endsWith","P","F","searchString","that","endPosition","len","end","Math","min","search","slice","SpanWarning","__html","katex","renderToString","react__WEBPACK_IMPORTED_MODULE_4___default","dangerouslySetInnerHTML","err","formattedError","replace","bool","_createClass","defineProperties","descriptor","configurable","writable","Constructor","protoProps","staticProps","_react","_hoistNonReactStatics2","defaults","inlineCode","wrapper","MDXTag","_Component","instance","TypeError","_classCallCheck","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","subClass","superClass","create","constructor","setPrototypeOf","_inherits","_props","_props$props","childProps","_props$components","_utils","queueResetCount","DISQUSWIDGETS","getCount","reset","_React$Component","loadInstance","nextProps","nextConfig","cleanInstance","doc","body","data-disqus-identifier","data-disqus-url","Number","commentId","showParentComment","showMedia","getSrc","width","height","seamless","scrolling","frameBorder","defaultProps","disqus_shortname","DISQUS","reload","getDisqusConfig","disqus_config","error","disqusThread","hasChildNodes","firstChild","page","callbacks","onNewComment","isRegExp","defined","NAME","MATCH","KEY","re","f","toIObject","S","callSite","tpl","aLen","res","push","join","anObject","$flags","DESCRIPTORS","$toString","define","fn","RegExp","flags","R","concat","ignoreCase","multiline","unicode","sticky","DateProto","Date","getTime","NaN","factory","modules","installedModules","moduleId","l","c","getter","o","t","mode","ns","bind","s","classCallCheck","classCallCheck_default","src_SourceLocation","SourceLocation","lexer","start","range","first","second","loc","Token_Token","Token","endToken","ParseError_ParseError","ParseError","message","token","input","underlined","src_ParseError","uppercase","ESCAPE_LOOKUP","&",">","<","\"","'","ESCAPE_REGEX","getBaseElem","group","type","assert","utils","contains","list","elem","deflt","setting","defaultIfUndefined","escape","match","hyphenate","str","toLowerCase","isCharacterBox","baseElem","src_Settings","Settings","options","throwOnError","errorColor","macros","colorIsTextColor","strict","maxSize","max","Infinity","maxExpand","allowedProtocols","reportNonstrict","errorCode","errorMsg","console","warn","useStrictBehavior","Style_Style","Style","cramped","sup","Style_styles","_sup","sub","_sub","fracNum","_fracNum","fracDen","_fracDen","cramp","_cramp","_text","isTight","src_Style","DISPLAY","TEXT","SCRIPT","SCRIPTSCRIPT","scriptData","blocks","allBlocks","supportedCodepoint","codepoint","forEach","b","svgGeometry","path","sqrtMain","sqrtSize1","sqrtSize2","sqrtSize3","sqrtSize4","doubleleftarrow","doublerightarrow","leftarrow","leftbrace","leftbraceunder","leftgroup","leftgroupunder","leftharpoon","leftharpoonplus","leftharpoondown","leftharpoondownplus","lefthook","leftlinesegment","leftmapsto","leftToFrom","longequal","midbrace","midbraceunder","oiintSize1","oiintSize2","oiiintSize1","oiiintSize2","rightarrow","rightbrace","rightbraceunder","rightgroup","rightgroupunder","rightharpoon","rightharpoonplus","rightharpoondown","rightharpoondownplus","righthook","rightlinesegment","rightToFrom","twoheadleftarrow","twoheadrightarrow","tilde1","tilde2","tilde3","tilde4","vec","widehat1","widehat2","widehat3","widehat4","widecheck1","widecheck2","widecheck3","widecheck4","baraboveleftarrow","rightarrowabovebar","baraboveshortleftharpoon","rightharpoonaboveshortbar","shortbaraboveleftharpoon","shortrightharpoonabovebar","tree_DocumentFragment","DocumentFragment","classes","depth","maxFontSize","hasClass","tryCombine","sibling","toNode","frag","createDocumentFragment","toMarkup","markup","toText","child","map","createClass","filter","cls","initNode","attributes","color","getColor","_toNode","tagName","node","_style","attr","setAttribute","domTree_toMarkup","styles","_style2","domTree_Span","Span","attribute","domTree_Anchor","Anchor","iCombinations","î","ï","í","ì","domTree_SymbolNode","SymbolNode","italic","skew","_i","block","scriptFromCodepoint","charCodeAt","test","_style3","_style4","createTextNode","_style5","marginRight","needsSpan","_style6","escaped","domTree_SvgNode","SvgNode","createElementNS","domTree_PathNode","PathNode","pathName","alternate","domTree_LineNode","LineNode","fontMetricsData","AMS-Regular","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","107","165","174","240","295","710","732","770","771","989","1008","8245","8463","8487","8498","8502","8503","8504","8513","8592","8594","8602","8603","8606","8608","8610","8611","8619","8620","8621","8622","8624","8625","8630","8631","8634","8635","8638","8639","8642","8643","8644","8646","8647","8648","8649","8650","8651","8652","8653","8654","8655","8666","8667","8669","8672","8674","8705","8708","8709","8717","8722","8724","8726","8733","8736","8737","8738","8739","8740","8741","8742","8756","8757","8764","8765","8769","8770","8774","8776","8778","8782","8783","8785","8786","8787","8790","8791","8796","8806","8807","8808","8809","8812","8814","8815","8816","8817","8818","8819","8822","8823","8828","8829","8830","8831","8832","8833","8840","8841","8842","8843","8847","8848","8858","8859","8861","8862","8863","8864","8865","8872","8873","8874","8876","8877","8878","8879","8882","8883","8884","8885","8888","8890","8891","8892","8901","8903","8905","8906","8907","8908","8909","8910","8911","8912","8913","8914","8915","8916","8918","8919","8920","8921","8922","8923","8926","8927","8928","8929","8934","8935","8936","8937","8938","8939","8940","8941","8994","8995","9416","9484","9488","9492","9496","9585","9586","9632","9633","9650","9651","9654","9660","9661","9664","9674","9733","10003","10016","10731","10846","10877","10878","10885","10886","10887","10888","10889","10890","10891","10892","10901","10902","10933","10934","10935","10936","10937","10938","10949","10950","10955","10956","57350","57351","57352","57353","57356","57357","57358","57359","57360","57361","57366","57367","57368","57369","57370","57371","Caligraphic-Regular","48","49","50","51","52","53","54","55","56","57","Fraktur-Regular","33","34","38","39","40","41","42","43","44","45","46","47","58","59","61","63","91","93","94","97","98","99","100","101","102","103","104","105","106","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","8216","8217","58112","58113","58114","58115","58116","58117","58118","58119","Main-Bold","35","36","37","60","62","64","92","95","123","124","125","126","168","172","176","177","184","198","215","216","223","230","247","248","305","338","339","567","711","713","714","715","728","729","730","733","824","915","916","920","923","926","928","931","933","934","936","937","8211","8212","8220","8221","8224","8225","8242","8407","8465","8467","8472","8476","8501","8593","8595","8596","8597","8598","8599","8600","8601","8636","8637","8640","8641","8656","8657","8658","8659","8660","8661","8704","8706","8707","8711","8712","8715","8723","8725","8727","8728","8729","8730","8734","8743","8744","8745","8746","8747","8768","8771","8781","8801","8804","8805","8810","8811","8826","8827","8834","8835","8838","8839","8846","8849","8850","8851","8852","8853","8854","8855","8856","8857","8866","8867","8868","8869","8900","8902","8968","8969","8970","8971","9657","9667","9711","9824","9825","9826","9827","9837","9838","9839","10216","10217","10815","10927","10928","Main-BoldItalic","163","Main-Italic","Main-Regular","32","160","167","182","8230","8614","8617","8618","8773","8784","8800","8904","8942","8943","8945","9136","9137","10222","10223","10229","10230","10231","10232","10233","10234","10236","Math-BoldItalic","945","946","947","948","949","950","951","952","953","954","955","956","957","958","959","960","961","962","963","964","965","966","967","968","969","977","981","982","1009","1013","Math-Italic","Math-Regular","SansSerif-Bold","180","SansSerif-Italic","SansSerif-Regular","Script-Regular","Size1-Regular","8214","8719","8720","8721","8748","8749","8750","8896","8897","8898","8899","9168","10752","10753","10754","10756","10758","Size2-Regular","Size3-Regular","Size4-Regular","9115","9116","9117","9118","9119","9120","9121","9122","9123","9124","9125","9126","9127","9128","9129","9130","9131","9132","9133","9143","57344","57345","57680","57681","57682","57683","Typewriter-Regular","96","127","776","9251","sigmasAndXis","slant","space","stretch","shrink","xHeight","quad","extraSpace","num1","num2","num3","denom1","denom2","sup1","sup2","sup3","sub1","sub2","supDrop","subDrop","delim1","delim2","axisHeight","defaultRuleThickness","bigOpSpacing1","bigOpSpacing2","bigOpSpacing3","bigOpSpacing4","bigOpSpacing5","sqrtRuleThickness","ptPerEm","doubleRuleSep","extraCharacterMap","Å","Ç","Ð","Þ","å","ç","ð","þ","А","Б","В","Г","Д","Е","Ж","З","И","Й","К","Л","М","Н","О","П","Р","С","Т","У","Ф","Х","Ц","Ч","Ш","Щ","Ъ","Ы","Ь","Э","Ю","Я","а","б","в","г","д","е","ж","з","и","й","к","л","м","н","о","п","р","с","т","у","ф","х","ц","ч","ш","щ","ъ","ы","ь","э","ю","я","getCharacterMetrics","character","font","ch","metrics","fontMetricsBySizeIndex","ATOMS","bin","close","inner","open","punct","NON_ATOMS","accent-token","mathord","op-token","spacing","textord","symbols","math","src_symbols","defineSymbol","acceptUnicodeChar","ams","op","ligatures","--","---","``","''","symbols_i","symbols_ch","charAt","src_symbols_i","_ch","letters","symbols_i2","_ch2","symbols_wideChar","_i3","_ch3","fromCharCode","_i4","_ch4","_i5","_ch5","wideLatinLetterData","wideNumeralData","sizeStyleMap","sizeMultipliers","sizeAtStyle","Options_Options","Options","BASESIZE","textSize","phantom","fontFamily","fontShape","sizeMultiplier","_fontMetrics","extend","extension","havingStyle","havingCrampedStyle","havingSize","havingBaseStyle","wantSize","havingBaseSizing","withColor","withPhantom","withFont","withTextFontFamily","withTextFontWeight","withTextFontShape","sizingClasses","oldOptions","baseSizingClasses","fontMetrics","sizeIndex","cssEmPerMu","getGlobalMetrics","colorMap","katex-blue","katex-orange","katex-pink","katex-red","katex-green","katex-gray","katex-purple","katex-blueA","katex-blueB","katex-blueC","katex-blueD","katex-blueE","katex-tealA","katex-tealB","katex-tealC","katex-tealD","katex-tealE","katex-greenA","katex-greenB","katex-greenC","katex-greenD","katex-greenE","katex-goldA","katex-goldB","katex-goldC","katex-goldD","katex-goldE","katex-redA","katex-redB","katex-redC","katex-redD","katex-redE","katex-maroonA","katex-maroonB","katex-maroonC","katex-maroonD","katex-maroonE","katex-purpleA","katex-purpleB","katex-purpleC","katex-purpleD","katex-purpleE","katex-mintA","katex-mintB","katex-mintC","katex-grayA","katex-grayB","katex-grayC","katex-grayD","katex-grayE","katex-grayF","katex-grayG","katex-grayH","katex-grayI","katex-kaBlue","katex-kaGreen","src_Options","ptPerUnit","pt","mm","cm","in","bp","pc","dd","cc","nd","nc","sp","px","relativeUnit","ex","em","mu","units_calculateSize","sizeValue","scale","unit","unitOptions","number","mainitLetters","buildCommon_lookupSymbol","fontName","buildCommon_makeSymbol","lookup","symbolNode","buildCommon_mathDefault","fontLookup","buildCommon_mathit","fontClass","_fontName","retrieveTextFontName","_fontName3","_fontName2","sizeElementFromChildren","buildCommon_makeSpan","buildCommon_makeSvgSpan","buildCommon_makeFragment","fragment","baseFontName","fontMap","mathbf","variant","mathrm","textit","mathbb","mathcal","mathfrak","mathscr","mathsf","mathtt","svgData","buildCommon","makeSymbol","mathsym","makeSpan","makeSvgSpan","makeLineSpan","thickness","line","borderBottomWidth","makeAnchor","anchor","makeFragment","makeVList","params","_getVListChildrenAndD","positionType","oldChildren","_children","_depth","shift","currPos","diff","_size","bottom","positionData","getVListChildrenAndDepth","pstrutSize","_elem","pstrut","realChildren","minPos","maxPos","_i2","_child","_elem2","wrapperClasses","wrapperStyle","childWrap","top","marginLeft","vlist","rows","emptySpan","depthStrut","topStrut","vtable","makeOrd","isFont","fontOrFamily","_wideCharacterFont","wideChar","codePoint","j","floor","wide_character_wideCharacterFont","wideFontName","wideFontClass","_fontName4","fontClasses","fontData","boldsymbol","_fontData","substr","parts","makeVerb","star","makeGlue","measurement","rule","staticSvg","_svgData$value","svgNode","viewBox","preserveAspectRatio","tryCombineChars","chars","splice","cssSpace","\\nobreak","\\allowbreak","regularSpace"," ","\\ ","~","\\space","\\nobreakspace","assertNodeType","typedNode","checkNodeType","assertAtomFamily","family","checkAtomFamily","checkSymbolNodeType","thinspace","mediumspace","thickspace","spacings","mord","mop","mbin","mrel","minner","mopen","mclose","mpunct","tightSpacings","_functions","_htmlGroupBuilders","_mathmlGroupBuilders","defineFunction","names","nodeType","handler","htmlBuilder","mathmlBuilder","numArgs","argTypes","greediness","allowedInText","allowedInMath","numOptionalArgs","infix","consumeMode","defineFunctionBuilders","defineFunction_ordargument","arg","buildHTML_makeSpan","buildHTML_isBinLeftCanceller","isRealGroup","getTypeOfDomTree","buildHTML_isBinRightCanceller","buildHTML_styleMap","display","scriptscript","DomEnum","buildHTML_buildExpression","expression","surrounding","rawGroups","output","buildHTML_buildGroup","nonSpaces","nonSpacesI","left","buildHTML_getOutermostNode","right","groups","pop","_left","_right","nonSpacesJp1","isLeftTight","glueOptions","getOutermostNode","side","makeNullDelimiter","moreClasses","baseOptions","groupNode","multiplier","buildHTMLUnbreakable","strut","verticalAlign","unshift","buildHTML","tree","nobreak","tagChild","htmlNode","newDocumentFragment","mathMLTree_MathNode","MathNode","getAttribute","mathMLTree_TextNode","TextNode","needsEscape","mathMLTree_SpaceNode","SpaceNode","mathMLTree","buildMathML_makeText","buildMathML_makeRow","buildMathML_getVariant","buildMathML_buildExpression","lastGroup","buildMathML_buildGroup","_lastGroup$children","_lastGroup$children2","_lastGroup$children3","buildExpressionRow","buildTree_optionsFromSettings","settings","buildTree_buildTree","mathMLNode","texExpression","annotation","semantics","buildMathML","katexNode","stretchyCodePoint","widehat","widecheck","widetilde","utilde","overleftarrow","underleftarrow","xleftarrow","overrightarrow","underrightarrow","xrightarrow","underbrace","overbrace","overleftrightarrow","underleftrightarrow","xleftrightarrow","Overrightarrow","xRightarrow","overleftharpoon","xleftharpoonup","overrightharpoon","xrightharpoonup","xLeftarrow","xLeftrightarrow","xhookleftarrow","xhookrightarrow","xmapsto","xrightharpoondown","xleftharpoondown","xrightleftharpoons","xleftrightharpoons","xtwoheadleftarrow","xtwoheadrightarrow","xlongequal","xtofrom","xrightleftarrows","xrightequilibrium","xleftequilibrium","katexImagesData","overlinesegment","underlinesegment","overgroup","undergroup","groupLength","stretchy","label","pad","img","totalHeight","borderColor","lines","x1","y1","x2","y2","stroke-width","_buildSvgSpan_","viewBoxWidth","numChars","base","viewBoxHeight","_height","imgIndex","minWidth","spans","paths","_minWidth","_viewBoxHeight","_height2","numSvgChildren","widthClasses","aligns","_path","_svgNode","_span","buildSvgSpan_","accent_htmlBuilder","grp","supSub","supSubGroup","assertSpan","isShifty","baseChar","assertSymbolDomNode","clearance","accentBody","isStretchy","accent","accentFull","accentWrap","accent_mathmlBuilder","accentNode","NON_STRETCHY_ACCENT_REGEX","funcName","parser","innerGroup","kern","optArgs","below","newOptions","upperGroup","lowerGroup","arrowBody","arrowShift","upperShift","lowerShift","arrowNode","lowerNode","upperNode","code","parseInt","isNaN","color_htmlBuilder","elements","color_mathmlBuilder","breakOnTokenText","parseExpression","newRow","newLine","marginTop","delimiter_getMetrics","symbol","delimiter_styleWrap","delim","toStyle","delimSizeMultiplier","centerSpan","delimiter_makeLargeDelim","center","delimiter_mathrmSize","delimiter_makeInner","sizeClass","delimiter_makeStackedDelim","heightTotal","middle","repeat","topMetrics","topHeightTotal","repeatMetrics","repeatHeightTotal","bottomMetrics","bottomHeightTotal","middleHeightTotal","middleFactor","middleMetrics","minHeight","repeatCount","ceil","realHeightTotal","inners","delimiter_sqrtSvg","sqrtName","pathNode","svg","stackLargeDelimiters","stackAlwaysDelimiters","stackNeverDelimiters","sizeToMaxHeight","stackNeverDelimiterSequence","stackAlwaysDelimiterSequence","stackLargeDelimiterSequence","delimTypeToFont","traverseSequence","sequence","heightDepth","delimiter_makeCustomSizedDelim","delimType","delimiter_makeSmallDelim","delimiter","spanHeight","texHeight","advanceWidth","ruleWidth","delimiterExtend","maxDistFromAxis","delimiterSizes","\\bigl","mclass","\\Bigl","\\biggl","\\Biggl","\\bigr","\\Bigr","\\biggr","\\Biggr","\\bigm","\\Bigm","\\biggm","\\Biggm","\\big","\\Big","\\bigg","\\Bigg","delimiters","checkDelimiter","symDelim","JSON","assertParsed","leftrightDepth","expect","parseFunction","innerHeight","innerDepth","hadMiddle","isMiddle","leftDelim","rightDelim","leftNode","rightNode","middleDelim","middleNode","enclose_htmlBuilder","imgShift","isSingleChar","vertPad","backgroundColor","enclose_mathmlBuilder","nameGroup","mclass_makeSpan","mclass_htmlBuilder","mclass_mathmlBuilder","binrelClass","atom","baseArg","shiftedArg","baseOp","limits","alwaysHandleSupSub","suppressBaseShift","supsub","font_htmlBuilder","font_mathmlBuilder","fontAliases","\\Bbb","\\bold","\\frak","\\bm","consumeSpaces","genfrac_htmlBuilder","nstyle","dstyle","numerm","numer","continued","hStrut","dStrut","denomm","denom","ruleSpacing","hasBarLine","barSize","numShift","denomShift","frac","midShift","candidateClearance","delimSize","genfrac_mathmlBuilder","withDelims","leftOp","rightOp","replaceWith","stylArray","delimFromValue","delimString","barNode","isBlank","styl","textOrd","horizBrace_htmlBuilder","braceBody","isOver","vSpan","val","Cls","expected","actual","assertType","html","mathml","mathFunction","muUnit","dimension","alignment","fix","offset","outerMode","switchMode","consume","mathchoice_chooseMathStyle","op_htmlBuilder","supGroup","subGroup","hasLimits","large","stash","oval","baseShift","finalGroup","_bottom","op_mathmlBuilder","singleCharBigOps","∏","∐","∑","⋀","⋁","⋂","⋃","⨀","⨁","⨂","⨄","⨆","fName","singleCharIntegrals","∫","∬","∭","∮","∯","∰","sizingGroup","pos","childText","isAllString","word","operator","sizeFuncs","sizing_htmlBuilder","amount","dy","sizedText","borderRightWidth","borderTopWidth","smashHeight","smashDepth","tbArg","letter","index","theta","phi","lineClearance","minDelimiterHeight","_delimiter$sqrtImage","delimDepth","paddingLeft","rootm","toShift","rootVList","rootVListWrap","styling_styleMap","newStyle","builderDelegate","supsub_htmlBuilderDelegate","valueBase","valueSup","valueSub","supm","subm","supShift","subShift","_newOptions","minSupShift","isOiint","psi","vlistElem","_vlistElem","isBrace","horizBrace","_base2","_base","defaultVariant","mi","mn","mtext","ord","table","textFontFamilies","\\text","\\textrm","\\textsf","\\texttt","\\textnormal","textFontWeights","\\textbf","textFontShapes","\\textit","optionsWithFont","src_functions","_environments","defineEnvironment","getHLines","hlineInfo","nxt","nextToken","parseArray","hskipBeforeAndAfter","addJot","cols","arraystretch","gullet","beginGroup","set","expandMacroAsText","parseFloat","row","rowGaps","hLinesBeforeRow","cell","next","cr","endGroup","dCellStyle","envName","array_htmlBuilder","nr","hlines","arraycolsep","baselineskip","jot","arrayskip","arstrutHeight","arstrutDepth","setHLinePos","hlinesInGap","isDashed","inrow","outrow","elt","rowGap","gap","colDescriptions","colSep","colDescrNum","colDescr","firstSeparator","separator","_separator","_separator2","sepwidth","pregap","col","align","postgap","dashes","vListElems","hline","lineShift","array_mathmlBuilder","array_alignedHandler","numMaths","numCols","emptyGroup","ordgroup","arg0","isAligned","styling","curMaths","_align","_pregap","nde","ca","assertSymbolNodeType","matrix","pmatrix","bmatrix","Bmatrix","vmatrix","Vmatrix","src_environments","controlWordWhitespaceRegex","combiningDiacriticalMarksEndRegex","combiningDiacriticalMarkString","urlFunctionRegexString","tokenRegexString","urlFunctionRegex","src_Lexer","Lexer","tokenRegex","lex","lastIndex","exec","controlMatch","src_Namespace","Namespace","builtins","globalMacros","current","undefStack","undefs","undef","has","builtinMacros","defineMacro","tokens","consumeArgs","future","digitToNumber","0","1","2","3","4","5","6","7","8","9","A","B","C","D","E","popToken","digit","macros_def","command","macros_newcommand","existsOK","nonexistsOK","exists","isDefined","argText","expandNextToken","dotsByToken",",","\\not","+","=","-","*",":","\\DOTSB","\\coprod","\\bigvee","\\bigwedge","\\biguplus","\\bigcap","\\bigcup","\\prod","\\sum","\\bigotimes","\\bigoplus","\\bigodot","\\bigsqcup","\\And","\\longrightarrow","\\Longrightarrow","\\longleftarrow","\\Longleftarrow","\\longleftrightarrow","\\Longleftrightarrow","\\mapsto","\\longmapsto","\\hookrightarrow","\\doteq","\\mathbin","\\mathrel","\\relbar","\\Relbar","\\xrightarrow","\\xleftarrow","\\DOTSI","\\int","\\oint","\\iint","\\iiint","\\iiiint","\\idotsint","\\DOTSX","thedots","expandAfterFuture","spaceAfterDots",")","]","\\rbrack","\\}","\\rbrace","\\rangle","\\rceil","\\rfloor","\\rgroup","\\rmoustache","\\right","$",";",".","latexRaiseA","implicitCommands","\\relax","^","_","\\limits","\\nolimits","src_MacroExpander","MacroExpander","expansionCount","feed","stack","newMode","pushToken","pushTokens","_stack","startOfArg","tok","reverse","expandOnce","topToken","expansion","_getExpansion","_tokens","expanded","expandMacro","oldStackLength","definition","stripped","bodyLexer","unicodeAccents","́","̀","̈","̃","̄","̆","̌","̂","̇","̊","̋","unicodeSymbols","á","à","ä","ǟ","ã","ā","ă","ắ","ằ","ẵ","ǎ","â","ấ","ầ","ẫ","ȧ","ǡ","ǻ","ḃ","ć","č","ĉ","ċ","ď","ḋ","é","è","ë","ẽ","ē","ḗ","ḕ","ĕ","ě","ê","ế","ề","ễ","ė","ḟ","ǵ","ḡ","ğ","ǧ","ĝ","ġ","ḧ","ȟ","ĥ","ḣ","ḯ","ĩ","ī","ĭ","ǐ","ǰ","ĵ","ḱ","ǩ","ĺ","ľ","ḿ","ṁ","ń","ǹ","ñ","ň","ṅ","ó","ò","ö","ȫ","õ","ṍ","ṏ","ȭ","ō","ṓ","ṑ","ŏ","ǒ","ô","ố","ồ","ỗ","ȯ","ȱ","ő","ṕ","ṗ","ŕ","ř","ṙ","ś","ṥ","š","ṧ","ŝ","ṡ","ẗ","ť","ṫ","ú","ù","ü","ǘ","ǜ","ǖ","ǚ","ũ","ṹ","ū","ṻ","ŭ","ǔ","û","ů","ű","ṽ","ẃ","ẁ","ẅ","ŵ","ẇ","ẘ","ẍ","ẋ","ý","ỳ","ÿ","ỹ","ȳ","ŷ","ẏ","ẙ","ź","ž","ẑ","ż","Á","À","Ä","Ǟ","Ã","Ā","Ă","Ắ","Ằ","Ẵ","Ǎ","Â","Ấ","Ầ","Ẫ","Ȧ","Ǡ","Ǻ","Ḃ","Ć","Č","Ĉ","Ċ","Ď","Ḋ","É","È","Ë","Ẽ","Ē","Ḗ","Ḕ","Ĕ","Ě","Ê","Ế","Ề","Ễ","Ė","Ḟ","Ǵ","Ḡ","Ğ","Ǧ","Ĝ","Ġ","Ḧ","Ȟ","Ĥ","Ḣ","Í","Ì","Ï","Ḯ","Ĩ","Ī","Ĭ","Ǐ","Î","İ","Ĵ","Ḱ","Ǩ","Ĺ","Ľ","Ḿ","Ṁ","Ń","Ǹ","Ñ","Ň","Ṅ","Ó","Ò","Ö","Ȫ","Õ","Ṍ","Ṏ","Ȭ","Ō","Ṓ","Ṑ","Ŏ","Ǒ","Ô","Ố","Ồ","Ỗ","Ȯ","Ȱ","Ő","Ṕ","Ṗ","Ŕ","Ř","Ṙ","Ś","Ṥ","Š","Ṧ","Ŝ","Ṡ","Ť","Ṫ","Ú","Ù","Ü","Ǘ","Ǜ","Ǖ","Ǚ","Ũ","Ṹ","Ū","Ṻ","Ŭ","Ǔ","Û","Ů","Ű","Ṽ","Ẃ","Ẁ","Ẅ","Ŵ","Ẇ","Ẍ","Ẋ","Ý","Ỳ","Ÿ","Ỹ","Ȳ","Ŷ","Ẏ","Ź","Ž","Ẑ","Ż","ά","ὰ","ᾱ","ᾰ","έ","ὲ","ή","ὴ","ί","ὶ","ϊ","ΐ","ῒ","ῑ","ῐ","ό","ὸ","ύ","ὺ","ϋ","ΰ","ῢ","ῡ","ῠ","ώ","ὼ","Ύ","Ὺ","Ϋ","Ῡ","Ῠ","Ώ","Ὼ","newArgument","Parser_Parser","Parser","parse","breakOnInfix","endOfExpression","parseAtom","errorNode","handleUnsupportedCmd","formLigatures","handleInfixNodes","overIndex","numerNode","denomNode","numerBody","denomBody","callFunction","handleSupSubscript","symbolToken","parseGroup","SUPSUB_GREEDINESS","parseGivenFunction","textordArray","textNode","colorNode","parseImplicitGroup","superscript","subscript","opNode","prime","primes","parseSymbol","begin","env","_parseArguments","parseArguments","_result","endNameToken","baseGroup","funcData","oldMode","_parseArguments2","_token","totalArgs","baseGreediness","argType","isOptional","parseGroupOfType","argNode","optional","parseColorGroup","parseSizeGroup","parseStringGroup","modeName","firstToken","lastToken","parseRegexGroup","regex","_result2","v","nucleus","_match","protocol","allowed","urlArg","substring","src_Parser","src_parseTree","toParse","katex_render","baseNode","textContent","katex_renderToDomTree","compatMode","katex_renderError","katex_0","version","__parse","__renderToDomTree","__renderToHTMLTree","buildTree_buildHTMLTree","__setFontMetrics","__defineSymbol","__defineMacro","__domTree"],"mappings":"gMAIeA,EAAA,WACb,OAAOC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACLC,aAAW,EACXC,SAAS,qdCHE,IAAAC,EAAA,WACb,OAAON,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACLC,aAAW,EACXC,SAAUE,OAAOC,IAATC,iFCLG,IAAAC,EAAA,WACb,OAAOV,EAAAC,EAAAC,cAAA,QAAMS,MAAO,CAAEC,WAAY,IAAKC,SAAU,UAAYN,OAAOC,IAA7DM,4aCCM,IAAAC,EAAA,WACb,OAAOf,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACLC,aAAW,EACXC,SAAUE,OAAOC,IAATQ,m/BCHG,IAAAC,EAAA,WACb,OAAOjB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACLC,aAAW,EACXC,SAAUE,OAAOC,IAATU,mDCOZC,EAAA,iBAAeC,GAAA,IAAEC,EAAFD,EAAEC,WAAeC,EAAjBC,IAAAH,EAAA,uBAA4BpB,EAAAC,EAAAC,cAACsB,EAAA,OAAD,CAAQC,KAAK,UAAUC,OAAQC,IAAeC,YAAaN,EAAOD,WAAYA,GAIzHrB,EAAAC,EAAAC,cAACsB,EAAA,OAAD,CAAQC,KAAK,KAAKJ,WAAYA,GAA9B,eACArB,EAAAC,EAAAC,cAACsB,EAAA,OAAD,CAAQC,KAAK,IAAIJ,WAAYA,GAA7B,eACArB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOC,aAAW,EAACC,SAAS,8EAC5BL,EAAAC,EAAAC,cAAA,OAAK2B,UAAU,mBAAmBC,gBAAc,SAAQ9B,EAAAC,EAAAC,cAAA,OAAK2B,UAAU,kBAAiB7B,EAAAC,EAAAC,cAAA,QAAM2B,UAAU,kBAAhB,cAA4C,IAA5C,+BAA2E,IAA3E,IAAiF,IAAjF,SAA2F,IAA3F,wBAAqH,IAAK,OAElN7B,EAAAC,EAAAC,cAACsB,EAAA,OAAD,CAAQC,KAAK,IAAIJ,WAAYA,GAA7B,eACArB,EAAAC,EAAAC,cAACH,EAAD,MACAC,EAAAC,EAAAC,cAACsB,EAAA,OAAD,CAAQC,KAAK,IAAIJ,WAAYA,GAA7B,gCAA0ErB,EAAAC,EAAAC,cAAA,QAAM2B,UAAU,iBAAhB,aAA1E,SACU7B,EAAAC,EAAAC,cAAA,QAAM2B,UAAU,iBAAhB,cADV,KAGA7B,EAAAC,EAAAC,cAACsB,EAAA,OAAD,CAAQC,KAAK,KAAKJ,WAAYA,GAA9B,yBACArB,EAAAC,EAAAC,cAACI,EAAD,MACAN,EAAAC,EAAAC,cAACsB,EAAA,OAAD,CAAQC,KAAK,aAAaJ,WAAYA,GACtCrB,EAAAC,EAAAC,cAACsB,EAAA,OAAD,CAAQC,KAAK,IAAIJ,WAAYA,EAAYU,WAAW,cAAa/B,EAAAC,EAAAC,cAAA,QAAM2B,UAAU,iBAAhB,KAAjE,2FAGA7B,EAAAC,EAAAC,cAAA,OAAK2B,UAAU,mBAAmBC,gBAAc,SAAQ9B,EAAAC,EAAAC,cAAA,OAAK2B,UAAU,kBAAiB7B,EAAAC,EAAAC,cAAA,QAAM2B,UAAU,kBAAhB,+DAAwF,KAAxF,cAAwG,IAAxG,QAAkH,IAAK,KAAM,KAA7H,aAA8I,KAAM,KAApJ,QAAkK,KAAlK,QAA4K,IAA5K,QAAsL,OAE9Q7B,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAACsB,EAAA,OAAD,CAAQC,KAAK,KAAKJ,WAAYA,GAA9B,2BACArB,EAAAC,EAAAC,cAACa,EAAD,MACAf,EAAAC,EAAAC,cAACsB,EAAA,OAAD,CAAQC,KAAK,aAAaJ,WAAYA,GACtCrB,EAAAC,EAAAC,cAACsB,EAAA,OAAD,CAAQC,KAAK,IAAIJ,WAAYA,EAAYU,WAAW,cAApD,wCAA0G/B,EAAAC,EAAAC,cAAA,QAAM2B,UAAU,iBAAhB,SAA1G,wEAGA7B,EAAAC,EAAAC,cAACsB,EAAA,OAAD,CAAQC,KAAK,KAAKJ,WAAYA,EAAYU,WAAW,cACrD/B,EAAAC,EAAAC,cAACsB,EAAA,OAAD,CAAQC,KAAK,KAAKJ,WAAYA,EAAYU,WAAW,MAAK/B,EAAAC,EAAAC,cAAA,QAAM2B,UAAU,iBAAhB,SAA1D,IACK7B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOE,SAAS,WACrBL,EAAAC,EAAAC,cAACsB,EAAA,OAAD,CAAQC,KAAK,KAAKJ,WAAYA,EAAYU,WAAW,MAAK/B,EAAAC,EAAAC,cAAA,QAAM2B,UAAU,iBAAhB,UAA1D,IACK7B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOE,SAAS,YACrBL,EAAAC,EAAAC,cAACsB,EAAA,OAAD,CAAQC,KAAK,KAAKJ,WAAYA,EAAYU,WAAW,MAAK/B,EAAAC,EAAAC,cAAA,QAAM2B,UAAU,iBAAhB,SAA1D,IACK7B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOE,SAAS,WACrBL,EAAAC,EAAAC,cAACsB,EAAA,OAAD,CAAQC,KAAK,KAAKJ,WAAYA,EAAYU,WAAW,MAAK/B,EAAAC,EAAAC,cAAA,QAAM2B,UAAU,iBAAhB,UAA1D,IACK7B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOE,SAAS,cAGrBL,EAAAC,EAAAC,cAAA,OAAK2B,UAAU,mBAAmBC,gBAAc,SAAQ9B,EAAAC,EAAAC,cAAA,OAAK2B,UAAU,kBAAiB7B,EAAAC,EAAAC,cAAA,QAAM2B,UAAU,kBAAhB,UAAwC,IAAxC,UAAoD,IAAK,KAAM,KAA/D,gBAAqF,IAArF,WAAgG,IAAhG,YAA4G,KAAM,SAAlH,qCAA+J,KAAM,SAArK,aAA4L,IAA5L,SAAuM,IAAvM,MAA+M,IAAK,IAAK,IAAzN,QAAmO,IAAK,KAAxO,QAAkP,IAAlP,UAA8P,OAEtV7B,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAACsB,EAAA,OAAD,CAAQC,KAAK,KAAKJ,WAAYA,GAA9B,mBACArB,EAAAC,EAAAC,cAACe,EAAD,MACAjB,EAAAC,EAAAC,cAAA,OAAK2B,UAAU,mBAAmBC,gBAAc,SAAQ9B,EAAAC,EAAAC,cAAA,OAAK2B,UAAU,kBAAiB7B,EAAAC,EAAAC,cAAA,QAAM2B,UAAU,kBAAhB,QAAsC,IAAtC,IAA4C,IAA5C,oBAAgE,IAAhE,IAAsE,IAAtE,MAA8E,KAA9E,WAA4F,KAA5F,UAAwG,IAAxG,UAAoH,IAAK,KAAM,KAA/H,KAAuI,IAAvI,MAA+I,IAA/I,iBAAyK,IAAzK,MAAiL,IAAjL,QAAyL,KAAM,KAA/L,UAA2M,KAA3M,2BAA6O,KAAM,KAAnP,KAA2P,IAA3P,MAAmQ,IAAnQ,iBAA6R,IAA7R,MAAqS,IAAK,KAA1S,QAAoT,IAApT,UAAgU,IAAK,KAArU,SAAgV,KAAhV,WAA8V,KAA9V,UAA0W,IAA1W,UAAsX,IAAK,KAAM,KAAjY,WAA6Y,KAAM,KAAnZ,eAAka,KAAM,KAAxa,MAAib,KAAjb,QAA2b,IAA3b,UAAuc,IAAK,KAA5c,IAAmd,KAAnd,kBAAwe,KAAxe,UAAof,IAApf,UAAggB,IAAK,KAAM,KAA3gB,WAAuhB,KAAM,KAA7hB,eAA4iB,KAAM,KAAljB,MAA2jB,KAA3jB,QAAqkB,IAArkB,UAAilB,OAEzqB7B,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAACsB,EAAA,OAAD,CAAQC,KAAK,KAAKJ,WAAYA,GAA9B,0CACArB,EAAAC,EAAAC,cAACsB,EAAA,OAAD,CAAQC,KAAK,KAAKJ,WAAYA,GAA9B,aACArB,EAAAC,EAAAC,cAACsB,EAAA,OAAD,CAAQC,KAAK,IAAIJ,WAAYA,GAA7B,6GACWrB,EAAAC,EAAAC,cAACQ,EAAD,MADX,qCACgEV,EAAAC,EAAAC,cAAC8B,EAAA/B,EAAD,CAAOgC,KAAK,cAD5E,oIAIAjC,EAAAC,EAAAC,cAAA,OAAK2B,UAAU,mBAAmBC,gBAAc,MAAK9B,EAAAC,EAAAC,cAAA,OAAK2B,UAAU,eAAc7B,EAAAC,EAAAC,cAAA,QAAM2B,UAAU,eAAhB,SAAoC7B,EAAAC,EAAAC,cAAA,QAAM2B,UAAU,qBAAhB,KAApC,MAAmF7B,EAAAC,EAAAC,cAAA,QAAM2B,UAAU,yBAAwB7B,EAAAC,EAAAC,cAAA,QAAM2B,UAAU,gBAAhB,4CAE7M7B,EAAAC,EAAAC,cAACsB,EAAA,OAAD,CAAQC,KAAK,IAAIJ,WAAYA,GAA7B,uBAAiErB,EAAAC,EAAAC,cAACsB,EAAA,OAAD,CAAQC,KAAK,IAAIJ,WAAYA,EAAYU,WAAW,IAAIT,MAAO,CAACY,KAAO,6FAAvE,gBAAjE,KACAlC,EAAAC,EAAAC,cAACsB,EAAA,OAAD,CAAQC,KAAK,KAAKJ,WAAYA,GAA9B,WACArB,EAAAC,EAAAC,cAACsB,EAAA,OAAD,CAAQC,KAAK,IAAIJ,WAAYA,GAA7B,gOAEgDrB,EAAAC,EAAAC,cAACsB,EAAA,OAAD,CAAQC,KAAK,IAAIJ,WAAYA,EAAYU,WAAW,IAAIT,MAAO,CAACY,KAAO,gHAAvE,WAFhD,KAGAlC,EAAAC,EAAAC,cAACsB,EAAA,OAAD,CAAQC,KAAK,KAAKJ,WAAYA,GAA9B,cACArB,EAAAC,EAAAC,cAACsB,EAAA,OAAD,CAAQC,KAAK,KAAKJ,WAAYA,GAC9BrB,EAAAC,EAAAC,cAACsB,EAAA,OAAD,CAAQC,KAAK,KAAKJ,WAAYA,EAAYU,WAAW,MACrD/B,EAAAC,EAAAC,cAACiC,EAAA,KAAD,CAAMC,GAAG,uBAAT,mDADA,KAGApC,EAAAC,EAAAC,cAACsB,EAAA,OAAD,CAAQC,KAAK,KAAKJ,WAAYA,EAAYU,WAAW,MACrD/B,EAAAC,EAAAC,cAACsB,EAAA,OAAD,CAAQC,KAAK,IAAIJ,WAAYA,EAAYU,WAAW,MAAK/B,EAAAC,EAAAC,cAACsB,EAAA,OAAD,CAAQC,KAAK,IAAIJ,WAAYA,EAAYU,WAAW,IAAIT,MAAO,CAACY,KAAO,0CAAvE,+BAEzDlC,EAAAC,EAAAC,cAACsB,EAAA,OAAD,CAAQC,KAAK,KAAKJ,WAAYA,EAAYU,WAAW,MACrD/B,EAAAC,EAAAC,cAACsB,EAAA,OAAD,CAAQC,KAAK,IAAIJ,WAAYA,EAAYU,WAAW,MAAK/B,EAAAC,EAAAC,cAACsB,EAAA,OAAD,CAAQC,KAAK,IAAIJ,WAAYA,EAAYU,WAAW,IAAIT,MAAO,CAACY,KAAO,qFAAvE,oBAAzD,4BAEAlC,EAAAC,EAAAC,cAAA,OAAK2B,UAAU,mBAAmBC,gBAAc,MAAK9B,EAAAC,EAAAC,cAAA,OAAK2B,UAAU,eAAc7B,EAAAC,EAAAC,cAAA,QAAM2B,UAAU,eAAc7B,EAAAC,EAAAC,cAAA,QAAM2B,UAAU,kBAAhB,KAA9B,6BAAoG7B,EAAAC,EAAAC,cAAA,QAAM2B,UAAU,kBAAhB,KAAyC7B,EAAAC,EAAAC,cAAA,QAAM2B,UAAU,gBAAhB,qBAA7I,IAAqM7B,EAAAC,EAAAC,cAAA,QAAM2B,UAAU,kBAAhB,KAAyC7B,EAAAC,EAAAC,cAAA,QAAM2B,UAAU,kBAAhB,QAEhU7B,EAAAC,EAAAC,cAACsB,EAAA,OAAD,CAAQC,KAAK,IAAIJ,WAAYA,EAAYU,WAAW,MAApD,kBACA/B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOC,aAAW,EAACC,SAAS,wBA9E5B,IAkFagC,EAAe,qCChG5BC,EAAAC,EAAApB,GAAAmB,EAAAE,EAAArB,EAAA,4BAAAsB,IAAAH,EAAAE,EAAArB,EAAA,uCAAAuB,IAAAJ,EAAAE,EAAArB,EAAA,gCAAAwB,IAAA,IAAAC,EAAAN,EAAA,GAAAO,EAAAP,EAAAQ,EAAAF,GAAAG,EAAAT,EAAA,GAAAU,EAAAV,EAAAQ,EAAAC,GAAAE,EAAAX,EAAA,KAAAY,EAAAZ,EAAAQ,EAAAG,GAAAX,EAAAE,EAAArB,EAAA,yBAAA+B,EAAAjD,IAAAqC,EAAAE,EAAArB,EAAA,+BAAA8B,EAAA,aAAAX,EAAAE,EAAArB,EAAA,6BAAA8B,EAAA,WAAAX,EAAAE,EAAArB,EAAA,yBAAA8B,EAAA,OAAAX,EAAAE,EAAArB,EAAA,4BAAA8B,EAAA,UAAAX,EAAAE,EAAArB,EAAA,+BAAA8B,EAAA,iBAAAE,EAAAb,EAAA,KAAAc,EAAAd,EAAAQ,EAAAK,GAAAb,EAAAE,EAAArB,EAAA,iCAAAiC,EAAAnD,IAAA,IAAAoD,EAAAf,EAAA,IAAAA,EAAAE,EAAArB,EAAA,8BAAAkC,EAAA,IAYA,IAAMX,EAAqBY,IAAMC,cAAc,IAEzCZ,EAAc,SAAArB,GAAK,OACvBuB,EAAA5C,EAAAC,cAACwC,EAAmBc,SAApB,KACG,SAAAC,GACC,OACEnC,EAAMoC,MACLD,EAAgBnC,EAAMqC,QAAUF,EAAgBnC,EAAMqC,OAAOD,MAEtDpC,EAAMsC,QAAUtC,EAAMuC,UAC5BvC,EAAMoC,KAAOpC,EAAMoC,KAAKA,KAAOD,EAAgBnC,EAAMqC,OAAOD,MAGvDb,EAAA5C,EAAAC,cAAA,uCAaf,SAASuC,IACP,MAAM,IAAIqB,MACR,gVATJnB,EAAYoB,UAAY,CACtBL,KAAMM,IAAUC,OAChBN,MAAOK,IAAUE,OAAOC,WACxBP,OAAQI,IAAUI,KAClBP,SAAUG,IAAUI,2BCnCtB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,oCCA/C,IAAAK,EAAApC,EAAA,KAEMqC,EAAWC,YAAa,kBAAM,IACrBD,yoBCCf,IAiBeE,EAjBKC,YAAHrE,IAOS,SAAAW,GAAA,OAAAA,EAAG2D,MAAkBC,WACxB,SAAAC,GAAA,OAAAA,EAAGF,MAAkBG,cAMxC,SAAAC,GAAA,OClBW,SAAAJ,GAAK,0EAGVA,EAAMK,UAHI,0CAKJL,EAAMM,cALF,wRAoBFN,EAAMG,aApBJ,0BAqBCH,EAAMO,KArBP,2FA0BLP,EAAMC,UA1BD,yGAgCFD,EAAMG,aAhCJ,8GAwCVH,EAAMO,KAxCI,0CA4CVP,EAAMK,UA5CI,0IAwDVL,EAAMQ,eAxDI,sDA6DVR,EAAMQ,eA7DI,2HAsEVR,EAAMQ,eAtEI,2IA+EVR,EAAMK,UA/EI,+FAsFVL,EAAMQ,eAtFI,sCA0FVR,EAAMQ,eA1FI,uDA+FVR,EAAMQ,eA/FI,wJDkBDC,CAAfL,EAAGJ,SEeQU,EA9BFC,IAAOC,KAAVC,WAAA,CAAAC,YAAA,gBAAGH,CAAH,kVACM,SAAAtE,GAAA,OAAAA,EAAG2D,MAAkBe,SAKxB,SAAAb,GAAA,OAAAA,EAAGF,MAAkBQ,gBAS1BQ,YAAS,WAAY,KAAM,KAAM,IAAK,KACtCC,YAAK,MAAO,QACA,SAAAb,GAAA,OAAAA,EAAGJ,MAAkBQ,gBAEvB,SAAAU,GAAA,OAAAA,EAAGlB,MAAkBmB,mBACnB,SAAAC,GAAA,OAAAA,EAAGpB,MAAkBmB,6BCfnCE,EAASzB,YAASe,IAAOW,OAART,WAAA,CAAAC,YAAA,gBAACH,CAAD,sFAER,SAAAtE,GAAA,OAAAA,EAAG2D,MAAkBuB,YAQ9BC,EAAW5B,YAASe,IAAOc,GAARZ,WAAA,CAAAC,YAAA,gBAACH,CAAD,ueAef,SAAAT,GAAA,OAAAA,EAAGF,MAAkBC,WAIzBgB,YAAK,MAAO,QAWL,SAAAb,GAAA,OAAAA,EAAGJ,MAAkBO,MACf,SAAAW,GAAA,OAAAA,EAAGlB,MAAkB0B,YAGhB,SAAAN,GAAA,OAAAA,EAAGpB,MAAkBmB,mBAE9B,SAAAQ,GAAA,OAAAA,EAAG3B,MAAkB4B,eAK9BC,EAAWjC,YAASe,YAAOmB,QAARjB,WAAA,CAAAC,YAAA,gBAACH,CAAD,0QAUD,SAAAoB,GAAA,OAAAA,EAAG/B,MAAkBmB,mBAKzB,SAAAa,GAAA,OAAAA,EAAGhC,MAAkBQ,gBACjCQ,YAAS,WAAY,MAAO,OAAQ,KAAM,MAC1CC,YAAK,QAGE,SAAAgB,GAAA,OAAAA,EAAGjC,MAAkBQ,kBAKf0B,sJAInBC,sBAAwB,kBAAM,iCAC9BtD,kBACE,OAAQ5D,EAAAC,EAAAC,cAAA,WACNF,EAAAC,EAAAC,cAACkG,EAAD,KACEpG,EAAAC,EAAAC,cAAC0G,EAAD,CAAUxE,GAAG,KAAIpC,EAAAC,EAAAC,cAAA,UAAKiH,KAAK7F,MAAM8F,QACjCpH,EAAAC,EAAAC,cAACqG,EAAD,KACEvG,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACiC,EAAA,KAAD,CAAMC,GAAG,KAAT,SACJpC,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACiC,EAAA,KAAD,CAAMC,GAAG,UAAT,UACJpC,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACiC,EAAA,KAAD,CAAMC,GAAG,UAAT,iBAZmBiF,aAAZJ,EACZlD,UAAY,CACjBqD,MAAOlD,SAAOC,yDCzElB,IAAMmD,EAAY5B,IAAO6B,IAAV3B,WAAA,CAAAC,YAAA,WAAGH,CAAH,0EACC,SAAAtE,GAAA,OAAAA,EAAG2D,MAAkBe,SAEjCE,YAAK,OAAQ,SACF,SAAAf,GAAA,OAAAA,EAAGF,MAAkBuB,WAMf5E,sJAcnBwF,sBAAwB,kBAAM,yCAP9BM,6BACO9F,EAAO+F,qBACVC,IAAWC,KAXO,mBAWe,GAAI,IACrCjG,EAAO+F,oBAAqB,GAE9BC,IAAWE,cAGbhE,kBAAU,IAAAiE,EACiCV,KAAK7F,MAAtCuC,EADAgE,EACAhE,SAAUuD,EADVS,EACUT,MAAOU,EADjBD,EACiBC,YACzB,OAAQ9H,EAAAC,EAAAC,cAAC6H,EAAA,EAAD,CAAehD,MAAOA,KAC5B/E,EAAAC,EAAAC,cAACiC,EAAA,YAAD,CACEwB,MAAK,aAaLC,OAAQ,SAAAuB,GAAA,IAAW6C,EAAX7C,EAAG8C,KAAQD,aAAX,OAAiChI,EAAAC,EAAAC,cAACgI,EAAA,SAAD,KACvClI,EAAAC,EAAAC,cAACiI,EAAAlI,EAAD,KACED,EAAAC,EAAAC,cAAA,QAAMkI,KAAK,KAAKC,KAAG,IACnBrI,EAAAC,EAAAC,cAAA,aAAQkH,EAAWY,EAAaZ,MAAnB,KAA6BA,EAASY,EAAaZ,OAChEpH,EAAAC,EAAAC,cAAA,QAAMuB,KAAK,cAAc6G,QAASR,GAAeE,EAAaF,cAC9D9H,EAAAC,EAAAC,cAAA,QAAMqI,SAAS,WAAWD,QAASlB,IACnCpH,EAAAC,EAAAC,cAAA,QAAMqI,SAAS,iBAAiBD,QAASR,GAAeE,EAAaF,cACrE9H,EAAAC,EAAAC,cAAA,QAAMuB,KAAK,eAAe6G,QAAQ,YAClCtI,EAAAC,EAAAC,cAAA,QAAMuB,KAAK,kBAAkB6G,QAAQ,WACrCtI,EAAAC,EAAAC,cAAA,QAAMuB,KAAK,2BAA2B6G,QAASN,EAAaQ,kCAEhExI,EAAAC,EAAAC,cAACuI,EAAD,CAAKrB,MAAOY,EAAaZ,QACzBpH,EAAAC,EAAAC,cAACwI,EAAD,KACE1I,EAAAC,EAAAC,cAACoH,EAAD,KAAYzD,EAAS,CAAEmE,mBAEzBhI,EAAAC,EAAAC,cAACyI,EAAD,QA7BFjF,KAAAkF,SAlB8BvB,aAAf3F,EACZ+F,oBAAqB,EADT/F,EAEZqC,UAAY,CACjBF,SAAUgF,MAAI1E,WACd2D,YAAa5D,SACbkD,MAAOlD,4CC5BI/C,EAAA,GACb2E,QAAS,QACTV,UAAW,OACXF,aAAc,MACdgB,kBAAmB,kBACnBS,YAAa,UAEbF,WAAU,8IACVpB,cAAa,0CAEbiB,SAAU,IACVf,eAAgB,UAChBuD,cAAe,OACfC,gBAAiB,IACjBzD,KAAM,UACNN,UAAW,UACXgE,aAAc,wHCbKC,sJAKnB/B,sBAAwB,kBAAM,iCAC9BtD,kBACE,OAAOsF,EAAAjJ,EAAAC,cAAA,KAAGgC,KAAMiF,KAAK7F,MAAMY,KAAMiH,OAAO,SAASC,IAAI,uBAAuBjC,KAAK7F,MAAMW,UAPjDoF,aAArB4B,EACZlF,UAAY,CACjB7B,KAAMgC,SAAOC,WACblC,KAAMiC,SAAOC,+BCiBjB,IAAAkF,EAAAC,MAAAD,QAEA/E,EAAAC,QAAA8E,+GCnBME,EAAmB,SAAAnI,GAAkB,IAAfoI,EAAepI,EAAfoI,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAOtG,IAAMpD,cAAc2J,IAApBC,IAAA,CACLN,WACAC,iBACGA,EAAcM,QAIrBR,EAAiBxF,UAAY,CAC3ByF,SAAUxF,IAAUgG,MAAM,CACxBJ,SAAU5F,IAAUE,OAAOC,aAC1BA,YAGUoF,2eCRTU,EAAwBvE,IAAO6B,IAAV3B,WAAA,CAAAC,YAAA,gBAAGH,CAAH,sWAYjB,SAAAtE,GAAA,OAAAA,EAAG2D,MAAkBC,WAIzBgB,YAAK,MAAO,SAgBGkE,sJAMnBhD,sBAAwB,SAAAjC,GAAA,IAAG/C,EAAH+C,EAAG/C,KAAMkF,EAATnC,EAASmC,MAAT,OACtB+C,EAAK7I,MAAMY,OAASA,GACpBiI,EAAK7I,MAAM8F,QAAUA,iCACvBxD,kBACE,IAAMwG,EAAmB,CAAEC,IAAKlD,KAAK7F,MAAMY,MAC3C,OAAQoI,EAAArK,EAAAC,cAAC+J,EAAD,KACNK,EAAArK,EAAAC,cAACqK,EAAA,EAADC,OAAAC,OAAA,CAAoBrD,MAAOD,KAAK7F,MAAM8F,OAAWgD,GAC/CE,EAAArK,EAAAC,cAACwK,EAAA,EAAgBR,EAAaS,iBAEhCL,EAAArK,EAAAC,cAAC0K,EAAA,EAADJ,OAAAC,OAAA,CAAqBrD,MAAOD,KAAK7F,MAAM8F,OAAWgD,GAChDE,EAAArK,EAAAC,cAAC2K,EAAA,EAAiBX,EAAaS,iBAEjCL,EAAArK,EAAAC,cAAC4K,EAAA,EAADN,OAAAC,OAAA,CAAkBM,QAAS5D,KAAK7F,MAAM8F,OAAWgD,GAC/CE,EAAArK,EAAAC,cAAC8K,EAAA,EAAcd,EAAaS,sBAnBMtD,aAArB6C,EACZS,eAAiB,CAAEM,OAAO,EAAMjF,KAAM,IAD1BkE,EAEZnG,UAAY,CACjB7B,KAAMgC,SAAOC,WACbiD,MAAOlD,SAAOC,iCCjDlB,IAGA+G,EAHW5I,EAAQ,KAGnB4I,OAEA5G,EAAAC,QAAA2G,uBCLA,IAAAC,EAAiB7I,EAAQ,KAGzB8I,EAAA,iBAAAC,iBAAAb,iBAAAa,KAGAC,EAAAH,GAAAC,GAAAG,SAAA,cAAAA,GAEAjH,EAAAC,QAAA+G,qBCoBAhH,EAAAC,QAJA,SAAAiH,GACA,aAAAA,GAAA,iBAAAA,wBCzBA,IAAAN,EAAa5I,EAAQ,KACrBmJ,EAAgBnJ,EAAQ,KACxBoJ,EAAqBpJ,EAAQ,KAG7BqJ,EAAA,gBACAC,EAAA,qBAGAC,EAAAX,IAAAY,iBAAAC,EAkBAzH,EAAAC,QATA,SAAAiH,GACA,aAAAA,OACAO,IAAAP,EAAAI,EAAAD,EAEAE,QAAArB,OAAAgB,GACAC,EAAAD,GACAE,EAAAF,sCCtBAhB,OAAAwB,eAAAzH,EAAA,cACAiH,OAAA,IAGA,IAAAS,EAAc3J,EAAQ,KAEtBkI,OAAAwB,eAAAzH,EAAA,UACA2H,YAAA,EACAC,IAAA,WACA,OAAAC,EAAAH,GAAAxH,WAIA,IAAA4H,EAAmB/J,EAAQ,KAS3B,SAAA8J,EAAAE,GAAsC,OAAAA,KAAAC,WAAAD,EAAA,CAAuC7H,QAAA6H,GAP7E9B,OAAAwB,eAAAzH,EAAA,eACA2H,YAAA,EACAC,IAAA,WACA,OAAAC,EAAAC,GAAA5H,6CClBA+F,OAAAwB,eAAAzH,EAAA,cACAiH,OAAA,IAEAjH,EAAAiI,uBAAAT,EAEA,IAAAU,EAAAjC,OAAAC,QAAA,SAAAtB,GAAmD,QAAAuD,EAAA,EAAgBA,EAAAC,UAAAC,OAAsBF,IAAA,CAAO,IAAAG,EAAAF,UAAAD,GAA2B,QAAAI,KAAAD,EAA0BrC,OAAAuC,UAAAC,eAAAC,KAAAJ,EAAAC,KAAyD3D,EAAA2D,GAAAD,EAAAC,IAAiC,OAAA3D,GAI/O+D,EAAAd,EAFa9J,EAAQ,IAMrB6K,EAAAf,EAF2B9J,EAAQ,KAMnC8K,EAAAhB,EAFiB9J,EAAQ,IAIzB,SAAA8J,EAAAE,GAAsC,OAAAA,KAAAC,WAAAD,EAAA,CAAuC7H,QAAA6H,GAI7E,IAAAe,GAAA,EAAAF,EAAA1I,SAAA,IACA6I,EAAAD,EAAAC,SACA9J,EAAA6J,EAAA7J,SAiBAe,EAAAiI,kBAfA,SAAAnF,GACA,gBAAAjG,GACA,IAAAC,EAAAD,EAAAC,WACAC,EATA,SAAAgL,EAAAiB,GAA8C,IAAApE,EAAA,GAAiB,QAAAuD,KAAAJ,EAAqBiB,EAAAC,QAAAd,IAAA,GAAoClC,OAAAuC,UAAAC,eAAAC,KAAAX,EAAAI,KAA6DvD,EAAAuD,GAAAJ,EAAAI,IAAsB,OAAAvD,EAS3MsE,CAAArM,EAAA,gBAEA,OAAA8L,EAAAzI,QAAAvE,cACAsD,EACA,KACA,SAAAkK,GACA,OAAAR,EAAAzI,QAAAvE,cAAAmH,EAAAoF,EAAA,CAAkEpL,cAAAqM,GAA8CpM,QAOhH,IAAAqM,EAAA,SAAA1I,GACA,IAAA5D,EAAA4D,EAAA5D,WACAwC,EAAAoB,EAAApB,SACA,OAAAqJ,EAAAzI,QAAAvE,cACAoN,EACA,CAAK9B,MAAAnK,GACLwC,IAIA8J,EAAA5J,UAAA,CACA1C,WAAA+L,EAAA3I,QAAAR,OAAAE,WACAN,SAAAuJ,EAAA3I,QAAAmJ,QAAAzJ,YAGAI,EAAAE,QAAAkJ,oCC1DAnD,OAAAwB,eAAAzH,EAAA,cACAiH,OAAA,IAEAjH,EAAAsJ,aAGA,SAAAC,EAAAC,EAAAC,GACA,IAAAC,EAAAC,OAAAC,SAAAjO,cAAA,UAMA,OALA+N,EAAAG,OAAA,EACAH,EAAAH,MACAG,EAAAF,KACAC,EAAAK,YAAAJ,GAEAA,GATA1J,EAAA+J,aAYA,SAAAP,EAAAC,GACA,IAAAC,EAAAC,OAAAC,SAAAI,eAAAR,GACAE,GAAAD,EAAAQ,YAAAP,IAbA1J,EAAAkK,SAgBA,SAAArK,EAAAsK,EAAAC,GACA,IAAAC,OAAA,EACA,kBACA,IAAAC,EAAA1H,KACA2H,EAAAnC,UAOAoC,EAAAJ,IAAAC,EAEAV,OAAAc,aAAAJ,GACAA,EAAAK,WARA,WACAL,EAAA,KACAD,GAAAvK,EAAA8K,MAAAL,EAAAC,IAMAJ,GAEAK,GAAA3K,EAAA8K,MAAAL,EAAAC,uCCvCA,IAAAK,EAAA7M,EAAA,KAAA8M,EAAA9M,EAAA,KAGeoD,QAAO2J,GAAtBzJ,WAAA,CAAAC,YAAA,gBAAeH,CAAf,8JAIa,SAAAtE,GAAA,OAAAA,EAAG2D,MAAkBO,MAEf,SAAAL,GAAA,OAAAA,EAAGF,MAAkBgE,iBACvB,SAAA5D,GAAA,OAAAA,EAAGJ,MAAkB+D,eAEhC/C,YAAS,WAAY,KAAM,QAAS,EAAG,6BCZ7C,SAAAuJ,GACA,IAAAnE,EAAA,iBAAAmE,QAAA9E,iBAAA8E,EAEAhL,EAAAC,QAAA4G,2CCHA,IAAAD,EAAa5I,EAAQ,KAGrBiN,EAAA/E,OAAAuC,UAGAC,EAAAuC,EAAAvC,eAOAwC,EAAAD,EAAAE,SAGA5D,EAAAX,IAAAY,iBAAAC,EA6BAzH,EAAAC,QApBA,SAAAiH,GACA,IAAAkE,EAAA1C,EAAAC,KAAAzB,EAAAK,GACA8D,EAAAnE,EAAAK,GAEA,IACAL,EAAAK,QAAAE,EACA,IAAA6D,GAAA,EACG,MAAAC,IAEH,IAAAC,EAAAN,EAAAvC,KAAAzB,GAQA,OAPAoE,IACAF,EACAlE,EAAAK,GAAA8D,SAEAnE,EAAAK,IAGAiE,sBCzCA,IAOAN,EAPAhF,OAAAuC,UAOA0C,SAaAnL,EAAAC,QAJA,SAAAiH,GACA,OAAAgE,EAAAvC,KAAAzB,yBClBA,IAAAuE,EAAiBzN,EAAQ,KACzB+G,EAAc/G,EAAQ,KACtB0N,EAAmB1N,EAAQ,KAG3B2N,EAAA,kBAwBA3L,EAAAC,QALA,SAAAiH,GACA,uBAAAA,IACAnC,EAAAmC,IAAAwE,EAAAxE,IAAAuE,EAAAvE,IAAAyE,iKCnBMC,EAAsBxK,IAAOyK,KAAVvK,WAAA,CAAAC,YAAA,gBAAGH,CAAH,iEAErBK,YAAS,WAAY,QAAS,EAAG,KAAM,OAQtBqK,sJAInBlJ,sBAAwB,kBAAM,iCAC9BtD,kBACE,OAAQ5D,EAAAC,EAAAC,cAACgQ,EAAD,KACNlQ,EAAAC,EAAAC,cAAC+I,EAAA,EAAD,CACE/G,KAAI,2EAA6EiF,KAAK7F,MAAM+O,KAC5FpO,KAAK,8BAT2BoF,aAAnB+I,EACZrM,UAAY,CACjBsM,KAAMnM,SAAOC,4ECVXmM,EAAa5K,IAAO6K,WAAV3K,WAAA,CAAAC,YAAA,YAAGH,CAAH,sJACW,SAAAtE,GAAA,OAAAA,EAAG2D,MAAkBC,WAMnC,SAAAC,GAAA,OAAAA,EAAGF,MAAkBQ,gBAG5BQ,YAAS,WAAY,EAAG,KAAM,KAAM,WAIpCyK,EAAoB9K,IAAO+K,EAAV7K,WAAA,CAAAC,YAAA,YAAGH,CAAH,sDAKjBgL,sJAIJxJ,sBAAwB,kBAAM,iCAC9BtD,kBACE,IAAM+M,EAAqBxJ,KAAK7F,MAAMuC,UAAY+M,IAASzJ,KAAK7F,MAAMuC,WACpEsD,KAAK7F,MAAMuC,SAASgN,SAAS,KAC/B,OAAO7Q,EAAAC,EAAAC,cAACsQ,EAADhG,OAAAC,OAAA,CAAmB5I,UAAW8O,GAAsB,aAAiBxJ,KAAK7F,YARxD+F,aAAvBqJ,EACG3M,UAAY,CACjBF,SAAUgF,WAUOiI,sJAInB5J,sBAAwB,kBAAM,iCAC9BtD,kBACE,OAAO5D,EAAAC,EAAAC,cAACsB,EAAA,YAAD,CACLH,WAAY,CACVpB,EAAG,SAAAkF,GAAA,IAAGjD,EAAHiD,EAAGjD,KAAM2B,EAATsB,EAAStB,SAAT,OAAwB7D,EAAAC,EAAAC,cAAC+I,EAAA,EAAD,CAAc/G,KAAMA,EAAMD,KAAM4B,KAC3D0M,WAAY,SAAAjP,GAAK,OAAItB,EAAAC,EAAAC,cAACoQ,EAAehP,IACrCmP,EAAG,SAAAnP,GAAK,OAAItB,EAAAC,EAAAC,cAAC6Q,EAAmBzP,MAElC6F,KAAK7F,MAAMuC,cAZwBwD,aAApByJ,EACZ/M,UAAY,CACjBF,SAAUgF,MAAI1E,yBC7BZ6M,EAAoBtL,IAAO6B,IAAV3B,WAAA,CAAAC,YAAA,YAAGH,CAAH,iCA4BjBuL,EAAqBC,IAAMhJ,MAtBZ,SAAA9G,GAAoE,IAAjEyC,EAAiEzC,EAAjEyC,SAAsB3B,EAA2Cd,EAAvDoI,SAAYtH,KAAuBiP,EAAoB/P,EAAnCgQ,YAAeD,YAC7DE,EAAgB,CACpBC,WAAYH,EAAYd,KACxBjJ,MAAO+J,EAAY/J,MACnBiD,IAAKnI,GAEP,OAAQlC,EAAAC,EAAAC,cAACwB,EAAA,EAAWyP,EACjB,SAAAlM,GAAsB,IAAnB+C,EAAmB/C,EAAnB+C,aACF,OAAQhI,EAAAC,EAAAC,cAACgI,EAAA,SAAD,KACNlI,EAAAC,EAAAC,cAACqR,EAAA,EAAD,KAAKJ,EAAY/J,MAAMpH,EAAAC,EAAAC,cAAA,aAAQsR,IAAOL,EAAYM,KAAM,cACvDN,EAAYO,YAAc1R,EAAAC,EAAAC,cAACyR,EAAD,CAAYtB,KAAMc,EAAYd,OACzDrQ,EAAAC,EAAAC,cAAC0R,EAAD,KAAc/N,GACd7D,EAAAC,EAAAC,cAACgK,EAAA,EAAD,CAAchI,KAAMA,EAAMkF,MAAO+J,EAAY/J,QAC5C+J,EAAYU,SAAY7R,EAAAC,EAAAC,cAAC8Q,EAAD,KACvBhR,EAAAC,EAAAC,cAAC8B,EAAA/B,EAAO6R,gBAAR,CACEC,OAAQV,EACRW,UAAWhK,EAAaiK,yBAOrBhB,wCCxCfzG,OAAAwB,eAAAzH,EAAA,cACAiH,OAAA,IAEAjH,EAAAuN,gBAAAvN,EAAA2N,aAAA3N,EAAA4N,kBAAApG,EAEA,IAAAqG,EAAoB9P,EAAQ,KAE5B+P,EAAoB/P,EAAQ,KAE5BgQ,EAAuBhQ,EAAQ,KAE/BiC,EAAA4N,aAAAC,EAAAD,aACA5N,EAAA2N,aAAAG,EAAAH,aACA3N,EAAAuN,gBAAAQ,EAAAR,gBAGA,IAAAS,EAAA,CACAJ,aAAAC,EAAAD,aACAD,aAAAG,EAAAH,aACAJ,gBAAAQ,EAAAR,iBAGAvN,EAAAE,QAAA8N,oCCtBA,IAAAC,EAAclQ,EAAQ,GACtBmQ,EAAenQ,EAAQ,IACvBuM,EAAcvM,EAAQ,KAEtBoQ,EAAA,YAEAF,IAAAG,EAAAH,EAAAI,EAAgCtQ,EAAQ,IAARA,CAHhC,YAG4D,UAC5DuO,SAAA,SAAAgC,GACA,IAAAC,EAAAjE,EAAA1H,KAAA0L,EALA,YAMAE,EAAApG,UAAAC,OAAA,EAAAD,UAAA,QAAAZ,EACAiH,EAAAP,EAAAK,EAAAlG,QACAqG,OAAAlH,IAAAgH,EAAAC,EAAAE,KAAAC,IAAAV,EAAAM,GAAAC,GACAI,EAAA7S,OAAAsS,GACA,OAAAH,EACAA,EAAAzF,KAAA6F,EAAAM,EAAAH,GACAH,EAAAO,MAAAJ,EAAAG,EAAAxG,OAAAqG,KAAAG,iKCZME,EAAc5N,IAAOyK,KAAVvK,WAAA,CAAAC,YAAA,gBAAGH,CAAH,eACN,SAAAtE,GAAA,OAAAA,EAAG2D,MAAkBiE,eAGX7I,sJAKnB+G,sBAAwB,SAAAjC,GAAA,IAAG5E,EAAH4E,EAAG5E,SAAH,OAAkB8J,EAAK7I,MAAMjB,WAAaA,iCAClEuD,kBACE,IACE,IAAM2P,EAASC,IAAMC,eACnBtM,KAAK7F,MAAMjB,SACX,CAAED,YAAa+G,KAAK7F,MAAMlB,cAE5B,OAAOsT,EAAAzT,EAAAC,cAAA,QAAMyT,wBAAyB,CAAEJ,YACxC,MAAOK,GACP,IAAMC,EAAiBD,EAAInE,WACxBqE,QAAQ,kCAAmC,IAC9C,OAAOJ,EAAAzT,EAAAC,cAACoT,EAAD,KAAcO,QAhBQxM,aAAdlH,EACZ4D,UAAY,CACjB3D,YAAa2T,OACb1T,SAAU6D,SAAOC,8CCVrBqG,OAAAwB,eAAAzH,EAAA,cACAiH,OAAA,IAGA,IAAAiB,EAAAjC,OAAAC,QAAA,SAAAtB,GAAmD,QAAAuD,EAAA,EAAgBA,EAAAC,UAAAC,OAAsBF,IAAA,CAAO,IAAAG,EAAAF,UAAAD,GAA2B,QAAAI,KAAAD,EAA0BrC,OAAAuC,UAAAC,eAAAC,KAAAJ,EAAAC,KAAyD3D,EAAA2D,GAAAD,EAAAC,IAAiC,OAAA3D,GAE/O6K,EAAA,WAAgC,SAAAC,EAAA9K,EAAA7H,GAA2C,QAAAoL,EAAA,EAAgBA,EAAApL,EAAAsL,OAAkBF,IAAA,CAAO,IAAAwH,EAAA5S,EAAAoL,GAA2BwH,EAAAhI,WAAAgI,EAAAhI,aAAA,EAAwDgI,EAAAC,cAAA,EAAgC,UAAAD,MAAAE,UAAA,GAAuD5J,OAAAwB,eAAA7C,EAAA+K,EAAApH,IAAAoH,IAA+D,gBAAAG,EAAAC,EAAAC,GAA2L,OAAlID,GAAAL,EAAAI,EAAAtH,UAAAuH,GAAqEC,GAAAN,EAAAI,EAAAE,GAA6DF,GAAxhB,GAEAG,EAAalS,EAAQ,GAErB4K,EAAAd,EAAAoI,GAIAC,EAAArI,EAF4B9J,EAAQ,MAIpC+J,EAAmB/J,EAAQ,KAE3B,SAAA8J,EAAAE,GAAsC,OAAAA,KAAAC,WAAAD,EAAA,CAAuC7H,QAAA6H,GAQ7E,IAAAoI,EAAA,CACAC,WAAA,OACAC,QAAA,OAGAC,EAAA,SAAAC,GAGA,SAAAD,IAGA,OAjBA,SAAAE,EAAAV,GAAiD,KAAAU,aAAAV,GAA0C,UAAAW,UAAA,qCAe3FC,CAAA9N,KAAA0N,GAbA,SAAAxJ,EAAA4B,GAAiD,IAAA5B,EAAa,UAAA6J,eAAA,6DAAyF,OAAAjI,GAAA,iBAAAA,GAAA,mBAAAA,EAAA5B,EAAA4B,EAevJkI,CAAAhO,MAAA0N,EAAAO,WAAA5K,OAAA6K,eAAAR,IAAA3F,MAAA/H,KAAAwF,YA0CA,OAvDA,SAAA2I,EAAAC,GAA0C,sBAAAA,GAAA,OAAAA,EAA+D,UAAAP,UAAA,kEAAAO,GAAuGD,EAAAvI,UAAAvC,OAAAgL,OAAAD,KAAAxI,UAAA,CAAyE0I,YAAA,CAAejK,MAAA8J,EAAApJ,YAAA,EAAAkI,UAAA,EAAAD,cAAA,KAA6EoB,IAAA/K,OAAAkL,eAAAlL,OAAAkL,eAAAJ,EAAAC,GAAAD,EAAAF,UAAAG,GAQrXI,CAAAd,EAgDCL,EAAAnN,WAxCD2M,EAAAa,EAAA,EACA/H,IAAA,SACAtB,MAAA,WACA,IAAAoK,EAAAzO,KAAA7F,MACAG,EAAAmU,EAAAnU,KACAM,EAAA6T,EAAA7T,WACA8T,EAAAD,EAAAtU,MACAwU,OAAA/J,IAAA8J,EAAA,GAAsDA,EACtDhS,EAAA+R,EAAA/R,SACAkS,EAAAH,EAAAvU,WACAA,OAAA0K,IAAAgK,EAAA,GAA2DA,EAC3DrU,EAAAkU,EAAAlU,OACAE,EAAAgU,EAAAhU,YAGAyF,EAAAhG,EAAAU,EAAA,IAAAN,IAAAJ,EAAAI,IAAAiT,EAAAjT,MAEA,OAAAC,IACA,EAAA+S,EAAAhQ,SAAA0C,KAAAzF,GAEAwL,EAAAzI,QAAAvE,cACAwB,EACA+K,EAAA,CAAoBpL,cAAyBO,GAC7CsL,EAAAzI,QAAAvE,cACAmH,EACAyO,EACAjS,KAKAqJ,EAAAzI,QAAAvE,cACAmH,EACAyO,EACAjS,OAKAgR,EAhDA,GAmDAtQ,EAAAE,SAAA,EAAA4H,EAAAG,mBAAAqI,qCClFArK,OAAAwB,eAAAzH,EAAA,cACAiH,OAAA,IAEAjH,EAAA4N,kBAAApG,EAEA,IAQAO,EARA0H,EAAA,WAAgC,SAAAC,EAAA9K,EAAA7H,GAA2C,QAAAoL,EAAA,EAAgBA,EAAApL,EAAAsL,OAAkBF,IAAA,CAAO,IAAAwH,EAAA5S,EAAAoL,GAA2BwH,EAAAhI,WAAAgI,EAAAhI,aAAA,EAAwDgI,EAAAC,cAAA,EAAgC,UAAAD,MAAAE,UAAA,GAAuD5J,OAAAwB,eAAA7C,EAAA+K,EAAApH,IAAAoH,IAA+D,gBAAAG,EAAAC,EAAAC,GAA2L,OAAlID,GAAAL,EAAAI,EAAAtH,UAAAuH,GAAqEC,GAAAN,EAAAI,EAAAE,GAA6DF,GAAxhB,GAEAG,EAAalS,EAAQ,GAErB4K,GAIAZ,EAJAkI,IAIsClI,EAAAC,WAAAD,EAAA,CAAuC7H,QAAA6H,GAF7E0J,EAAa1T,EAAQ,KAUrB,IAAA2T,GAAA,EAAAD,EAAAvH,UAAA,WACAP,OAAAgI,eAAAhI,OAAAgI,cAAAC,SAAA,CAA6DC,OAAA,KAC5D,QAED7R,EAAA4N,aAAA,SAAAkE,GAGA,SAAAlE,IAGA,OAhBA,SAAA4C,EAAAV,GAAiD,KAAAU,aAAAV,GAA0C,UAAAW,UAAA,qCAc3FC,CAAA9N,KAAAgL,GAZA,SAAA9G,EAAA4B,GAAiD,IAAA5B,EAAa,UAAA6J,eAAA,6DAAyF,OAAAjI,GAAA,iBAAAA,GAAA,mBAAAA,EAAA5B,EAAA4B,EAcvJkI,CAAAhO,MAAAgL,EAAAiD,WAAA5K,OAAA6K,eAAAlD,IAAAjD,MAAA/H,KAAAwF,YA0DA,OAtEA,SAAA2I,EAAAC,GAA0C,sBAAAA,GAAA,OAAAA,EAA+D,UAAAP,UAAA,kEAAAO,GAAuGD,EAAAvI,UAAAvC,OAAAgL,OAAAD,KAAAxI,UAAA,CAAyE0I,YAAA,CAAejK,MAAA8J,EAAApJ,YAAA,EAAAkI,UAAA,EAAAD,cAAA,KAA6EoB,IAAA/K,OAAAkL,eAAAlL,OAAAkL,eAAAJ,EAAAC,GAAAD,EAAAF,UAAAG,GAOrXI,CAAAxD,EAgECjF,EAAAzI,QAAA4C,WAxDD2M,EAAA7B,EAAA,EACArF,IAAA,oBACAtB,MAAA,WACArE,KAAAmP,iBAEK,CACLxJ,IAAA,wBACAtB,MAAA,SAAA+K,GACA,GAAApP,KAAA7F,MAAA0Q,YAAAuE,EAAAvE,UAAA,SAEA,IAAAwE,EAAAD,EAAAxE,OACAA,EAAA5K,KAAA7F,MAAAyQ,OACA,OAAAyE,EAAAnM,MAAA0H,EAAA1H,KAAAmM,EAAAlF,aAAAS,EAAAT,aAGK,CACLxE,IAAA,sBACAtB,MAAA,SAAA+K,GACApP,KAAA7F,MAAA0Q,YAAAuE,EAAAvE,WAAA7K,KAAAsP,kBAEK,CACL3J,IAAA,qBACAtB,MAAA,WACArE,KAAAmP,iBAEK,CACLxJ,IAAA,eACAtB,MAAA,WACA,IAAAkL,EAAAxI,OAAAC,SACAuI,EAAAnI,eAAA,iBAAA0H,KAAuE,EAAAD,EAAAnI,cAAA,WAAA1G,KAAA7F,MAAA0Q,UAAA,uCAAA0E,EAAAC,QAElE,CACL7J,IAAA,gBACAtB,MAAA,WACA,IAAAmL,EAAAzI,OAAAC,SAAAwI,MACA,EAAAX,EAAA1H,cAAA,gBAAAqI,GAGAzI,OAAAgI,mBAAAnK,IAEK,CACLe,IAAA,SACAtB,MAAA,WACA,OAAA0B,EAAAzI,QAAAvE,cACA,OACA,CACA2B,UAAA,uBACA+U,yBAAAzP,KAAA7F,MAAAyQ,OAAAT,WACAuF,kBAAA1P,KAAA7F,MAAAyQ,OAAA1H,KAEAlD,KAAA7F,MAAAuC,cAKAsO,EAhEA,qCCzBA3H,OAAAwB,eAAAzH,EAAA,cACAiH,OAAA,IAEAjH,EAAA2N,kBAAAnG,EAEA,IAMAO,EANA0H,EAAA,WAAgC,SAAAC,EAAA9K,EAAA7H,GAA2C,QAAAoL,EAAA,EAAgBA,EAAApL,EAAAsL,OAAkBF,IAAA,CAAO,IAAAwH,EAAA5S,EAAAoL,GAA2BwH,EAAAhI,WAAAgI,EAAAhI,aAAA,EAAwDgI,EAAAC,cAAA,EAAgC,UAAAD,MAAAE,UAAA,GAAuD5J,OAAAwB,eAAA7C,EAAA+K,EAAApH,IAAAoH,IAA+D,gBAAAG,EAAAC,EAAAC,GAA2L,OAAlID,GAAAL,EAAAI,EAAAtH,UAAAuH,GAAqEC,GAAAN,EAAAI,EAAAE,GAA6DF,GAAxhB,GAEAG,EAAalS,EAAQ,GAErB4K,GAEAZ,EAFAkI,IAEsClI,EAAAC,WAAAD,EAAA,CAAuC7H,QAAA6H,IAU7E/H,EAAA2N,aAAA,SAAAmE,GAGA,SAAAnE,IAGA,OAdA,SAAA6C,EAAAV,GAAiD,KAAAU,aAAAV,GAA0C,UAAAW,UAAA,qCAY3FC,CAAA9N,KAAA+K,GAVA,SAAA7G,EAAA4B,GAAiD,IAAA5B,EAAa,UAAA6J,eAAA,6DAAyF,OAAAjI,GAAA,iBAAAA,GAAA,mBAAAA,EAAA5B,EAAA4B,EAYvJkI,CAAAhO,MAAA+K,EAAAkD,WAAA5K,OAAA6K,eAAAnD,IAAAhD,MAAA/H,KAAAwF,YA0BA,OApCA,SAAA2I,EAAAC,GAA0C,sBAAAA,GAAA,OAAAA,EAA+D,UAAAP,UAAA,kEAAAO,GAAuGD,EAAAvI,UAAAvC,OAAAgL,OAAAD,KAAAxI,UAAA,CAAyE0I,YAAA,CAAejK,MAAA8J,EAAApJ,YAAA,EAAAkI,UAAA,EAAAD,cAAA,KAA6EoB,IAAA/K,OAAAkL,eAAAlL,OAAAkL,eAAAJ,EAAAC,GAAAD,EAAAF,UAAAG,GAKrXI,CAAAzD,EAgCChF,EAAAzI,QAAA4C,WAxBD2M,EAAA9B,EAAA,EACApF,IAAA,SACAtB,MAAA,WAKA,oCAJAsL,OAAA3P,KAAA7F,MAAAyV,WAAAtH,SAdA,IAkBA,OAHAtI,KAAA7F,MAAA0V,kBAAA,SAGA,OAFA7P,KAAA7F,MAAA2V,UAAA,WAIK,CACLnK,IAAA,SACAtB,MAAA,WACA,OAAA0B,EAAAzI,QAAAvE,cAAA,UACA4N,IAAA3G,KAAA+P,SACAC,MAAAhQ,KAAA7F,MAAA6V,MACAC,OAAAjQ,KAAA7F,MAAA8V,OACAC,SAAA,WACAC,UAAA,KACAC,YAAA,UAKArF,EAhCA,IAmCAsF,aAAA,CACAP,WAAA,EACAD,mBAAA,EACAG,MAAA,IACAC,OAAA,uCC5DA5M,OAAAwB,eAAAzH,EAAA,cACAiH,OAAA,IAEAjH,EAAAuN,qBAAA/F,EAEA,IAQAO,EARA0H,EAAA,WAAgC,SAAAC,EAAA9K,EAAA7H,GAA2C,QAAAoL,EAAA,EAAgBA,EAAApL,EAAAsL,OAAkBF,IAAA,CAAO,IAAAwH,EAAA5S,EAAAoL,GAA2BwH,EAAAhI,WAAAgI,EAAAhI,aAAA,EAAwDgI,EAAAC,cAAA,EAAgC,UAAAD,MAAAE,UAAA,GAAuD5J,OAAAwB,eAAA7C,EAAA+K,EAAApH,IAAAoH,IAA+D,gBAAAG,EAAAC,EAAAC,GAA2L,OAAlID,GAAAL,EAAAI,EAAAtH,UAAAuH,GAAqEC,GAAAN,EAAAI,EAAAE,GAA6DF,GAAxhB,GAEAG,EAAalS,EAAQ,GAErB4K,GAIAZ,EAJAkI,IAIsClI,EAAAC,WAAAD,EAAA,CAAuC7H,QAAA6H,GAF7E0J,EAAa1T,EAAQ,KAUrBiC,EAAAuN,gBAAA,SAAAuE,GAGA,SAAAvE,IAGA,OAZA,SAAAiD,EAAAV,GAAiD,KAAAU,aAAAV,GAA0C,UAAAW,UAAA,qCAU3FC,CAAA9N,KAAA2K,GARA,SAAAzG,EAAA4B,GAAiD,IAAA5B,EAAa,UAAA6J,eAAA,6DAAyF,OAAAjI,GAAA,iBAAAA,GAAA,mBAAAA,EAAA5B,EAAA4B,EAUvJkI,CAAAhO,MAAA2K,EAAAsD,WAAA5K,OAAA6K,eAAAvD,IAAA5C,MAAA/H,KAAAwF,YAoFA,OA5FA,SAAA2I,EAAAC,GAA0C,sBAAAA,GAAA,OAAAA,EAA+D,UAAAP,UAAA,kEAAAO,GAAuGD,EAAAvI,UAAAvC,OAAAgL,OAAAD,KAAAxI,UAAA,CAAyE0I,YAAA,CAAejK,MAAA8J,EAAApJ,YAAA,EAAAkI,UAAA,EAAAD,cAAA,KAA6EoB,IAAA/K,OAAAkL,eAAAlL,OAAAkL,eAAAJ,EAAAC,GAAAD,EAAAF,UAAAG,GAGrXI,CAAA7D,EA0FC5E,EAAAzI,QAAA4C,WAlFD2M,EAAAlC,EAAA,EACAhF,IAAA,qBACAtB,MAAA,WACA,oBAAA0C,eAAAuJ,kBAAAvJ,OAAAuJ,mBAAAtQ,KAAA7F,MAAA0Q,WAAA7K,KAAAsP,kBAEK,CACL3J,IAAA,oBACAtB,MAAA,WACArE,KAAAmP,iBAEK,CACLxJ,IAAA,wBACAtB,MAAA,SAAA+K,GACA,GAAApP,KAAA7F,MAAA0Q,YAAAuE,EAAAvE,UAAA,SAEA,IAAAwE,EAAAD,EAAAxE,OACAA,EAAA5K,KAAA7F,MAAAyQ,OACA,OAAAyE,EAAAnM,MAAA0H,EAAA1H,KAAAmM,EAAAlF,aAAAS,EAAAT,aAGK,CACLxE,IAAA,sBACAtB,MAAA,SAAA+K,GACApP,KAAA7F,MAAA0Q,YAAAuE,EAAAvE,WAAA7K,KAAAsP,kBAEK,CACL3J,IAAA,qBACAtB,MAAA,WACArE,KAAAmP,iBAEK,CACLxJ,IAAA,eACAtB,MAAA,WACA,IAAAkL,EAAAxI,OAAAC,SACAD,eAAAwJ,QAAAhB,EAAAnI,eAAA,iBACAL,OAAAwJ,OAAAtB,MAAA,CACAuB,QAAA,EACA5F,OAAA5K,KAAAyQ,gBAAAzQ,KAAA7F,MAAAyQ,WAGA7D,OAAA2J,cAAA1Q,KAAAyQ,gBAAAzQ,KAAA7F,MAAAyQ,QACA7D,OAAAuJ,iBAAAtQ,KAAA7F,MAAA0Q,WACA,EAAAgE,EAAAnI,cAAA,WAAA1G,KAAA7F,MAAA0Q,UAAA,uCAAA0E,EAAAC,SAGK,CACL7J,IAAA,gBACAtB,MAAA,WACA,IAAAkL,EAAAxI,OAAAC,UACA,EAAA6H,EAAA1H,cAAA,gBAAAoI,EAAAC,MACAzI,eAAAwJ,QAAAxJ,OAAAwJ,OAAAtB,MAAA,IAEA,WACAlI,OAAAwJ,OACa,MAAAI,GACb5J,OAAAwJ,YAAA3L,EAEA,IAAAgM,EAAArB,EAAAnI,eAAA,iBACA,GAAAwJ,EACA,KAAAA,EAAAC,iBACAD,EAAAvJ,YAAAuJ,EAAAE,cAIK,CACLnL,IAAA,kBACAtB,MAAA,SAAAuG,GACA,kBACA5K,KAAA+Q,KAAA5G,WAAAS,EAAAT,WACAnK,KAAA+Q,KAAA7N,IAAA0H,EAAA1H,IACAlD,KAAA+Q,KAAA9Q,MAAA2K,EAAA3K,MACAD,KAAAgR,UAAAC,aAAA,CAAArG,EAAAqG,iBAGK,CACLtL,IAAA,SACAtB,MAAA,WACA,OAAA0B,EAAAzI,QAAAvE,cAAA,OAAyD6N,GAAA,sBAIzD+D,EA1FA,wBCtBA,IAAAuG,EAAe/V,EAAQ,IACvBgW,EAAchW,EAAQ,IAEtBgC,EAAAC,QAAA,SAAAuO,EAAAD,EAAA0F,GACA,GAAAF,EAAAxF,GAAA,MAAAmC,UAAA,UAAAuD,EAAA,0BACA,OAAAhY,OAAA+X,EAAAxF,0BCNA,IAAA0F,EAAYlW,EAAQ,EAARA,CAAgB,SAC5BgC,EAAAC,QAAA,SAAAkU,GACA,IAAAC,EAAA,IACA,IACA,MAAAD,GAAAC,GACG,MAAA7I,GACH,IAEA,OADA6I,EAAAF,IAAA,GACA,MAAAC,GAAAC,GACK,MAAAC,KACF,+BCVH,IAAAnG,EAAclQ,EAAQ,GACtBsW,EAAgBtW,EAAQ,IACxBmQ,EAAenQ,EAAQ,IAEvBkQ,IAAAqG,EAAA,UAEArY,IAAA,SAAAsY,GAMA,IALA,IAAAC,EAAAH,EAAAE,EAAAtY,KACAwS,EAAAP,EAAAsG,EAAAnM,QACAoM,EAAArM,UAAAC,OACAqM,EAAA,GACAvM,EAAA,EACAsG,EAAAtG,GACAuM,EAAAC,KAAA3Y,OAAAwY,EAAArM,OACAA,EAAAsM,GAAAC,EAAAC,KAAA3Y,OAAAoM,UAAAD,KACK,OAAAuM,EAAAE,KAAA,yCCdL7W,EAAQ,KACR,IAAA8W,EAAe9W,EAAQ,IACvB+W,EAAa/W,EAAQ,KACrBgX,EAAkBhX,EAAQ,IAE1BiX,EAAA,aAEAC,EAAA,SAAAC,GACEnX,EAAQ,GAARA,CAAqBoX,OAAA3M,UAJvB,WAIuB0M,GAAA,IAInBnX,EAAQ,GAARA,CAAkB,WAAe,MAAkD,QAAlDiX,EAAAtM,KAAA,CAAwBJ,OAAA,IAAA8M,MAAA,QAC7DH,EAAA,WACA,IAAAI,EAAAR,EAAAjS,MACA,UAAA0S,OAAAD,EAAA/M,OAAA,IACA,UAAA+M,IAAAD,OAAAL,GAAAM,aAAAF,OAAAL,EAAApM,KAAA2M,QAAA7N,KAZA,YAeCwN,EAAA9X,MACD+X,EAAA,WACA,OAAAD,EAAAtM,KAAA9F,0CCpBA,IAAAiS,EAAe9W,EAAQ,IACvBgC,EAAAC,QAAA,WACA,IAAAuO,EAAAsG,EAAAjS,MACA2I,EAAA,GAMA,OALAgD,EAAAxD,SAAAQ,GAAA,KACAgD,EAAAgH,aAAAhK,GAAA,KACAgD,EAAAiH,YAAAjK,GAAA,KACAgD,EAAAkH,UAAAlK,GAAA,KACAgD,EAAAmH,SAAAnK,GAAA,KACAA,wBCXA,IAAAoK,EAAAC,KAAApN,UAGAwM,EAAAW,EAAA,SACAE,EAAAF,EAAAE,QACA,IAAAD,KAAAE,KAAA,IAJA,gBAKE/X,EAAQ,GAARA,CAAqB4X,EAJvB,WAIuB,WACvB,IAAA1O,EAAA4O,EAAAnN,KAAA9F,MAEA,OAAAqE,KAAA+N,EAAAtM,KAAA9F,MARA,sCCDA,IAAAmT,EASC,oBAAAjP,WATDiP,EASC,WACD,gBAAAC,GAEA,IAAAC,EAAA,GAGA,SAAAlY,EAAAmY,GAGA,GAAAD,EAAAC,GACA,OAAAD,EAAAC,GAAAlW,QAGA,IAAAD,EAAAkW,EAAAC,GAAA,CACA/N,EAAA+N,EACAC,GAAA,EACAnW,QAAA,IAUA,OANAgW,EAAAE,GAAAxN,KAAA3I,EAAAC,QAAAD,IAAAC,QAAAjC,GAGAgC,EAAAoW,GAAA,EAGApW,EAAAC,QA0DA,OArDAjC,EAAA+B,EAAAkW,EAGAjY,EAAAqY,EAAAH,EAGAlY,EAAAE,EAAA,SAAA+B,EAAA9C,EAAAmZ,GACAtY,EAAAuY,EAAAtW,EAAA9C,IACA+I,OAAAwB,eAAAzH,EAAA9C,EAAA,CAAkDyK,YAAA,EAAAC,IAAAyO,KAKlDtY,EAAAC,EAAA,SAAAgC,GACA,oBAAA2G,eAAAY,aACAtB,OAAAwB,eAAAzH,EAAA2G,OAAAY,YAAA,CAAgEN,MAAA,WAEhEhB,OAAAwB,eAAAzH,EAAA,cAAyDiH,OAAA,KAQzDlJ,EAAAwY,EAAA,SAAAtP,EAAAuP,GAEA,GADA,EAAAA,IAAAvP,EAAAlJ,EAAAkJ,IACA,EAAAuP,EAAA,OAAAvP,EACA,KAAAuP,GAAA,iBAAAvP,QAAAe,WAAA,OAAAf,EACA,IAAAwP,EAAAxQ,OAAAgL,OAAA,MAGA,GAFAlT,EAAAC,EAAAyY,GACAxQ,OAAAwB,eAAAgP,EAAA,WAAiD9O,YAAA,EAAAV,UACjD,EAAAuP,GAAA,iBAAAvP,EAAA,QAAAsB,KAAAtB,EAAAlJ,EAAAE,EAAAwY,EAAAlO,EAAA,SAAAA,GAAwH,OAAAtB,EAAAsB,IAAqBmO,KAAA,KAAAnO,IAC7I,OAAAkO,GAIA1Y,EAAAQ,EAAA,SAAAwB,GACA,IAAAsW,EAAAtW,KAAAiI,WACA,WAAmC,OAAAjI,EAAA,SACnC,WAAyC,OAAAA,GAEzC,OADAhC,EAAAE,EAAAoY,EAAA,IAAAA,GACAA,GAIAtY,EAAAuY,EAAA,SAAA5W,EAAAsE,GAA8D,OAAAiC,OAAAuC,UAAAC,eAAAC,KAAAhJ,EAAAsE,IAG9DjG,EAAAmO,EAAA,GAIAnO,IAAA4Y,EAAA,GAnFA,CAsFA,CAEA,SAAA5W,EAAAC,EAAAjC,GAEA,aAGAiC,EAAAgI,YAAA,EAEAhI,EAAAE,QAAA,SAAAsQ,EAAAV,GACA,KAAAU,aAAAV,GACA,UAAAW,UAAA,uCAMA,SAAA1Q,EAAAC,EAAAjC,KAKA,CAEA,SAAAgC,EAAAnD,EAAAmB,GAEA,aACAA,EAAAC,EAAApB,GAGAmB,EAAA,OAGA6Y,EAAA7Y,EAAA,GACA8Y,EAAA9Y,EAAAQ,EAAAqY,GA+CAE,EAtCA,WAIA,SAAAC,EAAAC,EAAAC,EAAAvI,GACAmI,IAAAjU,KAAAmU,GAEAnU,KAAAoU,QACApU,KAAAqU,QACArU,KAAA8L,MA0BA,OAVAqI,EAAAG,MAAA,SAAAC,EAAAC,GACA,OAAAA,EAESD,KAAAE,KAAAD,EAAAC,KAAAF,EAAAE,IAAAL,QAAAI,EAAAC,IAAAL,MAGT,IAAAD,EAAAI,EAAAE,IAAAL,MAAAG,EAAAE,IAAAJ,MAAAG,EAAAC,IAAA3I,KAFA,KAFAyI,KAAAE,KAQAN,EAnCA,GA8DAO,EAAA,WACA,SAAAC,EAAA7Z,EACA2Z,GACAR,IAAAjU,KAAA2U,GAEA3U,KAAAlF,OACAkF,KAAAyU,MAeA,OANAE,EAAA/O,UAAA0O,MAAA,SAAAM,EACA9Z,GAEA,WAAA6Z,EAAA7Z,EAAAoZ,EAAAI,MAAAtU,KAAA4U,KAGAD,EArBA,GAmCAE,EAGA,SAAAC,EAAAC,EACAC,GAEAf,IAAAjU,KAAA8U,GAEA,IAAAnE,EAAA,sBAAAoE,EACAV,OAAA,EAEAI,EAAAO,KAAAP,IACA,GAAAA,KAAAJ,OAAAI,EAAA3I,IAAA,CAIA,IAAAmJ,EAAAR,EAAAL,MAAAa,MAGAZ,EAAAI,EAAAJ,MACA,IAAAvI,EAAA2I,EAAA3I,IACAuI,IAAAY,EAAAxP,OACAkL,GAAA,qBAEAA,GAAA,iBAAA0D,EAAA,QAIA,IAAAa,EAAAD,EAAA/I,MAAAmI,EAAAvI,GAAAa,QAAA,cAeAgE,IAXA0D,EAAA,GACA,IAAAY,EAAA/I,MAAAmI,EAAA,GAAAA,GAEAY,EAAA/I,MAAA,EAAAmI,IAQAa,GALApJ,EAAA,GAAAmJ,EAAAxP,OACAwP,EAAA/I,MAAAJ,IAAA,QAEAmJ,EAAA/I,MAAAJ,IAOA,IAAA5H,EAAA,IAAAvH,MAAAgU,GAMA,OALAzM,EAAA5J,KAAA,aAEA4J,EAAA+J,UAAA6G,EAAAlP,UAEA1B,EAAAtF,SAAAyV,EACAnQ,GAMA2Q,EAAAjP,UAAAqI,UAAAtR,MAAAiJ,UAEA,IAAAuP,EAAA,EA2BAC,EAAA,WAKAC,EAAA,CACAC,IAAA,QACAC,IAAA,OACAC,IAAA,OACAC,IAAA,SACAC,IAAA,UAGAC,EAAA,WAgBA,IAAAC,EAAA,SAAAA,EAAAC,GACA,mBAAAA,EAAAC,KACA,IAAAD,EAAArG,KAAA/J,OACAmQ,EAAAC,EAAArG,KAAA,IAEAqG,EAEK,UAAAA,EAAAC,KACL,IAAAD,EAAArG,KAAA/J,OACAmQ,EAAAC,EAAArG,KAAA,IAEAqG,EAEK,SAAAA,EAAAC,KACLF,EAAAC,EAAArG,MAEAqG,GAgBAE,EAAA,SAAA1R,GACA,IAAAA,EACA,UAAA1H,MAAA,8BAAAvD,OAAAiL,IAEA,OAAAA,GAeA2R,EAAA,CACAC,SArGA,SAAAC,EAAAC,GACA,WAAAD,EAAA7P,QAAA8P,IAqGAC,MAxFA,SAAAC,EAAAC,GACA,YAAA1R,IAAAyR,EAAAC,EAAAD,GAwFAE,OAjEA,SAAAzb,GACA,OAAA1B,OAAA0B,GAAA6R,QAAAgJ,EAAA,SAAAa,GACA,OAAAnB,EAAAmB,MAgEAC,UAnFA,SAAAC,GACA,OAAAA,EAAA/J,QAAAyI,EAAA,OAAAuB,eAmFAf,cACAgB,eAhCA,SAAAf,GACA,IAAAgB,EAAAjB,EAAAC,GAGA,kBAAAgB,EAAAf,MAAA,YAAAe,EAAAf,MAAA,SAAAe,EAAAf,OAuIAgB,EAlFA,WACA,SAAAC,EAAAC,GACA/C,IAAAjU,KAAA+W,GAGAC,KAAA,GACAhX,KAAA/G,YAAA+c,EAAAI,MAAAY,EAAA/d,aAAA,GACA+G,KAAAiX,aAAAjB,EAAAI,MAAAY,EAAAC,cAAA,GACAjX,KAAAkX,WAAAlB,EAAAI,MAAAY,EAAAE,WAAA,WACAlX,KAAAmX,OAAAH,EAAAG,QAAA,GACAnX,KAAAoX,iBAAApB,EAAAI,MAAAY,EAAAI,kBAAA,GACApX,KAAAqX,OAAArB,EAAAI,MAAAY,EAAAK,OAAA,QACArX,KAAAsX,QAAAvL,KAAAwL,IAAA,EAAAvB,EAAAI,MAAAY,EAAAM,QAAAE,MACAxX,KAAAyX,UAAA1L,KAAAwL,IAAA,EAAAvB,EAAAI,MAAAY,EAAAS,UAAA,MACAzX,KAAA0X,iBAAA1B,EAAAI,MAAAY,EAAAU,iBAAA,uCAiEA,OAxDAX,EAAAnR,UAAA+R,gBAAA,SAAAC,EAAAC,EAAA7C,GACA,IAAAqC,EAAArX,KAAAqX,OAMA,GALA,mBAAAA,IAGAA,IAAAO,EAAAC,EAAA7C,IAEAqC,GAAA,WAAAA,EAAA,CAES,QAAAA,GAAA,UAAAA,EACT,UAAAlC,EAAA,+DAAA0C,EAAA,KAAAD,EAAA,IAAA5C,GACS,SAAAqC,EACT,oBAAAS,iBAAAC,KAAA,8DAAAF,EAAA,KAAAD,EAAA,KAGA,oBAAAE,iBAAAC,KAAA,oEAAAV,EAAA,MAAAQ,EAAA,KAAAD,EAAA,OAcAb,EAAAnR,UAAAoS,kBAAA,SAAAJ,EAAAC,EAAA7C,GACA,IAAAqC,EAAArX,KAAAqX,OACA,sBAAAA,EAKA,IACAA,IAAAO,EAAAC,EAAA7C,GACa,MAAArE,GACb0G,EAAA,QAGA,SAAAA,GAAA,WAAAA,MAES,IAAAA,GAAA,UAAAA,IAEA,SAAAA,GACT,oBAAAS,iBAAAC,KAAA,8DAAAF,EAAA,KAAAD,EAAA,MACA,IAGA,oBAAAE,iBAAAC,KAAA,oEAAAV,EAAA,MAAAQ,EAAA,KAAAD,EAAA,MACA,MAIAb,EA/EA,GAkGAkB,EAAA,WACA,SAAAC,EAAAtR,EAAA/H,EAAAsZ,GACAlE,IAAAjU,KAAAkY,GAEAlY,KAAA4G,KACA5G,KAAAnB,OACAmB,KAAAmY,UAqEA,OA7DAD,EAAAtS,UAAAwS,IAAA,WACA,OAAAC,EAAAC,EAAAtY,KAAA4G,MAQAsR,EAAAtS,UAAA2S,IAAA,WACA,OAAAF,EAAAG,EAAAxY,KAAA4G,MASAsR,EAAAtS,UAAA6S,QAAA,WACA,OAAAJ,EAAAK,EAAA1Y,KAAA4G,MASAsR,EAAAtS,UAAA+S,QAAA,WACA,OAAAN,EAAAO,EAAA5Y,KAAA4G,MASAsR,EAAAtS,UAAAiT,MAAA,WACA,OAAAR,EAAAS,EAAA9Y,KAAA4G,MAQAsR,EAAAtS,UAAA9K,KAAA,WACA,OAAAud,EAAAU,EAAA/Y,KAAA4G,MAQAsR,EAAAtS,UAAAoT,QAAA,WACA,OAAAhZ,KAAAnB,MAAA,GAGAqZ,EA3EA,GA6FAG,EAAA,KAAAJ,EAVA,EAUA,UAAAA,EATA,EASA,UAAAA,EARA,EAQA,UAAAA,EAPA,EAOA,UAAAA,EANA,EAMA,UAAAA,EALA,EAKA,UAAAA,EAJA,EAIA,UAAAA,EAHA,EAGA,OAGAK,EAAA,CATA,EACA,EADA,EACA,EACA,EACA,EADA,EACA,GAOAE,EAAA,CATA,QAEA,SAQAE,EAAA,CAbA,EACA,EACA,EACA,EACA,EACA,EADA,EACA,GASAE,EAAA,CAbA,IAEA,IAEA,SAUAE,EAAA,CAhBA,IAEA,IAEA,IAEA,KAWAC,EAAA,CAlBA,EACA,EACA,EACA,EADA,EACA,EADA,EACA,GAkBAE,EAAA,CACAC,QAAAb,EAtBA,GAuBAc,KAAAd,EArBA,GAsBAe,OAAAf,EApBA,GAqBAgB,aAAAhB,EAnBA,IA4BAiB,EAAA,EAGAhf,KAAA,QACAif,OAAA,WACA,YACC,CAIDjf,KAAA,WACAif,OAAA,eACC,CAgBDjf,KAAA,UACAif,OAAA,eACC,CACDjf,KAAA,WACAif,OAAA,eACC,CAGDjf,KAAA,MACAif,OAAA,eACA,cACA,gBACC,CAEDjf,KAAA,SACAif,OAAA,kBAsCA,IAAAC,EAAA,GAeA,SAAAC,EAAAC,GACA,QAAAnU,EAAA,EAAmBA,EAAAiU,EAAA/T,OAAsBF,GAAA,EACzC,GAAAmU,GAAAF,EAAAjU,IAAAmU,GAAAF,EAAAjU,EAAA,GACA,SAGA,SApBA+T,EAAAK,QAAA,SAAA5F,GACA,OAAAA,EAAAwF,OAAAI,QAAA,SAAAC,GACA,OAAAJ,EAAAzH,KAAAhK,MAAAyR,EAAAI,OA6BA,IAyJAC,EAAA,CAAiDC,KAvJjD,CAGAC,SAAA,meAGAC,UAAA,qfAIAC,UAAA,wdAGAC,UAAA,gfAGAC,UAAA,mcAGAC,gBAAA,+iBAGAC,iBAAA,+iBAGAC,UAAA,4dAGAC,UAAA,+KAEAC,eAAA,oQAGAC,UAAA,2GAEAC,eAAA,gHAGAC,YAAA,iRAEAC,gBAAA,2TAEAC,gBAAA,6QAEAC,oBAAA,0QAGAC,SAAA,yQAEAC,gBAAA,uFAEAC,WAAA,2EAGAC,WAAA,4RAEAC,UAAA,mFAEAC,SAAA,gUAEAC,cAAA,iUAEAC,WAAA,6QAEAC,WAAA,kPAEAC,YAAA,6QAEAC,YAAA,wQAEAC,WAAA,4dAEAC,WAAA,8OAEAC,gBAAA,mLAEAC,WAAA,wGAEAC,gBAAA,wGAEAC,aAAA,6OAEAC,iBAAA,wRAEAC,iBAAA,yRAEAC,qBAAA,mUAEAC,UAAA,8SAEAC,iBAAA,2FAEAC,YAAA,gRAGAC,iBAAA,kZAEAC,kBAAA,2ZAGAC,OAAA,oTAGAC,OAAA,iVAEAC,OAAA,mUAEAC,OAAA,mTAGAC,IAAA,+dAGAC,SAAA,0HAGAC,SAAA,wHAEAC,SAAA,wHAEAC,SAAA,wHAGAC,WAAA,gJAEAC,WAAA,2IAEAC,WAAA,2IAEAC,WAAA,2IAMAC,kBAAA,2jBAGAC,mBAAA,4eAIAC,yBAAA,4WAEAC,0BAAA,4VAEAC,yBAAA,2WAEAC,0BAAA,yUAgBAC,EAAA,WAGA,SAAAC,EAAAlhB,GACAuX,IAAAjU,KAAA4d,GAEA5d,KAAAtD,WACAsD,KAAA6d,QAAA,GACA7d,KAAAiQ,OAAA,EACAjQ,KAAA8d,MAAA,EACA9d,KAAA+d,YAAA,EACA/d,KAAAxG,MAAA,GAwDA,OAnDAokB,EAAAhY,UAAAoY,SAAA,SAAAtjB,GACA,OAAAsb,EAAAC,SAAAjW,KAAA6d,QAAAnjB,IAGAkjB,EAAAhY,UAAAqY,WAAA,SAAAC,GACA,UAMAN,EAAAhY,UAAAuY,OAAA,WAGA,IAFA,IAAAC,EAAApX,SAAAqX,yBAEA9Y,EAAA,EAAuBA,EAAAvF,KAAAtD,SAAA+I,OAA0BF,IACjD6Y,EAAAlX,YAAAlH,KAAAtD,SAAA6I,GAAA4Y,UAGA,OAAAC,GAMAR,EAAAhY,UAAA0Y,SAAA,WAIA,IAHA,IAAAC,EAAA,GAGAhZ,EAAA,EAAuBA,EAAAvF,KAAAtD,SAAA+I,OAA0BF,IACjDgZ,GAAAve,KAAAtD,SAAA6I,GAAA+Y,WAGA,OAAAC,GASAX,EAAAhY,UAAA4Y,OAAA,WAIA,IAAAA,EAAA,SAAAC,GACA,OAAAA,EAAAD,UAEA,OAAAxe,KAAAtD,SAAAgiB,IAAAF,GAAAxM,KAAA,KAGA4L,EAnEA,GA8FAe,EAAA,SAAAd,GACA,OAAAA,EAAAe,OAAA,SAAAC,GACA,OAAAA,IACK7M,KAAA,MAGL8M,EAAA,SAAAjB,EAAA7G,EAAAxd,GAOA,GANAwG,KAAA6d,WAAA,GACA7d,KAAA+e,WAAA,GACA/e,KAAAiQ,OAAA,EACAjQ,KAAA8d,MAAA,EACA9d,KAAA+d,YAAA,EACA/d,KAAAxG,SAAA,GACAwd,EAAA,CACAA,EAAAxd,MAAAwf,WACAhZ,KAAA6d,QAAA9L,KAAA,UAEA,IAAAiN,EAAAhI,EAAAiI,WACAD,IACAhf,KAAAxG,MAAAwlB,WAQAE,EAAA,SAAAC,GACA,IAAAC,EAAApY,SAAAjO,cAAAomB,GAMA,QAAAE,KAHAD,EAAA1kB,UAAAikB,EAAA3e,KAAA6d,SAGA7d,KAAAxG,MACAwG,KAAAxG,MAAAqM,eAAAwZ,KAEAD,EAAA5lB,MAAA6lB,GAAArf,KAAAxG,MAAA6lB,IAKA,QAAAC,KAAAtf,KAAA+e,WACA/e,KAAA+e,WAAAlZ,eAAAyZ,IACAF,EAAAG,aAAAD,EAAAtf,KAAA+e,WAAAO,IAKA,QAAA/Z,EAAA,EAAmBA,EAAAvF,KAAAtD,SAAA+I,OAA0BF,IAC7C6Z,EAAAlY,YAAAlH,KAAAtD,SAAA6I,GAAA4Y,UAGA,OAAAiB,GAMAI,EAAA,SAAAL,GACA,IAAAZ,EAAA,IAAAY,EAGAnf,KAAA6d,QAAApY,SACA8Y,GAAA,WAAAvI,EAAAO,OAAAoI,EAAA3e,KAAA6d,UAAA,KAGA,IAAA4B,EAAA,GAGA,QAAAC,KAAA1f,KAAAxG,MACAwG,KAAAxG,MAAAqM,eAAA6Z,KACAD,GAAAzJ,EAAAS,UAAAiJ,GAAA,IAAA1f,KAAAxG,MAAAkmB,GAAA,KASA,QAAAJ,KALAG,IACAlB,GAAA,WAAAvI,EAAAO,OAAAkJ,GAAA,KAIAzf,KAAA+e,WACA/e,KAAA+e,WAAAlZ,eAAAyZ,KACAf,GAAA,IAAAe,EAAA,KAAAtJ,EAAAO,OAAAvW,KAAA+e,WAAAO,IAAA,KAIAf,GAAA,IAGA,QAAAhZ,EAAA,EAAmBA,EAAAvF,KAAAtD,SAAA+I,OAA0BF,IAC7CgZ,GAAAve,KAAAtD,SAAA6I,GAAA+Y,WAKA,OAFAC,GAAA,KAAAY,EAAA,KAmBAQ,EAAA,WACA,SAAAC,EAAA/B,EAAAnhB,EAAAsa,EAAAxd,GACAya,IAAAjU,KAAA4f,GAEAd,EAAAhZ,KAAA9F,KAAA6d,EAAA7G,EAAAxd,GACAwG,KAAAtD,YAAA,GAqCA,OA3BAkjB,EAAAha,UAAA2Z,aAAA,SAAAM,EAAAxb,GACArE,KAAA+e,WAAAc,GAAAxb,GAGAub,EAAAha,UAAAoY,SAAA,SAAAtjB,GACA,OAAAsb,EAAAC,SAAAjW,KAAA6d,QAAAnjB,IAUAklB,EAAAha,UAAAqY,WAAA,SAAAC,GACA,UAGA0B,EAAAha,UAAAuY,OAAA,WACA,OAAAe,EAAApZ,KAAA9F,KAAA,SAGA4f,EAAAha,UAAA0Y,SAAA,WACA,OAAAkB,EAAA1Z,KAAA9F,KAAA,SAGA4f,EA1CA,GAiDAE,EAAA,WACA,SAAAC,EAAAhlB,EAAA8iB,EAAAnhB,EAAAsa,GACA/C,IAAAjU,KAAA+f,GAEAjB,EAAAhZ,KAAA9F,KAAA6d,EAAA7G,GACAhX,KAAAtD,YAAA,GACAsD,KAAAuf,aAAA,OAAAxkB,GAuBA,OApBAglB,EAAAna,UAAA2Z,aAAA,SAAAM,EAAAxb,GACArE,KAAA+e,WAAAc,GAAAxb,GAGA0b,EAAAna,UAAAoY,SAAA,SAAAtjB,GACA,OAAAsb,EAAAC,SAAAjW,KAAA6d,QAAAnjB,IAGAqlB,EAAAna,UAAAqY,WAAA,SAAAC,GACA,UAGA6B,EAAAna,UAAAuY,OAAA,WACA,OAAAe,EAAApZ,KAAA9F,KAAA,MAGA+f,EAAAna,UAAA0Y,SAAA,WACA,OAAAkB,EAAA1Z,KAAA9F,KAAA,MAGA+f,EA7BA,GAgCAC,EAAA,CACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KAEAC,IAAA,MAQAC,EAAA,WACA,SAAAC,EAAAxlB,EAAAmV,EAAA6N,EAAAyC,EAAAC,EAAAxQ,EAAA6N,EAAArkB,GACAya,IAAAjU,KAAAsgB,GAEAtgB,KAAAlF,OACAkF,KAAAiQ,UAAA,EACAjQ,KAAA8d,SAAA,EACA9d,KAAAugB,UAAA,EACAvgB,KAAAwgB,QAAA,EACAxgB,KAAAgQ,SAAA,EACAhQ,KAAA6d,WAAA,GACA7d,KAAAxG,SAAA,GACAwG,KAAA+d,YAAA,EASA,IAAAjX,EAzhBA,SAAA4S,GACA,QAAAnU,EAAA,EAAmBA,EAAA+T,EAAA7T,OAAuBF,IAE1C,IADA,IAAAuB,EAAAwS,EAAA/T,GACAkb,EAAA,EAAwBA,EAAA3Z,EAAAyS,OAAA9T,OAA2Bgb,IAAA,CACnD,IAAAC,EAAA5Z,EAAAyS,OAAAkH,GACA,GAAA/G,GAAAgH,EAAA,IAAAhH,GAAAgH,EAAA,GACA,OAAA5Z,EAAAxM,KAIA,YA+gBAqmB,CAAA3gB,KAAAlF,KAAA8lB,WAAA,IACA9Z,GACA9G,KAAA6d,QAAA9L,KAAAjL,EAAA,aAGA,SAAA+Z,KAAA7gB,KAAAlF,QAEAkF,KAAAlF,KAAAklB,EAAAhgB,KAAAlF,OA+GA,OA3GAwlB,EAAA1a,UAAAoY,SAAA,SAAAtjB,GACA,OAAAsb,EAAAC,SAAAjW,KAAA6d,QAAAnjB,IAGA4lB,EAAA1a,UAAAqY,WAAA,SAAAC,GACA,IAAAA,kBAAAoC,IAAAtgB,KAAAugB,OAAA,GAAA5B,EAAA3e,KAAA6d,WAAAc,EAAAT,EAAAL,UAAA7d,KAAAwgB,OAAAtC,EAAAsC,MAAAxgB,KAAA+d,cAAAG,EAAAH,YACA,SAEA,QAAA+C,KAAA9gB,KAAAxG,MACA,GAAAwG,KAAAxG,MAAAqM,eAAAib,IAAA9gB,KAAAxG,MAAAsnB,KAAA5C,EAAA1kB,MAAAsnB,GACA,SAGA,QAAAC,KAAA7C,EAAA1kB,MACA,GAAA0kB,EAAA1kB,MAAAqM,eAAAkb,IAAA/gB,KAAAxG,MAAAunB,KAAA7C,EAAA1kB,MAAAunB,GACA,SAOA,OAJA/gB,KAAAlF,MAAAojB,EAAApjB,KACAkF,KAAAiQ,OAAAlE,KAAAwL,IAAAvX,KAAAiQ,OAAAiO,EAAAjO,QACAjQ,KAAA8d,MAAA/R,KAAAwL,IAAAvX,KAAA8d,MAAAI,EAAAJ,OACA9d,KAAAugB,OAAArC,EAAAqC,QACA,GASAD,EAAA1a,UAAAuY,OAAA,WACA,IAAAiB,EAAApY,SAAAga,eAAAhhB,KAAAlF,MACAkO,EAAA,KAYA,QAAAiY,KAVAjhB,KAAAugB,OAAA,KACAvX,EAAAhC,SAAAjO,cAAA,SACAS,MAAA0nB,YAAAlhB,KAAAugB,OAAA,MAGAvgB,KAAA6d,QAAApY,OAAA,KACAuD,KAAAhC,SAAAjO,cAAA,SACA2B,UAAAikB,EAAA3e,KAAA6d,UAGA7d,KAAAxG,MACAwG,KAAAxG,MAAAqM,eAAAob,MACAjY,KAAAhC,SAAAjO,cAAA,SAEAS,MAAAynB,GAAAjhB,KAAAxG,MAAAynB,IAIA,OAAAjY,GACAA,EAAA9B,YAAAkY,GACApW,GAEAoW,GASAkB,EAAA1a,UAAA0Y,SAAA,WAGA,IAAA6C,GAAA,EAEA5C,EAAA,QAEAve,KAAA6d,QAAApY,SACA0b,GAAA,EACA5C,GAAA,WACAA,GAAAvI,EAAAO,OAAAoI,EAAA3e,KAAA6d,UACAU,GAAA,KAGA,IAAAkB,EAAA,GAKA,QAAA2B,KAHAphB,KAAAugB,OAAA,IACAd,GAAA,gBAAAzf,KAAAugB,OAAA,OAEAvgB,KAAAxG,MACAwG,KAAAxG,MAAAqM,eAAAub,KACA3B,GAAAzJ,EAAAS,UAAA2K,GAAA,IAAAphB,KAAAxG,MAAA4nB,GAAA,KAIA3B,IACA0B,GAAA,EACA5C,GAAA,WAAAvI,EAAAO,OAAAkJ,GAAA,KAGA,IAAA4B,EAAArL,EAAAO,OAAAvW,KAAAlF,MACA,OAAAqmB,GACA5C,GAAA,IACAA,GAAA8C,EACA9C,GAAA,WAGA8C,GAIAf,EA3IA,GAiJAgB,EAAA,WACA,SAAAC,EAAA7kB,EAAAqiB,GACA9K,IAAAjU,KAAAuhB,GAEAvhB,KAAAtD,YAAA,GACAsD,KAAA+e,cAAA,GAyCA,OAtCAwC,EAAA3b,UAAAuY,OAAA,WACA,IACAiB,EAAApY,SAAAwa,gBADA,6BACA,OAGA,QAAAlC,KAAAtf,KAAA+e,WACA1b,OAAAuC,UAAAC,eAAAC,KAAA9F,KAAA+e,WAAAO,IACAF,EAAAG,aAAAD,EAAAtf,KAAA+e,WAAAO,IAIA,QAAA/Z,EAAA,EAAuBA,EAAAvF,KAAAtD,SAAA+I,OAA0BF,IACjD6Z,EAAAlY,YAAAlH,KAAAtD,SAAA6I,GAAA4Y,UAEA,OAAAiB,GAGAmC,EAAA3b,UAAA0Y,SAAA,WACA,IAAAC,EAAA,OAGA,QAAAe,KAAAtf,KAAA+e,WACA1b,OAAAuC,UAAAC,eAAAC,KAAA9F,KAAA+e,WAAAO,KACAf,GAAA,IAAAe,EAAA,KAAAtf,KAAA+e,WAAAO,GAAA,KAIAf,GAAA,IAEA,QAAAhZ,EAAA,EAAuBA,EAAAvF,KAAAtD,SAAA+I,OAA0BF,IACjDgZ,GAAAve,KAAAtD,SAAA6I,GAAA+Y,WAKA,OAFAC,GAAA,UAKAgD,EA9CA,GAiDAE,EAAA,WACA,SAAAC,EAAAC,EAAAC,GACA3N,IAAAjU,KAAA0hB,GAEA1hB,KAAA2hB,WACA3hB,KAAA4hB,YAwBA,OArBAF,EAAA9b,UAAAuY,OAAA,WACA,IACAiB,EAAApY,SAAAwa,gBADA,6BACA,QAQA,OANAxhB,KAAA4hB,UACAxC,EAAAG,aAAA,IAAAvf,KAAA4hB,WAEAxC,EAAAG,aAAA,IAAA1F,EAAAC,KAAA9Z,KAAA2hB,WAGAvC,GAGAsC,EAAA9b,UAAA0Y,SAAA,WACA,OAAAte,KAAA4hB,UACA,YAAA5hB,KAAA4hB,UAAA,MAEA,YAAA/H,EAAAC,KAAA9Z,KAAA2hB,UAAA,OAIAD,EA7BA,GAgCAG,EAAA,WACA,SAAAC,EAAA/C,GACA9K,IAAAjU,KAAA8hB,GAEA9hB,KAAA+e,cAAA,GA+BA,OA5BA+C,EAAAlc,UAAAuY,OAAA,WACA,IACAiB,EAAApY,SAAAwa,gBADA,6BACA,QAGA,QAAAlC,KAAAtf,KAAA+e,WACA1b,OAAAuC,UAAAC,eAAAC,KAAA9F,KAAA+e,WAAAO,IACAF,EAAAG,aAAAD,EAAAtf,KAAA+e,WAAAO,IAIA,OAAAF,GAGA0C,EAAAlc,UAAA0Y,SAAA,WACA,IAAAC,EAAA,QAEA,QAAAe,KAAAtf,KAAA+e,WACA1b,OAAAuC,UAAAC,eAAAC,KAAA9F,KAAA+e,WAAAO,KACAf,GAAA,IAAAe,EAAA,KAAAtf,KAAA+e,WAAAO,GAAA,KAMA,OAFAf,GAAA,MAKAuD,EAnCA,GAuDA,IAAAC,EAAA,CACAC,cAAA,CACAC,GAAA,sBACAC,GAAA,sBACAC,GAAA,sBACAC,GAAA,sBACAC,GAAA,sBACAC,GAAA,sBACAC,GAAA,sBACAC,GAAA,sBACAC,GAAA,sBACAC,GAAA,uBACAC,GAAA,sBACAC,GAAA,sBACAC,GAAA,sBACAC,GAAA,sBACAC,GAAA,2BACAC,GAAA,sBACAC,GAAA,2BACAC,GAAA,sBACAC,GAAA,sBACAC,GAAA,sBACAC,GAAA,sBACAC,GAAA,sBACAC,GAAA,iBACAC,GAAA,sBACAC,GAAA,sBACAC,GAAA,sBACAC,IAAA,sBACAC,IAAA,oBACAC,IAAA,2BACAC,IAAA,sBACAC,IAAA,sBACAC,IAAA,qBACAC,IAAA,mBACAC,IAAA,qBACAC,IAAA,mBACAC,IAAA,2BACAC,KAAA,2BACAC,KAAA,oBACAC,KAAA,sBACAC,KAAA,sBACAC,KAAA,sBACAC,KAAA,sBACAC,KAAA,sBACAC,KAAA,sBACAC,KAAA,sBACAC,KAAA,wBACAC,KAAA,wBACAC,KAAA,uBACAC,KAAA,uBACAC,KAAA,sBACAC,KAAA,sBACAC,KAAA,4BACAC,KAAA,4BACAC,KAAA,iBACAC,KAAA,iBACAC,KAAA,6BACAC,KAAA,uBACAC,KAAA,kBACAC,KAAA,kBACAC,KAAA,iBACAC,KAAA,iBACAC,KAAA,2BACAC,KAAA,2BACAC,KAAA,2BACAC,KAAA,2BACAC,KAAA,2BACAC,KAAA,2BACAC,KAAA,mBACAC,KAAA,mBACAC,KAAA,mBACAC,KAAA,2BACAC,KAAA,mBACAC,KAAA,2BACAC,KAAA,sBACAC,KAAA,sBACAC,KAAA,uBACAC,KAAA,uBACAC,KAAA,uBACAC,KAAA,sBACAC,KAAA,sBACAC,KAAA,uBACAC,KAAA,uBACAC,KAAA,uBACAC,KAAA,gBACAC,KAAA,sBACAC,KAAA,2BACAC,KAAA,sBACAC,KAAA,wBACAC,KAAA,2BACAC,KAAA,2BACAC,KAAA,sBACAC,KAAA,sBACAC,KAAA,sBACAC,KAAA,2BACAC,KAAA,2BACAC,KAAA,2BACAC,KAAA,2BACAC,KAAA,uBACAC,KAAA,sBACAC,KAAA,sBACAC,KAAA,4BACAC,KAAA,4BACAC,KAAA,4BACAC,KAAA,4BACAC,KAAA,2BACAC,KAAA,4BACAC,KAAA,2BACAC,KAAA,2BACAC,KAAA,2BACAC,KAAA,2BACAC,KAAA,2BACAC,KAAA,2BACAC,KAAA,sBACAC,KAAA,2BACAC,KAAA,2BACAC,KAAA,2BACAC,KAAA,2BACAC,KAAA,2BACAC,KAAA,2BACAC,KAAA,uBACAC,KAAA,2BACAC,KAAA,2BACAC,KAAA,2BACAC,KAAA,2BACAC,KAAA,2BACAC,KAAA,2BACAC,KAAA,wBACAC,KAAA,wBACAC,KAAA,2BACAC,KAAA,2BACAC,KAAA,2BACAC,KAAA,2BACAC,KAAA,2BACAC,KAAA,2BACAC,KAAA,2BACAC,KAAA,2BACAC,KAAA,2BACAC,KAAA,2BACAC,KAAA,2BACAC,KAAA,2BACAC,KAAA,2BACAC,KAAA,2BACAC,KAAA,2BACAC,KAAA,oBACAC,KAAA,oBACAC,KAAA,oBACAC,KAAA,oBACAC,KAAA,sBACAC,KAAA,sBACAC,KAAA,sBACAC,KAAA,sBACAC,KAAA,sBACAC,KAAA,sBACAC,KAAA,sBACAC,KAAA,2BACAC,KAAA,2BACAC,KAAA,2BACAC,KAAA,2BACAC,KAAA,uBACAC,KAAA,2BACAC,KAAA,2BACAC,KAAA,2BACAC,KAAA,sBACAC,KAAA,2BACAC,KAAA,2BACAC,KAAA,2BACAC,KAAA,sBACAC,KAAA,sBACAC,KAAA,4BACAC,KAAA,sBACAC,KAAA,sBACAC,KAAA,2BACAC,KAAA,2BACAC,KAAA,sBACAC,KAAA,sBACAC,KAAA,sBACA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","file":"component---src-pages-blog-katex-reminders-index-mdx-fa7b08babe4ea3231c4a.js","sourcesContent":["import React from 'react'\n\nimport Katex from '../../../components/Katex'\n\nexport default function () {\n  return <Katex\n    displayMode\n    formulae='\\underbrace{a \\cdot x^2 + b \\cdot x + c}_{\\text{Polynomial expression}}'\n  />\n}","import React from 'react'\n\nimport Katex from '../../../components/Katex'\n\nexport default function () {\n  return <Katex\n    displayMode\n    formulae={String.raw`\n      \\forall~x \\in \\reals, \\exist ~a ~and~ b \\in \\N ~where~\n      x = \\begin{cases}\n        a < x \\\\\n        x < b\n      \\end{cases}\n    `}\n  />\n}","import React from 'react'\n\nexport default function () {\n  return <code style={{ fontWeight: 700, fontSize: '1.1em' }}>{String.raw`\\u`}</code>\n}","import React from 'react'\n\nimport Katex from '../../../components/Katex'\n\nexport default function () {\n  return <Katex\n    displayMode\n    formulae={String.raw`\n      \\begin{aligned}\n        S_n &= \\sum_{n\\in\\N} a^n \\\\\n            &= 1 + a + a^2 + \\dots + a^n \\\\\n            &= \\cfrac{1 - a^{n+1}}{1 - a}\n      \\end{aligned}\n    `}\n  />\n}","import React from 'react'\n\nimport Katex from '../../../components/Katex'\n\nexport default function () {\n  return <Katex\n    displayMode\n    formulae={String.raw`\n      \\vec{v} = A \\cdot \\vec{x} = \n      % Matrix\n      \\begin{bmatrix}\n        a_{1,1} & \\dots & z_{m,1} \\\\\n        \\vdots  & \\ddots & \\vdots \\\\\n        a_{1,n} & \\dots & z_{m,n}\n      \\end{bmatrix}\n      \\cdot\n      % Vector\n      \\begin{bmatrix}\n        x_n \\\\\n        \\vdots \\\\\n        x_n\n      \\end{bmatrix}\n      =\n      % Result vector\n      \\begin{bmatrix}\n        v_m \\\\\n        \\vdots \\\\\n        v_m\n      \\end{bmatrix}\n    `}\n  />\n}","import React from 'react'\nimport { MDXTag } from '@mdx-js/tag'\n\n\nimport DefaultLayout from \"/Users/pem/Projects/PEM--.github.io/src/src/components/BlogTemplate.js\"\nimport Emoji from 'react-emoji-render'\nimport { Link } from 'gatsby'\nimport Katex from '../../../components/Katex'\nimport AnnotationLower from '../../../components/Blog/katex-reminders/AnnotationLower'\nimport Existence from '../../../components/Blog/katex-reminders/Existence'\nimport FakeUnicode from '../../../components/Blog/katex-reminders/FakeUnicode'\nimport OperationOnInterval from '../../../components/Blog/katex-reminders/OperationOnInterval'\nimport VectorAndMatrix from '../../../components/Blog/katex-reminders/VectorAndMatrix'\n\nexport default ({components, ...props}) => <MDXTag name=\"wrapper\" Layout={DefaultLayout} layoutProps={props} components={components}>\n\n\n\n<MDXTag name=\"h2\" components={components}>{`Annotations`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Upper note:`}</MDXTag>\n<Katex displayMode formulae='\\overbrace{a \\cdot x^2 + b \\cdot x +c}^{\\text{Polynomial expression}}' />\n<div className=\"gatsby-highlight\" data-language=\"katex\"><pre className=\"language-katex\"><code className=\"language-katex\">\\overbrace{\"{\"}a \\cdot x^2 + b \\cdot x +c{\"}\"}^{\"{\"}\\text{\"{\"}Polynomial expression{\"}\"}{\"}\"}</code></pre></div>\n\n<MDXTag name=\"p\" components={components}>{`Lower note:`}</MDXTag>\n<AnnotationLower />\n<MDXTag name=\"p\" components={components}>{`Same as before, just replace `}<code className=\"language-text\">overbrace</code>\n{` with `}<code className=\"language-text\">underbrace</code>\n{`.`}</MDXTag>\n<MDXTag name=\"h2\" components={components}>{`Existence & condition`}</MDXTag>\n<Existence />\n<MDXTag name=\"blockquote\" components={components}>\n<MDXTag name=\"p\" components={components} parentName=\"blockquote\"><code className=\"language-text\">~</code>\n{` is handy character in Katex for injecting a space into your equation for readability.`}</MDXTag>\n</MDXTag>\n<div className=\"gatsby-highlight\" data-language=\"katex\"><pre className=\"language-katex\"><code className=\"language-katex\">\\forall~x \\in \\reals, \\exist ~a ~and~ b \\in \\N ~where~{\"\\n\"}x = \\begin{\"{\"}cases{\"}\"}{\"\\n\"}{\"  \"}a &lt; x \\\\{\"\\n\"}{\"  \"}x &lt; b{\"\\n\"}\\end{\"{\"}cases{\"}\"}</code></pre></div>\n\n<br />\n\n<MDXTag name=\"h2\" components={components}>{`Operations on intervals`}</MDXTag>\n<OperationOnInterval />\n<MDXTag name=\"blockquote\" components={components}>\n<MDXTag name=\"p\" components={components} parentName=\"blockquote\">{`For other big operator, just replace `}<code className=\"language-text\">\\sum</code>\n{` with your operator of choice.\nHere’s a list of commonly used ones:`}</MDXTag>\n<MDXTag name=\"ul\" components={components} parentName=\"blockquote\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><code className=\"language-text\">\\sum</code>\n{` `}<Katex formulae='\\sum' /></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><code className=\"language-text\">\\prod</code>\n{` `}<Katex formulae='\\prod' /></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><code className=\"language-text\">\\int</code>\n{` `}<Katex formulae='\\int' /></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><code className=\"language-text\">\\iint</code>\n{` `}<Katex formulae='\\iint' /></MDXTag>\n</MDXTag>\n</MDXTag>\n<div className=\"gatsby-highlight\" data-language=\"katex\"><pre className=\"language-katex\"><code className=\"language-katex\">\\begin{\"{\"}aligned{\"}\"}{\"\\n\"}{\"  \"}S_n &amp;= \\sum_{\"{\"}n\\in\\N{\"}\"} a^n \\\\{\"\\n\"}{\"      \"}&amp;= 1 + a + a^2 + \\dots + a^n \\\\{\"\\n\"}{\"      \"}&amp;= \\cfrac{\"{\"}1 - a^{\"{\"}n+1{\"}\"}{\"}\"}{\"{\"}1 - a{\"}\"}{\"\\n\"}\\end{\"{\"}aligned{\"}\"}</code></pre></div>\n\n<br />\n\n<MDXTag name=\"h2\" components={components}>{`Vector & matrix`}</MDXTag>\n<VectorAndMatrix />\n<div className=\"gatsby-highlight\" data-language=\"katex\"><pre className=\"language-katex\"><code className=\"language-katex\">\\vec{\"{\"}v{\"}\"} = A \\cdot \\vec{\"{\"}x{\"}\"} = {\"\\n\"}% Matrix{\"\\n\"}\\begin{\"{\"}bmatrix{\"}\"}{\"\\n\"}{\"  \"}a_{\"{\"}1,1{\"}\"} &amp; \\dots &amp; z_{\"{\"}m,1{\"}\"} \\\\{\"\\n\"}{\"  \"}\\vdots{\"  \"}&amp; \\ddots &amp; \\vdots \\\\{\"\\n\"}{\"  \"}a_{\"{\"}1,n{\"}\"} &amp; \\dots &amp; z_{\"{\"}m,n{\"}\"}{\"\\n\"}\\end{\"{\"}bmatrix{\"}\"}{\"\\n\"}\\cdot{\"\\n\"}% Vector{\"\\n\"}\\begin{\"{\"}bmatrix{\"}\"}{\"\\n\"}{\"  \"}x_n \\\\{\"\\n\"}{\"  \"}\\vdots \\\\{\"\\n\"}{\"  \"}x_n{\"\\n\"}\\end{\"{\"}bmatrix{\"}\"}{\"\\n\"}={\"\\n\"}% Result vector{\"\\n\"}\\begin{\"{\"}bmatrix{\"}\"}{\"\\n\"}{\"  \"}v_m \\\\{\"\\n\"}{\"  \"}\\vdots \\\\{\"\\n\"}{\"  \"}v_m{\"\\n\"}\\end{\"{\"}bmatrix{\"}\"}</code></pre></div>\n\n<br />\n\n<MDXTag name=\"h2\" components={components}>{`Gotchas on escape characters & unicode`}</MDXTag>\n<MDXTag name=\"h3\" components={components}>{`For Katex`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`While using Katex in the browser, you may encounter issues with Unicode and character encoding.\nThis one `}<FakeUnicode />{` has a particularly bad behaviour `}<Emoji text=':scream:.' />{` It makes\nJS trying to interpret the following characters as an Unicode character. To prevent this interpretation,\nsimply use:`}</MDXTag>\n<div className=\"gatsby-highlight\" data-language=\"js\"><pre className=\"language-js\"><code className=\"language-js\">String<span className=\"token punctuation\">.</span>raw<span className=\"token template-string\"><span className=\"token string\">`...Any raw string that you want...`</span></span></code></pre></div>\n\n<MDXTag name=\"p\" components={components}>{`More information on `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Objets_globaux/String/raw\"}}>{`MSN web docs`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"h3\" components={components}>{`Fox MDX`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Like for Katex, some escape characters may crash your MDX rendering. With MDX ability\nto call any React component on demand, simply create a special component that will get\nrid of the pesky interpretation, like in this `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://github.com/PEM--/PEM--.github.io/blob/master/src/src/components/Blog/katex-reminders/FakeUnicode.js\"}}>{`example`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"h2\" components={components}>{`Some links`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">\n<Link to='/tools/katex-editor'>An online tool for testing your Katex rendering</Link>.\n</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">\n<MDXTag name=\"p\" components={components} parentName=\"li\"><MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://katex.org/docs/supported.html\"}}>{`Katex supported functions`}</MDXTag></MDXTag>\n</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">\n<MDXTag name=\"p\" components={components} parentName=\"li\"><MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://github.com/PEM--/PEM--.github.io/blob/master/src/src/components/Katex.js\"}}>{`Katex with React`}</MDXTag>{`\nwith the sample usage:`}</MDXTag>\n<div className=\"gatsby-highlight\" data-language=\"js\"><pre className=\"language-js\"><code className=\"language-js\"><span className=\"token operator\">&lt;</span>Katex displayMode formulae<span className=\"token operator\">=</span><span className=\"token string\">\"a^2 + b^2 = c^2\"</span> <span className=\"token operator\">/</span><span className=\"token operator\">&gt;</span></code></pre></div>\n\n<MDXTag name=\"p\" components={components} parentName=\"li\">{`That displays:`}</MDXTag>\n<Katex displayMode formulae=\"a^2 + b^2 = c^2\" />\n</MDXTag>\n</MDXTag></MDXTag>\n\nexport const _frontmatter = {};\n\n  ","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import { shouldUpdate } from 'recompose'\n\nconst noUpdate = shouldUpdate(() => false)\nexport default noUpdate","import { createGlobalStyle } from 'styled-components'\n\nimport prism from './prism'\n\nconst GlobalStyle = createGlobalStyle /* css */ `\n  html, body, #___gatsby, #___gatsby >div {\n    height: 100%;\n  }\n  div > p > .gatsby-resp-image-wrapper {\n    max-width: 100% !important;\n    .gatsby-resp-image-background-image {\n      border: 1px solid ${({ theme }) => theme.lightGray};\n      border-radius: ${({ theme }) => theme.borderRadius};\n      overflow: hidden;\n    }\n  }\n  .katex-display { margin: 0 0 .5em; }\n  .katex { font: 300 1.15em KaTeX_Main, serif; }\n  ${({ theme }) => prism(theme)}\n  .center { text-align: center; }\n`\nexport default GlobalStyle\n","export default theme => /* css */`\ncode[class*=\"language-\"],\npre[class*=\"language-\"] {\n\tcolor: ${theme.bodyColor};\n\tbackground: none;\n\tfont-family: ${theme.monospaceFont};\n\ttext-align: left;\n\twhite-space: pre;\n\tword-spacing: normal;\n\tword-break: normal;\n\tword-wrap: normal;\n\tline-height: 1.5;\n\thyphens: none;\n}\n\n/* Code blocks */\npre[class*=\"language-\"] {\n\tpadding: 1em;\n\tmargin: .5em 0;\n\toverflow: auto;\n\tborder-radius: ${theme.borderRadius};\n\tborder: 1px solid ${theme.gray};\n}\n\n:not(pre) > code[class*=\"language-\"],\npre[class*=\"language-\"] {\n\tbackground: ${theme.lightGray};\n}\n\n/* Inline code */\n:not(pre) > code[class*=\"language-\"] {\n\tpadding: .1em;\n\tborder-radius: ${theme.borderRadius};\n\twhite-space: normal;\n}\n\n.token.comment,\n.token.prolog,\n.token.doctype,\n.token.cdata {\n\tcolor: ${theme.gray};\n}\n\n.token.punctuation {\n\tcolor: ${theme.bodyColor};\n}\n\n.namespace {\n\topacity: .7;\n}\n\n.token.property,\n.token.tag,\n.token.constant,\n.token.symbol,\n.token.deleted {\n\tcolor: ${theme.secondaryColor};\n}\n\n.token.boolean,\n.token.number {\n\tcolor: ${theme.secondaryColor};\n}\n\n.token.selector,\n.token.attr-name,\n.token.string,\n.token.char,\n.token.builtin,\n.token.inserted {\n\tcolor: ${theme.secondaryColor};\n}\n\n.token.operator,\n.token.entity,\n.token.url,\n.language-css .token.string,\n.style .token.string,\n.token.variable {\n\tcolor: ${theme.bodyColor};\n}\n\n.token.atrule,\n.token.attr-value,\n.token.function,\n.token.class-name {\n\tcolor: ${theme.secondaryColor};\n}\n\n.token.keyword {\n\tcolor: ${theme.secondaryColor};\n}\n\n.token.regex,\n.token.important {\n\tcolor: ${theme.secondaryColor};\n}\n\n.token.important,\n.token.bold {\n\tfont-weight: bold;\n}\n.token.italic {\n\tfont-style: italic;\n}\n\n.token.entity {\n\tcursor: help;\n}\n`","import styled from 'styled-components'\nimport { position, size } from 'polished'\n\nconst Main = styled.main`\n  background: ${({ theme }) => theme.bgColor};\n  a {\n    position: relative;\n    display: inline-block;\n    background: transparent;\n    color: ${({ theme }) => theme.secondaryColor};\n    font-weight: bold;\n    text-decoration: none;\n    >span {\n      color: inherit;\n      background-color: inherit;\n    }\n    &::after {\n      content: '';\n      ${position('absolute', null, null, '0', '0')}\n      ${size('1px', '100%')}\n      background: ${({ theme }) => theme.secondaryColor};\n      transition:\n        opacity ${({ theme }) => theme.defaultTransition},\n        transform ${({ theme }) => theme.defaultTransition};\n      opacity: 0;\n      transform: translateY(.2em);\n    }\n    &:hover::after {\n      opacity: 1;\n      transform: none;\n    }\n  }\n`\nexport default Main","import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport { Link } from  'gatsby'\nimport { position, size } from 'polished'\nimport { string } from 'prop-types'\n\nimport noUpdate from '../hoc/noUpdate'\n\nconst Header = noUpdate(styled.header`\n  margin: 0 auto;\n  max-width: ${({ theme }) => theme.maxWidth}px;\n  a { text-decoration: none; }\n\n  @media print {\n    display: none;\n  }\n`)\n\nconst LinkList = noUpdate(styled.ul`\n  display: block;\n  list-style-type: none;\n  margin: 0;\n  text-align: right;\n  position: relative;\n  white-space: nowrap;\n  width: 100%;\n  &::before, &::after {\n    content: '';\n    display: block;\n    background:\n      linear-gradient(\n        to right,\n        transparent,\n        ${({ theme }) => theme.lightGray},\n        transparent\n      );\n    position: absolute;\n    ${size('1px', '100%')}\n  }\n  &::before { top: 0; }\n  &::after { bottom: 0; }\n  >li {\n    display: inline-block;\n    margin: 0;\n    padding: 1em 0;\n    &:not(:first-child) { margin-left: 1em; }\n  }\n  a {\n    color: ${({ theme }) => theme.gray};\n    font-family: ${({ theme }) => theme.headerFont};\n    font-size: 14px;\n    text-transform: uppercase;\n    transition: color ${({ theme }) => theme.defaultTransition};\n    &:hover, &:active {\n      color: ${({ theme }) => theme.headerColor};\n    }\n  }\n`)\n\nconst HomeLink = noUpdate(styled(Link)`\n  display: block;\n  text-align: center;\n  h1 {\n    display: inline-block;\n    margin: .5em;\n    font-weight: 900;\n    font-size: 22px;\n    letter-spacing: 1px;\n    position: relative;\n    transition: color ${({ theme }) => theme.defaultTransition};\n    &::after {\n      content: '';\n      border-radius: 50%;\n      display: block;\n      background: ${({ theme }) => theme.secondaryColor};\n      ${position('absolute', '8px', '-1em', null, null)}\n      ${size('10px')}\n    }\n    &:hover, &:active {\n      color: ${({ theme }) => theme.secondaryColor};\n    }\n  }\n`)\n\nexport default class Nav extends Component {\n  static propTypes = {\n    title: string.isRequired\n  }\n  shouldComponentUpdate = () => false\n  render () {\n    return (<nav>\n      <Header>\n        <HomeLink to='/'><h1>{this.props.title}</h1></HomeLink>\n        <LinkList>\n          <li><Link to='/'>Home</Link></li>\n          <li><Link to='/tools'>Tools</Link></li>\n          <li><Link to='/about'>About</Link></li>\n        </LinkList>\n      </Header>\n    </nav>)\n  }\n}","import Helmet from 'react-helmet'\nimport React, { Component, Fragment } from 'react'\nimport ReactPixel from 'react-facebook-pixel'\nimport styled, { ThemeProvider } from 'styled-components'\nimport { StaticQuery, graphql } from  'gatsby'\nimport { any, string } from 'prop-types'\nimport { size } from 'polished'\n\nimport GlobalStyle from '../themes/GlobalStyle'\nimport Main from '../components/Main'\nimport Nav from '../components/Nav'\nimport theme from '../themes'\n\nconst LayoutDiv = styled.div`\n  background: ${({ theme }) => theme.bgColor};\n  margin: 1em auto;\n  ${size('100%', '100vw')}\n  max-width: ${({ theme }) => theme.maxWidth}px;\n  position: relative;\n`\n\nconst facebookPixelId = '1915349895435128'\n\nexport default class Layout extends Component {\n  static fbPixelInitialized = false\n  static propTypes = {\n    children: any.isRequired,\n    description: string,\n    title: string\n  }\n  componentDidMount () {\n    if (!Layout.fbPixelInitialized) {\n      ReactPixel.init(facebookPixelId, {}, {})\n      Layout.fbPixelInitialized = true\n    }\n    ReactPixel.pageView()\n  }\n  shouldComponentUpdate = () => false\n  render () {\n    const { children, title, description } = this.props\n    return (<ThemeProvider theme={theme}>\n      <StaticQuery\n        query={graphql`\n          query {\n            site {\n              siteMetadata {\n                description\n                discussShortName\n                googleSearchConsoleOwnershipId\n                siteUrl\n                title\n              }\n            }\n          }\n        `}\n        render={({ site: { siteMetadata } }) => (<Fragment>\n          <Helmet>\n            <html lang='en' amp />\n            <title>{title ? `${siteMetadata.title}: ${title}`: siteMetadata.title}</title>\n            <meta name='description' content={description || siteMetadata.description} />\n            <meta property='og:title' content={title} />\n            <meta property='og:description' content={description || siteMetadata.description} />\n            <meta name='twitter:card' content='summary' />\n            <meta name='twitter:creator' content='PEM___' />\n            <meta name='google-site-verification' content={siteMetadata.googleSearchConsoleOwnershipId} />\n          </Helmet>\n        <Nav title={siteMetadata.title} />\n        <Main>\n          <LayoutDiv>{children({ siteMetadata })}</LayoutDiv>\n        </Main>\n        <GlobalStyle />\n      </Fragment>)}\n      />\n    </ThemeProvider>)\n  }\n}","export default {\n  bgColor: 'white',\n  bodyColor: '#333',\n  borderRadius: '5px',\n  defaultTransition: '.3s ease-in-out',\n  headerColor: '#181818',\n  /* eslint-disable */\n  headerFont: `-apple-system,'BlinkMacSystemFont','Segoe UI','Roboto','Oxygen','Ubuntu','Cantarell','Fira Sans','Droid Sans','Helvetica Neue','sans-serif'`,\n  monospaceFont: `'Andale Mono', 'Ubuntu Mono', monospace`,\n  /* eslint-enable */\n  maxWidth: 960,\n  secondaryColor: '#e70808',\n  smallFontSize: '10px',\n  smallFontWeight: 300,\n  gray: '#7f7f7f',\n  lightGray: '#e7e7e7',\n  warningColor: '#f4ab55'\n}","import React, { Component } from 'react'\nimport { string } from 'prop-types'\n\nexport default class ExternalLink extends Component {\n  static propTypes = {\n    href: string.isRequired,\n    text: string.isRequired\n  }\n  shouldComponentUpdate = () => false\n  render () {\n    return <a href={this.props.href} target='_blank' rel='noreferrer noopener'>{this.props.text}</a>\n  }\n}","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport {\n  EmailIcon,\n  EmailShareButton,\n  LinkedinIcon,\n  LinkedinShareButton,\n  TwitterIcon,\n  TwitterShareButton\n} from 'react-share'\nimport { size } from 'polished'\nimport { string } from 'prop-types'\n\nconst ShareIconBarContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 2em 0;\n  position: relative;\n  &::before, &::after {\n    content: '';\n    display: block;\n    background:\n      linear-gradient(\n        to right,\n        transparent,\n        ${({ theme }) => theme.lightGray},\n        transparent\n      );\n    position: absolute;\n    ${size('1px', '100%')}\n  }\n  &::before { top: -1em; }\n  &::after { bottom: -1em; }\n  >* {\n    cursor: pointer;\n    flex: 0 0 auto;\n    outline: 0;\n    &:not(:first-of-type) { margin-left: 1.5em; }\n  }\n\n  @media print {\n    display: none;\n  }\n`\n\nexport default class ShareIconBar extends Component {\n  static shareIconProps = { round: true, size: 32 }\n  static propTypes = {\n    href: string.isRequired,\n    title: string.isRequired\n  }\n  shouldComponentUpdate = ({ href, title }) =>\n    this.props.href !== href ||\n    this.props.title !== title\n  render () {\n    const shareButtonProps = { url: this.props.href }\n    return (<ShareIconBarContainer>\n      <TwitterShareButton title={this.props.title} {...shareButtonProps}>\n        <TwitterIcon {...ShareIconBar.shareIconProps} />\n      </TwitterShareButton>\n      <LinkedinShareButton title={this.props.title} {...shareButtonProps}>\n        <LinkedinIcon {...ShareIconBar.shareIconProps} />\n      </LinkedinShareButton>\n      <EmailShareButton subject={this.props.title} {...shareButtonProps}>\n        <EmailIcon {...ShareIconBar.shareIconProps} />\n      </EmailShareButton>\n    </ShareIconBarContainer>)\n  }\n}","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _mdxTag = require('./mdx-tag');\n\nObject.defineProperty(exports, 'MDXTag', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_mdxTag).default;\n  }\n});\n\nvar _mdxProvider = require('./mdx-provider');\n\nObject.defineProperty(exports, 'MDXProvider', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_mdxProvider).default;\n  }\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.withMDXComponents = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _createReactContext2 = require('create-react-context');\n\nvar _createReactContext3 = _interopRequireDefault(_createReactContext2);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nvar _createReactContext = (0, _createReactContext3.default)({}),\n    Provider = _createReactContext.Provider,\n    Consumer = _createReactContext.Consumer;\n\nvar withMDXComponents = function withMDXComponents(Component) {\n  return function (_ref) {\n    var components = _ref.components,\n        props = _objectWithoutProperties(_ref, ['components']);\n\n    return _react2.default.createElement(\n      Consumer,\n      null,\n      function (contextComponents) {\n        return _react2.default.createElement(Component, _extends({ components: components || contextComponents }, props));\n      }\n    );\n  };\n};\n\nexports.withMDXComponents = withMDXComponents;\nvar MDXProvider = function MDXProvider(_ref2) {\n  var components = _ref2.components,\n      children = _ref2.children;\n  return _react2.default.createElement(\n    Provider,\n    { value: components },\n    children\n  );\n};\n\nMDXProvider.propTypes = {\n  components: _propTypes2.default.object.isRequired,\n  children: _propTypes2.default.element.isRequired\n};\n\nexports.default = MDXProvider;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.insertScript = insertScript;\nexports.removeScript = removeScript;\nexports.debounce = debounce;\nfunction insertScript(src, id, parentElement) {\n    var script = window.document.createElement('script');\n    script.async = true;\n    script.src = src;\n    script.id = id;\n    parentElement.appendChild(script);\n\n    return script;\n}\n\nfunction removeScript(id, parentElement) {\n    var script = window.document.getElementById(id);\n    if (script) parentElement.removeChild(script);\n}\n\nfunction debounce(func, wait, runOnFirstCall) {\n    var timeout = void 0;\n    return function () {\n        var context = this; // eslint-disable-line consistent-this\n        var args = arguments;\n\n        var deferredExecution = function deferredExecution() {\n            timeout = null;\n            if (!runOnFirstCall) func.apply(context, args);\n        };\n\n        var callNow = runOnFirstCall && !timeout;\n\n        window.clearTimeout(timeout);\n        timeout = setTimeout(deferredExecution, wait);\n\n        if (callNow) func.apply(context, args);\n    };\n}","import styled from 'styled-components'\nimport { position } from 'polished'\n\nexport default styled.h1`\n  position: relative;\n  width: calc(100% - 60px);\n  small {\n    color: ${({ theme }) => theme.gray};\n    display: block;\n    font-weight: ${({ theme }) => theme.smallFontWeight};\n    font-size: ${({ theme }) => theme.smallFontSize};\n    font-style: italic;\n    ${position('absolute', null, '-60px', 0, null)}\n    text-align: right;\n    width: 60px;\n  }\n`","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","var baseGetTag = require('./_baseGetTag'),\n    isArray = require('./isArray'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n}\n\nmodule.exports = isString;\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport { position } from 'polished'\nimport { string } from 'prop-types'\n\nimport ExternalLink from './ExternalLink'\n\nconst ContributeContainer = styled.span`\n  display: block;\n  ${position('absolute', '-.3em', 0, null, null)}\n  font-size: .8em;\n\n  @media print {\n    display: none;\n  }\n`\n\nexport default class Contribute extends Component {\n  static propTypes = {\n    slug: string.isRequired\n  }\n  shouldComponentUpdate = () => false\n  render () {\n    return (<ContributeContainer>\n      <ExternalLink\n        href={`https://github.com/PEM--/PEM--.github.io/tree/master/src/src/pages/blog/${this.props.slug}`}\n        text='Contribute on Github'\n      />\n    </ContributeContainer>)\n  }\n}","import React, { Component } from 'react'\nimport isString from 'lodash/isString'\nimport styled from 'styled-components'\nimport { MDXProvider } from '@mdx-js/tag'\nimport { any } from 'prop-types'\nimport { position } from 'polished'\n\nimport ExternalLink from '../components/ExternalLink'\n\nconst Blockquote = styled.blockquote`\n  border-left: 1px solid ${({ theme }) => theme.lightGray};\n  margin-left: 1.5em;\n  padding-left: 1em;\n  position: relative;\n  &::before {\n    content: '➸';\n    color: ${({ theme }) => theme.secondaryColor};\n    display: block;\n    font-size: 1.2em;\n    ${position('absolute', 0, null, null, '-1.5em')}\n  }\n`\n\nconst PwithSemiColonRaw = styled.p`\n  text-align: justify;\n  &.semiColon { margin-bottom: 0; }\n`\n\nclass PwithSemiColon extends Component {\n  static propTypes = {\n    children: any\n  }\n  shouldComponentUpdate = () => false\n  render () {\n    const isEndWithSemiColon = this.props.children && isString(this.props.children) &&\n      this.props.children.endsWith(':')\n    return <PwithSemiColonRaw className={isEndWithSemiColon && 'semiColon'} {...this.props} />\n  }\n}\n\nexport default class MdxRenderer extends Component {\n  static propTypes = {\n    children: any.isRequired\n  }\n  shouldComponentUpdate = () => false\n  render () {\n    return <MDXProvider\n      components={{\n        a: ({ href, children }) => <ExternalLink href={href} text={children} />,\n        blockquote: props => <Blockquote {...props} />,\n        p: props => <PwithSemiColon {...props} />\n      }}\n    >{this.props.children}</MDXProvider>\n  }\n}\n","import Disqus from 'disqus-react'\nimport React, { Fragment } from 'react'\nimport format from 'date-fns/format'\nimport moize from 'moize'\nimport styled from 'styled-components'\n\nimport Contribute from '../components/Contribute'\nimport H1 from '../components/H1'\nimport Layout from '../components/Layout'\nimport MdxRenderer from '../components/MdxRenderer'\nimport ShareIconBar from '../components/ShareIconBar'\n\n\nconst CommentsContainer = styled.div`\n  @media print {\n    display: none;\n  }\n`\n\nconst BlogTemplate = ({ children, location: { href }, pageContext: { frontmatter } }) => {\n  const discussConfig = {\n    identifier: frontmatter.slug,\n    title: frontmatter.title,\n    url: href\n  }\n  return (<Layout {...frontmatter}>\n    {({ siteMetadata }) => {\n      return (<Fragment>\n        <H1>{frontmatter.title}<small>{format(frontmatter.date, 'DD/MM/YY')}</small></H1>\n        {frontmatter.contribute && <Contribute slug={frontmatter.slug} />}\n        <MdxRenderer>{children}</MdxRenderer>\n        <ShareIconBar href={href} title={frontmatter.title} />\n        {frontmatter.comment && (<CommentsContainer>\n          <Disqus.DiscussionEmbed\n            config={discussConfig}\n            shortname={siteMetadata.discussShortName} />\n        </CommentsContainer>)}\n      </Fragment>)}}\n  </Layout>)\n}\n\nconst MoizedBlogTemplate = moize.react(BlogTemplate)\nexport default MoizedBlogTemplate","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.DiscussionEmbed = exports.CommentEmbed = exports.CommentCount = undefined;\n\nvar _CommentCount = require('./CommentCount');\n\nvar _CommentEmbed = require('./CommentEmbed');\n\nvar _DiscussionEmbed = require('./DiscussionEmbed');\n\nexports.CommentCount = _CommentCount.CommentCount;\nexports.CommentEmbed = _CommentEmbed.CommentEmbed;\nexports.DiscussionEmbed = _DiscussionEmbed.DiscussionEmbed;\n\n\nvar Disqus = {\n    CommentCount: _CommentCount.CommentCount,\n    CommentEmbed: _CommentEmbed.CommentEmbed,\n    DiscussionEmbed: _DiscussionEmbed.DiscussionEmbed\n};\n\nexports.default = Disqus;","// 21.1.3.6 String.prototype.endsWith(searchString [, endPosition])\n'use strict';\nvar $export = require('./_export');\nvar toLength = require('./_to-length');\nvar context = require('./_string-context');\nvar ENDS_WITH = 'endsWith';\nvar $endsWith = ''[ENDS_WITH];\n\n$export($export.P + $export.F * require('./_fails-is-regexp')(ENDS_WITH), 'String', {\n  endsWith: function endsWith(searchString /* , endPosition = @length */) {\n    var that = context(this, searchString, ENDS_WITH);\n    var endPosition = arguments.length > 1 ? arguments[1] : undefined;\n    var len = toLength(that.length);\n    var end = endPosition === undefined ? len : Math.min(toLength(endPosition), len);\n    var search = String(searchString);\n    return $endsWith\n      ? $endsWith.call(that, search, end)\n      : that.slice(end - search.length, end) === search;\n  }\n});\n","import React, { Component } from 'react'\nimport katex from 'katex'\nimport styled from 'styled-components'\nimport { bool, string } from 'prop-types'\n\nconst SpanWarning = styled.span`\n  color: ${({ theme }) => theme.warningColor};\n`\n\nexport default class Katex extends Component {\n  static propTypes = {\n    displayMode: bool,\n    formulae: string.isRequired\n  }\n  shouldComponentUpdate = ({ formulae }) => this.props.formulae !== formulae\n  render () {\n    try {\n      const __html = katex.renderToString(\n        this.props.formulae,\n        { displayMode: this.props.displayMode }\n      )\n      return <span dangerouslySetInnerHTML={{ __html }} />\n    } catch (err) {\n      const formattedError = err.toString()\n        .replace('ParseError: KaTeX parse error: ', '')\n      return <SpanWarning>{formattedError}</SpanWarning>\n    }\n  }\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _hoistNonReactStatics = require('hoist-non-react-statics');\n\nvar _hoistNonReactStatics2 = _interopRequireDefault(_hoistNonReactStatics);\n\nvar _mdxProvider = require('./mdx-provider');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar defaults = {\n  inlineCode: 'code',\n  wrapper: 'div'\n};\n\nvar MDXTag = function (_Component) {\n  _inherits(MDXTag, _Component);\n\n  function MDXTag() {\n    _classCallCheck(this, MDXTag);\n\n    return _possibleConstructorReturn(this, (MDXTag.__proto__ || Object.getPrototypeOf(MDXTag)).apply(this, arguments));\n  }\n\n  _createClass(MDXTag, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          name = _props.name,\n          parentName = _props.parentName,\n          _props$props = _props.props,\n          childProps = _props$props === undefined ? {} : _props$props,\n          children = _props.children,\n          _props$components = _props.components,\n          components = _props$components === undefined ? {} : _props$components,\n          Layout = _props.Layout,\n          layoutProps = _props.layoutProps;\n\n\n      var Component = components[parentName + '.' + name] || components[name] || defaults[name] || name;\n\n      if (Layout) {\n        (0, _hoistNonReactStatics2.default)(this, Layout);\n\n        return _react2.default.createElement(\n          Layout,\n          _extends({ components: components }, layoutProps),\n          _react2.default.createElement(\n            Component,\n            childProps,\n            children\n          )\n        );\n      }\n\n      return _react2.default.createElement(\n        Component,\n        childProps,\n        children\n      );\n    }\n  }]);\n\n  return MDXTag;\n}(_react.Component);\n\nexports.default = (0, _mdxProvider.withMDXComponents)(MDXTag);","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.CommentCount = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _utils = require('./utils');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar queueResetCount = (0, _utils.debounce)(function () {\n    if (window.DISQUSWIDGETS) window.DISQUSWIDGETS.getCount({ reset: true });\n}, 300, false); // eslint-disable-line no-magic-numbers\n\nvar CommentCount = exports.CommentCount = function (_React$Component) {\n    _inherits(CommentCount, _React$Component);\n\n    function CommentCount() {\n        _classCallCheck(this, CommentCount);\n\n        return _possibleConstructorReturn(this, (CommentCount.__proto__ || Object.getPrototypeOf(CommentCount)).apply(this, arguments));\n    }\n\n    _createClass(CommentCount, [{\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            this.loadInstance();\n        }\n    }, {\n        key: 'shouldComponentUpdate',\n        value: function shouldComponentUpdate(nextProps) {\n            if (this.props.shortname !== nextProps.shortname) return true;\n\n            var nextConfig = nextProps.config;\n            var config = this.props.config;\n            if (nextConfig.url === config.url || nextConfig.identifier === config.identifier) return false;\n            return true;\n        }\n    }, {\n        key: 'componentWillUpdate',\n        value: function componentWillUpdate(nextProps) {\n            if (this.props.shortname !== nextProps.shortname) this.cleanInstance();\n        }\n    }, {\n        key: 'componentDidUpdate',\n        value: function componentDidUpdate() {\n            this.loadInstance();\n        }\n    }, {\n        key: 'loadInstance',\n        value: function loadInstance() {\n            var doc = window.document;\n            if (doc.getElementById('dsq-count-scr')) queueResetCount();else (0, _utils.insertScript)('https://' + this.props.shortname + '.disqus.com/count.js', 'dsq-count-scr', doc.body);\n        }\n    }, {\n        key: 'cleanInstance',\n        value: function cleanInstance() {\n            var body = window.document.body;\n            (0, _utils.removeScript)('dsq-count-scr', body);\n\n            // count.js only reassigns this window object if it's undefined.\n            window.DISQUSWIDGETS = undefined;\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            return _react2.default.createElement(\n                'span',\n                {\n                    className: 'disqus-comment-count',\n                    'data-disqus-identifier': this.props.config.identifier,\n                    'data-disqus-url': this.props.config.url\n                },\n                this.props.children\n            );\n        }\n    }]);\n\n    return CommentCount;\n}(_react2.default.Component);","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.CommentEmbed = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar RADIX_BASE = 36;\n\nvar CommentEmbed = exports.CommentEmbed = function (_React$Component) {\n    _inherits(CommentEmbed, _React$Component);\n\n    function CommentEmbed() {\n        _classCallCheck(this, CommentEmbed);\n\n        return _possibleConstructorReturn(this, (CommentEmbed.__proto__ || Object.getPrototypeOf(CommentEmbed)).apply(this, arguments));\n    }\n\n    _createClass(CommentEmbed, [{\n        key: 'getSrc',\n        value: function getSrc() {\n            var post = Number(this.props.commentId).toString(RADIX_BASE);\n            var parentParam = this.props.showParentComment ? '1' : '0';\n            var mediaParam = this.props.showMedia ? '1' : '0';\n\n            return 'https://embed.disqus.com/p/' + post + '?p=' + parentParam + '&m=' + mediaParam;\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            return _react2.default.createElement('iframe', {\n                src: this.getSrc(),\n                width: this.props.width,\n                height: this.props.height,\n                seamless: 'seamless',\n                scrolling: 'no',\n                frameBorder: '0'\n            });\n        }\n    }]);\n\n    return CommentEmbed;\n}(_react2.default.Component);\n\nCommentEmbed.defaultProps = {\n    showMedia: true,\n    showParentComment: true,\n    width: 420,\n    height: 320\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.DiscussionEmbed = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _utils = require('./utils');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar DiscussionEmbed = exports.DiscussionEmbed = function (_React$Component) {\n    _inherits(DiscussionEmbed, _React$Component);\n\n    function DiscussionEmbed() {\n        _classCallCheck(this, DiscussionEmbed);\n\n        return _possibleConstructorReturn(this, (DiscussionEmbed.__proto__ || Object.getPrototypeOf(DiscussionEmbed)).apply(this, arguments));\n    }\n\n    _createClass(DiscussionEmbed, [{\n        key: 'componentWillMount',\n        value: function componentWillMount() {\n            if (typeof window !== 'undefined' && window.disqus_shortname && window.disqus_shortname !== this.props.shortname) this.cleanInstance();\n        }\n    }, {\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            this.loadInstance();\n        }\n    }, {\n        key: 'shouldComponentUpdate',\n        value: function shouldComponentUpdate(nextProps) {\n            if (this.props.shortname !== nextProps.shortname) return true;\n\n            var nextConfig = nextProps.config;\n            var config = this.props.config;\n            if (nextConfig.url === config.url || nextConfig.identifier === config.identifier) return false;\n            return true;\n        }\n    }, {\n        key: 'componentWillUpdate',\n        value: function componentWillUpdate(nextProps) {\n            if (this.props.shortname !== nextProps.shortname) this.cleanInstance();\n        }\n    }, {\n        key: 'componentDidUpdate',\n        value: function componentDidUpdate() {\n            this.loadInstance();\n        }\n    }, {\n        key: 'loadInstance',\n        value: function loadInstance() {\n            var doc = window.document;\n            if (window && window.DISQUS && doc.getElementById('dsq-embed-scr')) {\n                window.DISQUS.reset({\n                    reload: true,\n                    config: this.getDisqusConfig(this.props.config)\n                });\n            } else {\n                window.disqus_config = this.getDisqusConfig(this.props.config);\n                window.disqus_shortname = this.props.shortname;\n                (0, _utils.insertScript)('https://' + this.props.shortname + '.disqus.com/embed.js', 'dsq-embed-scr', doc.body);\n            }\n        }\n    }, {\n        key: 'cleanInstance',\n        value: function cleanInstance() {\n            var doc = window.document;\n            (0, _utils.removeScript)('dsq-embed-scr', doc.body);\n            if (window && window.DISQUS) window.DISQUS.reset({});\n\n            try {\n                delete window.DISQUS;\n            } catch (error) {\n                window.DISQUS = undefined;\n            }\n            var disqusThread = doc.getElementById('disqus_thread');\n            if (disqusThread) {\n                while (disqusThread.hasChildNodes()) {\n                    disqusThread.removeChild(disqusThread.firstChild);\n                }\n            }\n        }\n    }, {\n        key: 'getDisqusConfig',\n        value: function getDisqusConfig(config) {\n            return function () {\n                this.page.identifier = config.identifier;\n                this.page.url = config.url;\n                this.page.title = config.title;\n                this.callbacks.onNewComment = [config.onNewComment];\n            };\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            return _react2.default.createElement('div', { id: 'disqus_thread' });\n        }\n    }]);\n\n    return DiscussionEmbed;\n}(_react2.default.Component);","// helper for String#{startsWith, endsWith, includes}\nvar isRegExp = require('./_is-regexp');\nvar defined = require('./_defined');\n\nmodule.exports = function (that, searchString, NAME) {\n  if (isRegExp(searchString)) throw TypeError('String#' + NAME + \" doesn't accept regex!\");\n  return String(defined(that));\n};\n","var MATCH = require('./_wks')('match');\nmodule.exports = function (KEY) {\n  var re = /./;\n  try {\n    '/./'[KEY](re);\n  } catch (e) {\n    try {\n      re[MATCH] = false;\n      return !'/./'[KEY](re);\n    } catch (f) { /* empty */ }\n  } return true;\n};\n","var $export = require('./_export');\nvar toIObject = require('./_to-iobject');\nvar toLength = require('./_to-length');\n\n$export($export.S, 'String', {\n  // 21.1.2.4 String.raw(callSite, ...substitutions)\n  raw: function raw(callSite) {\n    var tpl = toIObject(callSite.raw);\n    var len = toLength(tpl.length);\n    var aLen = arguments.length;\n    var res = [];\n    var i = 0;\n    while (len > i) {\n      res.push(String(tpl[i++]));\n      if (i < aLen) res.push(String(arguments[i]));\n    } return res.join('');\n  }\n});\n","'use strict';\nrequire('./es6.regexp.flags');\nvar anObject = require('./_an-object');\nvar $flags = require('./_flags');\nvar DESCRIPTORS = require('./_descriptors');\nvar TO_STRING = 'toString';\nvar $toString = /./[TO_STRING];\n\nvar define = function (fn) {\n  require('./_redefine')(RegExp.prototype, TO_STRING, fn, true);\n};\n\n// 21.2.5.14 RegExp.prototype.toString()\nif (require('./_fails')(function () { return $toString.call({ source: 'a', flags: 'b' }) != '/a/b'; })) {\n  define(function toString() {\n    var R = anObject(this);\n    return '/'.concat(R.source, '/',\n      'flags' in R ? R.flags : !DESCRIPTORS && R instanceof RegExp ? $flags.call(R) : undefined);\n  });\n// FF44- RegExp#toString has a wrong name\n} else if ($toString.name != TO_STRING) {\n  define(function toString() {\n    return $toString.call(this);\n  });\n}\n","'use strict';\n// 21.2.5.3 get RegExp.prototype.flags\nvar anObject = require('./_an-object');\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.unicode) result += 'u';\n  if (that.sticky) result += 'y';\n  return result;\n};\n","var DateProto = Date.prototype;\nvar INVALID_DATE = 'Invalid Date';\nvar TO_STRING = 'toString';\nvar $toString = DateProto[TO_STRING];\nvar getTime = DateProto.getTime;\nif (new Date(NaN) + '' != INVALID_DATE) {\n  require('./_redefine')(DateProto, TO_STRING, function toString() {\n    var value = getTime.call(this);\n    // eslint-disable-next-line no-self-compare\n    return value === value ? $toString.call(this) : INVALID_DATE;\n  });\n}\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"katex\"] = factory();\n\telse\n\t\troot[\"katex\"] = factory();\n})((typeof self !== 'undefined' ? self : this), function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 3);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nexports.default = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// extracted by mini-css-extract-plugin\n\n/***/ }),\n/* 2 */,\n/* 3 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./src/katex.less\nvar katex = __webpack_require__(1);\n\n// EXTERNAL MODULE: ./node_modules/babel-runtime/helpers/classCallCheck.js\nvar classCallCheck = __webpack_require__(0);\nvar classCallCheck_default = /*#__PURE__*/__webpack_require__.n(classCallCheck);\n\n// CONCATENATED MODULE: ./src/SourceLocation.js\n\n\n/**\n * Lexing or parsing positional information for error reporting.\n * This object is immutable.\n */\nvar SourceLocation_SourceLocation = function () {\n    // End offset, zero-based exclusive.\n\n    // Lexer holding the input string.\n    function SourceLocation(lexer, start, end) {\n        classCallCheck_default()(this, SourceLocation);\n\n        this.lexer = lexer;\n        this.start = start;\n        this.end = end;\n    }\n\n    /**\n     * Merges two `SourceLocation`s from location providers, given they are\n     * provided in order of appearance.\n     * - Returns the first one's location if only the first is provided.\n     * - Returns a merged range of the first and the last if both are provided\n     *   and their lexers match.\n     * - Otherwise, returns null.\n     */\n    // Start offset, zero-based inclusive.\n\n    // The + prefix indicates that these fields aren't writeable\n\n\n    SourceLocation.range = function range(first, second) {\n        if (!second) {\n            return first && first.loc;\n        } else if (!first || !first.loc || !second.loc || first.loc.lexer !== second.loc.lexer) {\n            return null;\n        } else {\n            return new SourceLocation(first.loc.lexer, first.loc.start, second.loc.end);\n        }\n    };\n\n    return SourceLocation;\n}();\n\n/* harmony default export */ var src_SourceLocation = (SourceLocation_SourceLocation);\n// CONCATENATED MODULE: ./src/Token.js\n\n\n\n/**\n * Interface required to break circular dependency between Token, Lexer, and\n * ParseError.\n */\n\n\n/**\n * The resulting token returned from `lex`.\n *\n * It consists of the token text plus some position information.\n * The position information is essentially a range in an input string,\n * but instead of referencing the bare input string, we refer to the lexer.\n * That way it is possible to attach extra metadata to the input string,\n * like for example a file name or similar.\n *\n * The position information is optional, so it is OK to construct synthetic\n * tokens if appropriate. Not providing available position information may\n * lead to degraded error reporting, though.\n */\nvar Token_Token = function () {\n    function Token(text, // the text of this token\n    loc) {\n        classCallCheck_default()(this, Token);\n\n        this.text = text;\n        this.loc = loc;\n    }\n\n    /**\n     * Given a pair of tokens (this and endToken), compute a `Token` encompassing\n     * the whole input range enclosed by these two.\n     */\n\n\n    Token.prototype.range = function range(endToken, // last token of the range, inclusive\n    text) // the text of the newly constructed token\n    {\n        return new Token(text, src_SourceLocation.range(this, endToken));\n    };\n\n    return Token;\n}();\n// CONCATENATED MODULE: ./src/ParseError.js\n\n\n\n/**\n * This is the ParseError class, which is the main error thrown by KaTeX\n * functions when something has gone wrong. This is used to distinguish internal\n * errors from errors in the expression that the user provided.\n *\n * If possible, a caller should provide a Token or ParseNode with information\n * about where in the source string the problem occurred.\n */\nvar ParseError_ParseError =\n// Error position based on passed-in Token or ParseNode.\n\nfunction ParseError(message, // The error message\ntoken) // An object providing position information\n{\n    classCallCheck_default()(this, ParseError);\n\n    var error = \"KaTeX parse error: \" + message;\n    var start = void 0;\n\n    var loc = token && token.loc;\n    if (loc && loc.start <= loc.end) {\n        // If we have the input and a position, make the error a bit fancier\n\n        // Get the input\n        var input = loc.lexer.input;\n\n        // Prepend some information\n        start = loc.start;\n        var end = loc.end;\n        if (start === input.length) {\n            error += \" at end of input: \";\n        } else {\n            error += \" at position \" + (start + 1) + \": \";\n        }\n\n        // Underline token in question using combining underscores\n        var underlined = input.slice(start, end).replace(/[^]/g, \"$&\\u0332\");\n\n        // Extract some context from the input and add it to the error\n        var left = void 0;\n        if (start > 15) {\n            left = \"…\" + input.slice(start - 15, start);\n        } else {\n            left = input.slice(0, start);\n        }\n        var right = void 0;\n        if (end + 15 < input.length) {\n            right = input.slice(end, end + 15) + \"…\";\n        } else {\n            right = input.slice(end);\n        }\n        error += left + underlined + right;\n    }\n\n    // Some hackery to make ParseError a prototype of Error\n    // See http://stackoverflow.com/a/8460753\n    var self = new Error(error);\n    self.name = \"ParseError\";\n    // $FlowFixMe\n    self.__proto__ = ParseError.prototype;\n    // $FlowFixMe\n    self.position = start;\n    return self;\n};\n\n// $FlowFixMe More hackery\n\n\nParseError_ParseError.prototype.__proto__ = Error.prototype;\n\n/* harmony default export */ var src_ParseError = (ParseError_ParseError);\n// CONCATENATED MODULE: ./src/utils.js\n\n\n/**\n * Return whether an element is contained in a list\n */\nvar contains = function contains(list, elem) {\n    return list.indexOf(elem) !== -1;\n};\n\n/**\n * Provide a default value if a setting is undefined\n * NOTE: Couldn't use `T` as the output type due to facebook/flow#5022.\n */\n\n/**\n * This file contains a list of utility functions which are useful in other\n * files.\n */\n\nvar deflt = function deflt(setting, defaultIfUndefined) {\n    return setting === undefined ? defaultIfUndefined : setting;\n};\n\n// hyphenate and escape adapted from Facebook's React under Apache 2 license\n\nvar uppercase = /([A-Z])/g;\nvar hyphenate = function hyphenate(str) {\n    return str.replace(uppercase, \"-$1\").toLowerCase();\n};\n\nvar ESCAPE_LOOKUP = {\n    \"&\": \"&amp;\",\n    \">\": \"&gt;\",\n    \"<\": \"&lt;\",\n    \"\\\"\": \"&quot;\",\n    \"'\": \"&#x27;\"\n};\n\nvar ESCAPE_REGEX = /[&><\"']/g;\n\n/**\n * Escapes text to prevent scripting attacks.\n */\nfunction utils_escape(text) {\n    return String(text).replace(ESCAPE_REGEX, function (match) {\n        return ESCAPE_LOOKUP[match];\n    });\n}\n\n/**\n * Sometimes we want to pull out the innermost element of a group. In most\n * cases, this will just be the group itself, but when ordgroups and colors have\n * a single element, we want to pull that out.\n */\nvar getBaseElem = function getBaseElem(group) {\n    if (group.type === \"ordgroup\") {\n        if (group.body.length === 1) {\n            return getBaseElem(group.body[0]);\n        } else {\n            return group;\n        }\n    } else if (group.type === \"color\") {\n        if (group.body.length === 1) {\n            return getBaseElem(group.body[0]);\n        } else {\n            return group;\n        }\n    } else if (group.type === \"font\") {\n        return getBaseElem(group.body);\n    } else {\n        return group;\n    }\n};\n\n/**\n * TeXbook algorithms often reference \"character boxes\", which are simply groups\n * with a single character in them. To decide if something is a character box,\n * we find its innermost group, and see if it is a single character.\n */\nvar utils_isCharacterBox = function isCharacterBox(group) {\n    var baseElem = getBaseElem(group);\n\n    // These are all they types of groups which hold single characters\n    return baseElem.type === \"mathord\" || baseElem.type === \"textord\" || baseElem.type === \"atom\";\n};\n\nvar assert = function assert(value) {\n    if (!value) {\n        throw new Error('Expected non-null, but got ' + String(value));\n    }\n    return value;\n};\n\nvar assertType = function assertType(val, Cls) {\n    if (val instanceof Cls) {\n        return val;\n    }\n\n    // $FlowFixMe: Get constructor name if possible.\n    var expected = String(Cls.name || Cls);\n    // $FlowFixMe: Get constructor name if possible; else stringify value.\n    var actual = String(val.constructor.name || val);\n    throw new Error(\"Expected \" + expected + \" but got \" + actual + \".\");\n};\n\n/* harmony default export */ var utils = ({\n    contains: contains,\n    deflt: deflt,\n    escape: utils_escape,\n    hyphenate: hyphenate,\n    getBaseElem: getBaseElem,\n    isCharacterBox: utils_isCharacterBox\n});\n// CONCATENATED MODULE: ./src/Settings.js\n\n\n/* eslint no-console:0 */\n/**\n * This is a module for storing settings passed into KaTeX. It correctly handles\n * default settings.\n */\n\n\n\n\n\n/**\n * The main Settings object\n *\n * The current options stored are:\n *  - displayMode: Whether the expression should be typeset as inline math\n *                 (false, the default), meaning that the math starts in\n *                 \\textstyle and is placed in an inline-block); or as display\n *                 math (true), meaning that the math starts in \\displaystyle\n *                 and is placed in a block with vertical margin.\n */\nvar Settings_Settings = function () {\n    function Settings(options) {\n        classCallCheck_default()(this, Settings);\n\n        // allow null options\n        options = options || {};\n        this.displayMode = utils.deflt(options.displayMode, false);\n        this.throwOnError = utils.deflt(options.throwOnError, true);\n        this.errorColor = utils.deflt(options.errorColor, \"#cc0000\");\n        this.macros = options.macros || {};\n        this.colorIsTextColor = utils.deflt(options.colorIsTextColor, false);\n        this.strict = utils.deflt(options.strict, \"warn\");\n        this.maxSize = Math.max(0, utils.deflt(options.maxSize, Infinity));\n        this.maxExpand = Math.max(0, utils.deflt(options.maxExpand, 1000));\n        this.allowedProtocols = utils.deflt(options.allowedProtocols, [\"http\", \"https\", \"mailto\", \"_relative\"]);\n    }\n\n    /**\n     * Report nonstrict (non-LaTeX-compatible) input.\n     * Can safely not be called if `this.strict` is false in JavaScript.\n     */\n\n\n    Settings.prototype.reportNonstrict = function reportNonstrict(errorCode, errorMsg, token) {\n        var strict = this.strict;\n        if (typeof strict === \"function\") {\n            // Allow return value of strict function to be boolean or string\n            // (or null/undefined, meaning no further processing).\n            strict = strict(errorCode, errorMsg, token);\n        }\n        if (!strict || strict === \"ignore\") {\n            return;\n        } else if (strict === true || strict === \"error\") {\n            throw new src_ParseError(\"LaTeX-incompatible input and strict mode is set to 'error': \" + (errorMsg + \" [\" + errorCode + \"]\"), token);\n        } else if (strict === \"warn\") {\n            typeof console !== \"undefined\" && console.warn(\"LaTeX-incompatible input and strict mode is set to 'warn': \" + (errorMsg + \" [\" + errorCode + \"]\"));\n        } else {\n            // won't happen in type-safe code\n            typeof console !== \"undefined\" && console.warn(\"LaTeX-incompatible input and strict mode is set to \" + (\"unrecognized '\" + strict + \"': \" + errorMsg + \" [\" + errorCode + \"]\"));\n        }\n    };\n\n    /**\n     * Check whether to apply strict (LaTeX-adhering) behavior for unusual\n     * input (like `\\\\`).  Unlike `nonstrict`, will not throw an error;\n     * instead, \"error\" translates to a return value of `true`, while \"ignore\"\n     * translates to a return value of `false`.  May still print a warning:\n     * \"warn\" prints a warning and returns `false`.\n     * This is for the second category of `errorCode`s listed in the README.\n     */\n\n\n    Settings.prototype.useStrictBehavior = function useStrictBehavior(errorCode, errorMsg, token) {\n        var strict = this.strict;\n        if (typeof strict === \"function\") {\n            // Allow return value of strict function to be boolean or string\n            // (or null/undefined, meaning no further processing).\n            // But catch any exceptions thrown by function, treating them\n            // like \"error\".\n            try {\n                strict = strict(errorCode, errorMsg, token);\n            } catch (error) {\n                strict = \"error\";\n            }\n        }\n        if (!strict || strict === \"ignore\") {\n            return false;\n        } else if (strict === true || strict === \"error\") {\n            return true;\n        } else if (strict === \"warn\") {\n            typeof console !== \"undefined\" && console.warn(\"LaTeX-incompatible input and strict mode is set to 'warn': \" + (errorMsg + \" [\" + errorCode + \"]\"));\n            return false;\n        } else {\n            // won't happen in type-safe code\n            typeof console !== \"undefined\" && console.warn(\"LaTeX-incompatible input and strict mode is set to \" + (\"unrecognized '\" + strict + \"': \" + errorMsg + \" [\" + errorCode + \"]\"));\n            return false;\n        }\n    };\n\n    return Settings;\n}();\n\n/* harmony default export */ var src_Settings = (Settings_Settings);\n// CONCATENATED MODULE: ./src/Style.js\n\n\n/**\n * This file contains information and classes for the various kinds of styles\n * used in TeX. It provides a generic `Style` class, which holds information\n * about a specific style. It then provides instances of all the different kinds\n * of styles possible, and provides functions to move between them and get\n * information about them.\n */\n\n/**\n * The main style class. Contains a unique id for the style, a size (which is\n * the same for cramped and uncramped version of a style), and a cramped flag.\n */\nvar Style_Style = function () {\n    function Style(id, size, cramped) {\n        classCallCheck_default()(this, Style);\n\n        this.id = id;\n        this.size = size;\n        this.cramped = cramped;\n    }\n\n    /**\n     * Get the style of a superscript given a base in the current style.\n     */\n\n\n    Style.prototype.sup = function sup() {\n        return Style_styles[_sup[this.id]];\n    };\n\n    /**\n     * Get the style of a subscript given a base in the current style.\n     */\n\n\n    Style.prototype.sub = function sub() {\n        return Style_styles[_sub[this.id]];\n    };\n\n    /**\n     * Get the style of a fraction numerator given the fraction in the current\n     * style.\n     */\n\n\n    Style.prototype.fracNum = function fracNum() {\n        return Style_styles[_fracNum[this.id]];\n    };\n\n    /**\n     * Get the style of a fraction denominator given the fraction in the current\n     * style.\n     */\n\n\n    Style.prototype.fracDen = function fracDen() {\n        return Style_styles[_fracDen[this.id]];\n    };\n\n    /**\n     * Get the cramped version of a style (in particular, cramping a cramped style\n     * doesn't change the style).\n     */\n\n\n    Style.prototype.cramp = function cramp() {\n        return Style_styles[_cramp[this.id]];\n    };\n\n    /**\n     * Get a text or display version of this style.\n     */\n\n\n    Style.prototype.text = function text() {\n        return Style_styles[_text[this.id]];\n    };\n\n    /**\n     * Return true if this style is tightly spaced (scriptstyle/scriptscriptstyle)\n     */\n\n\n    Style.prototype.isTight = function isTight() {\n        return this.size >= 2;\n    };\n\n    return Style;\n}();\n\n// Export an interface for type checking, but don't expose the implementation.\n// This way, no more styles can be generated.\n\n\n// IDs of the different styles\nvar D = 0;\nvar Dc = 1;\nvar T = 2;\nvar Tc = 3;\nvar S = 4;\nvar Sc = 5;\nvar SS = 6;\nvar SSc = 7;\n\n// Instances of the different styles\nvar Style_styles = [new Style_Style(D, 0, false), new Style_Style(Dc, 0, true), new Style_Style(T, 1, false), new Style_Style(Tc, 1, true), new Style_Style(S, 2, false), new Style_Style(Sc, 2, true), new Style_Style(SS, 3, false), new Style_Style(SSc, 3, true)];\n\n// Lookup tables for switching from one style to another\nvar _sup = [S, Sc, S, Sc, SS, SSc, SS, SSc];\nvar _sub = [Sc, Sc, Sc, Sc, SSc, SSc, SSc, SSc];\nvar _fracNum = [T, Tc, S, Sc, SS, SSc, SS, SSc];\nvar _fracDen = [Tc, Tc, Sc, Sc, SSc, SSc, SSc, SSc];\nvar _cramp = [Dc, Dc, Tc, Tc, Sc, Sc, SSc, SSc];\nvar _text = [D, Dc, T, Tc, T, Tc, T, Tc];\n\n// We only export some of the styles.\n/* harmony default export */ var src_Style = ({\n    DISPLAY: Style_styles[D],\n    TEXT: Style_styles[T],\n    SCRIPT: Style_styles[S],\n    SCRIPTSCRIPT: Style_styles[SS]\n});\n// CONCATENATED MODULE: ./src/unicodeScripts.js\n\n\n/**\n * Unicode block data for the families of scripts we support in \\text{}.\n * Scripts only need to appear here if they do not have font metrics.\n */\nvar scriptData = [{\n    // Latin characters beyond the Latin-1 characters we have metrics for.\n    // Needed for Czech, Hungarian and Turkish text, for example.\n    name: 'latin',\n    blocks: [[0x0100, 0x024f], // Latin Extended-A and Latin Extended-B\n    [0x0300, 0x036f]]\n}, {\n    // The Cyrillic script used by Russian and related languages.\n    // A Cyrillic subset used to be supported as explicitly defined\n    // symbols in symbols.js\n    name: 'cyrillic',\n    blocks: [[0x0400, 0x04ff]]\n}, {\n    // The Brahmic scripts of South and Southeast Asia\n    // Devanagari (0900–097F)\n    // Bengali (0980–09FF)\n    // Gurmukhi (0A00–0A7F)\n    // Gujarati (0A80–0AFF)\n    // Oriya (0B00–0B7F)\n    // Tamil (0B80–0BFF)\n    // Telugu (0C00–0C7F)\n    // Kannada (0C80–0CFF)\n    // Malayalam (0D00–0D7F)\n    // Sinhala (0D80–0DFF)\n    // Thai (0E00–0E7F)\n    // Lao (0E80–0EFF)\n    // Tibetan (0F00–0FFF)\n    // Myanmar (1000–109F)\n    name: 'brahmic',\n    blocks: [[0x0900, 0x109F]]\n}, {\n    name: 'georgian',\n    blocks: [[0x10A0, 0x10ff]]\n}, {\n    // Chinese and Japanese.\n    // The \"k\" in cjk is for Korean, but we've separated Korean out\n    name: \"cjk\",\n    blocks: [[0x3000, 0x30FF], // CJK symbols and punctuation, Hiragana, Katakana\n    [0x4E00, 0x9FAF], // CJK ideograms\n    [0xFF00, 0xFF60]]\n}, {\n    // Korean\n    name: 'hangul',\n    blocks: [[0xAC00, 0xD7AF]]\n}];\n\n/**\n * Given a codepoint, return the name of the script or script family\n * it is from, or null if it is not part of a known block\n */\n\n\n/*\n * This file defines the Unicode scripts and script families that we\n * support. To add new scripts or families, just add a new entry to the\n * scriptData array below. Adding scripts to the scriptData array allows\n * characters from that script to appear in \\text{} environments.\n */\n\n/**\n * Each script or script family has a name and an array of blocks.\n * Each block is an array of two numbers which specify the start and\n * end points (inclusive) of a block of Unicode codepoints.\n */\nfunction scriptFromCodepoint(codepoint) {\n    for (var i = 0; i < scriptData.length; i++) {\n        var script = scriptData[i];\n        for (var _i = 0; _i < script.blocks.length; _i++) {\n            var block = script.blocks[_i];\n            if (codepoint >= block[0] && codepoint <= block[1]) {\n                return script.name;\n            }\n        }\n    }\n    return null;\n}\n\n/**\n * A flattened version of all the supported blocks in a single array.\n * This is an optimization to make supportedCodepoint() fast.\n */\nvar allBlocks = [];\nscriptData.forEach(function (s) {\n    return s.blocks.forEach(function (b) {\n        return allBlocks.push.apply(allBlocks, b);\n    });\n});\n\n/**\n * Given a codepoint, return true if it falls within one of the\n * scripts or script families defined above and false otherwise.\n *\n * Micro benchmarks shows that this is faster than\n * /[\\u3000-\\u30FF\\u4E00-\\u9FAF\\uFF00-\\uFF60\\uAC00-\\uD7AF\\u0900-\\u109F]/.test()\n * in Firefox, Chrome and Node.\n */\nfunction supportedCodepoint(codepoint) {\n    for (var i = 0; i < allBlocks.length; i += 2) {\n        if (codepoint >= allBlocks[i] && codepoint <= allBlocks[i + 1]) {\n            return true;\n        }\n    }\n    return false;\n}\n// CONCATENATED MODULE: ./src/svgGeometry.js\n\n/**\n * This file provides support to domTree.js\n * It's a storehouse of path geometry for SVG images.\n */\n\n// In all paths below, the viewBox-to-em scale is 1000:1.\n\nvar hLinePad = 80; // padding above a sqrt viniculum.\n\nvar svgGeometry_path = {\n    // sqrtMain path geometry is from glyph U221A in the font KaTeX Main\n    // All surds have 80 units padding above the viniculumn.\n    sqrtMain: \"M95,\" + (622 + hLinePad) + \"c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,\\n-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,\\n-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,\\n35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,\\n-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467\\ns-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422\\ns-65,47,-65,47z M834 \" + hLinePad + \"H400000v40H845z\",\n\n    // size1 is from glyph U221A in the font KaTeX_Size1-Regular\n    sqrtSize1: \"M263,\" + (601 + hLinePad) + \"c0.7,0,18,39.7,52,119c34,79.3,68.167,\\n158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067\\nc4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,\\n175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71\\nc-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,\\n-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26\\ns76,-59,76,-59s76,-60,76,-60z M1001 \" + hLinePad + \"H40000v40H1012z\",\n\n    // size2 is from glyph U221A in the font KaTeX_Size2-Regular\n    // The 80 units padding is most obvious here. Note start node at M1001 80.\n    sqrtSize2: \"M1001,\" + hLinePad + \"H400000v40H1013.1s-83.4,268,-264.1,840c-180.7,\\n572,-277,876.3,-289,913c-4.7,4.7,-12.7,7,-24,7s-12,0,-12,0c-1.3,-3.3,-3.7,-11.7,\\n-7,-25c-35.3,-125.3,-106.7,-373.3,-214,-744c-10,12,-21,25,-33,39s-32,39,-32,39\\nc-6,-5.3,-15,-14,-27,-26s25,-30,25,-30c26.7,-32.7,52,-63,76,-91s52,-60,52,-60\\ns208,722,208,722c56,-175.3,126.3,-397.3,211,-666c84.7,-268.7,153.8,-488.2,207.5,\\n-658.5c53.7,-170.3,84.5,-266.8,92.5,-289.5c4,-6.7,10,-10,18,-10z\\nM1001 \" + hLinePad + \"H400000v40H1013z\",\n\n    // size3 is from glyph U221A in the font KaTeX_Size3-Regular\n    sqrtSize3: \"M424,\" + (2398 + hLinePad) + \"c-1.3,-0.7,-38.5,-172,-111.5,-514c-73,\\n-342,-109.8,-513.3,-110.5,-514c0,-2,-10.7,14.3,-32,49c-4.7,7.3,-9.8,15.7,-15.5,\\n25c-5.7,9.3,-9.8,16,-12.5,20s-5,7,-5,7c-4,-3.3,-8.3,-7.7,-13,-13s-13,-13,-13,\\n-13s76,-122,76,-122s77,-121,77,-121s209,968,209,968c0,-2,84.7,-361.7,254,-1079\\nc169.3,-717.3,254.7,-1077.7,256,-1081c4,-6.7,10,-10,18,-10H400000v40H1014.6\\ns-87.3,378.7,-272.6,1166c-185.3,787.3,-279.3,1182.3,-282,1185c-2,6,-10,9,-24,9\\nc-8,0,-12,-0.7,-12,-2z M1001 \" + hLinePad + \"H400000v40H1014z\",\n\n    // size4 is from glyph U221A in the font KaTeX_Size4-Regular\n    sqrtSize4: \"M473,\" + (2713 + hLinePad) + \"c339.3,-1799.3,509.3,-2700,510,-2702\\nc3.3,-7.3,9.3,-11,18,-11H400000v40H1017.7s-90.5,478,-276.2,1466c-185.7,988,\\n-279.5,1483,-281.5,1485c-2,6,-10,9,-24,9c-8,0,-12,-0.7,-12,-2c0,-1.3,-5.3,-32,\\n-16,-92c-50.7,-293.3,-119.7,-693.3,-207,-1200c0,-1.3,-5.3,8.7,-16,30c-10.7,\\n21.3,-21.3,42.7,-32,64s-16,33,-16,33s-26,-26,-26,-26s76,-153,76,-153s77,-151,\\n77,-151c0.7,0.7,35.7,202,105,604c67.3,400.7,102,602.7,104,606z\\nM1001 \" + hLinePad + \"H400000v40H1017z\",\n\n    // The doubleleftarrow geometry is from glyph U+21D0 in the font KaTeX Main\n    doubleleftarrow: \"M262 157\\nl10-10c34-36 62.7-77 86-123 3.3-8 5-13.3 5-16 0-5.3-6.7-8-20-8-7.3\\n 0-12.2.5-14.5 1.5-2.3 1-4.8 4.5-7.5 10.5-49.3 97.3-121.7 169.3-217 216-28\\n 14-57.3 25-88 33-6.7 2-11 3.8-13 5.5-2 1.7-3 4.2-3 7.5s1 5.8 3 7.5\\nc2 1.7 6.3 3.5 13 5.5 68 17.3 128.2 47.8 180.5 91.5 52.3 43.7 93.8 96.2 124.5\\n 157.5 9.3 8 15.3 12.3 18 13h6c12-.7 18-4 18-10 0-2-1.7-7-5-15-23.3-46-52-87\\n-86-123l-10-10h399738v-40H218c328 0 0 0 0 0l-10-8c-26.7-20-65.7-43-117-69 2.7\\n-2 6-3.7 10-5 36.7-16 72.3-37.3 107-64l10-8h399782v-40z\\nm8 0v40h399730v-40zm0 194v40h399730v-40z\",\n\n    // doublerightarrow is from glyph U+21D2 in font KaTeX Main\n    doublerightarrow: \"M399738 392l\\n-10 10c-34 36-62.7 77-86 123-3.3 8-5 13.3-5 16 0 5.3 6.7 8 20 8 7.3 0 12.2-.5\\n 14.5-1.5 2.3-1 4.8-4.5 7.5-10.5 49.3-97.3 121.7-169.3 217-216 28-14 57.3-25 88\\n-33 6.7-2 11-3.8 13-5.5 2-1.7 3-4.2 3-7.5s-1-5.8-3-7.5c-2-1.7-6.3-3.5-13-5.5-68\\n-17.3-128.2-47.8-180.5-91.5-52.3-43.7-93.8-96.2-124.5-157.5-9.3-8-15.3-12.3-18\\n-13h-6c-12 .7-18 4-18 10 0 2 1.7 7 5 15 23.3 46 52 87 86 123l10 10H0v40h399782\\nc-328 0 0 0 0 0l10 8c26.7 20 65.7 43 117 69-2.7 2-6 3.7-10 5-36.7 16-72.3 37.3\\n-107 64l-10 8H0v40zM0 157v40h399730v-40zm0 194v40h399730v-40z\",\n\n    // leftarrow is from glyph U+2190 in font KaTeX Main\n    leftarrow: \"M400000 241H110l3-3c68.7-52.7 113.7-120\\n 135-202 4-14.7 6-23 6-25 0-7.3-7-11-21-11-8 0-13.2.8-15.5 2.5-2.3 1.7-4.2 5.8\\n-5.5 12.5-1.3 4.7-2.7 10.3-4 17-12 48.7-34.8 92-68.5 130S65.3 228.3 18 247\\nc-10 4-16 7.7-18 11 0 8.7 6 14.3 18 17 47.3 18.7 87.8 47 121.5 85S196 441.3 208\\n 490c.7 2 1.3 5 2 9s1.2 6.7 1.5 8c.3 1.3 1 3.3 2 6s2.2 4.5 3.5 5.5c1.3 1 3.3\\n 1.8 6 2.5s6 1 10 1c14 0 21-3.7 21-11 0-2-2-10.3-6-25-20-79.3-65-146.7-135-202\\n l-3-3h399890zM100 241v40h399900v-40z\",\n\n    // overbrace is from glyphs U+23A9/23A8/23A7 in font KaTeX_Size4-Regular\n    leftbrace: \"M6 548l-6-6v-35l6-11c56-104 135.3-181.3 238-232 57.3-28.7 117\\n-45 179-50h399577v120H403c-43.3 7-81 15-113 26-100.7 33-179.7 91-237 174-2.7\\n 5-6 9-10 13-.7 1-7.3 1-20 1H6z\",\n\n    leftbraceunder: \"M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13\\n 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688\\n 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7\\n-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z\",\n\n    // overgroup is from the MnSymbol package (public domain)\n    leftgroup: \"M400000 80\\nH435C64 80 168.3 229.4 21 260c-5.9 1.2-18 0-18 0-2 0-3-1-3-3v-38C76 61 257 0\\n 435 0h399565z\",\n\n    leftgroupunder: \"M400000 262\\nH435C64 262 168.3 112.6 21 82c-5.9-1.2-18 0-18 0-2 0-3 1-3 3v38c76 158 257 219\\n 435 219h399565z\",\n\n    // Harpoons are from glyph U+21BD in font KaTeX Main\n    leftharpoon: \"M0 267c.7 5.3 3 10 7 14h399993v-40H93c3.3\\n-3.3 10.2-9.5 20.5-18.5s17.8-15.8 22.5-20.5c50.7-52 88-110.3 112-175 4-11.3 5\\n-18.3 3-21-1.3-4-7.3-6-18-6-8 0-13 .7-15 2s-4.7 6.7-8 16c-42 98.7-107.3 174.7\\n-196 228-6.7 4.7-10.7 8-12 10-1.3 2-2 5.7-2 11zm100-26v40h399900v-40z\",\n\n    leftharpoonplus: \"M0 267c.7 5.3 3 10 7 14h399993v-40H93c3.3-3.3 10.2-9.5\\n 20.5-18.5s17.8-15.8 22.5-20.5c50.7-52 88-110.3 112-175 4-11.3 5-18.3 3-21-1.3\\n-4-7.3-6-18-6-8 0-13 .7-15 2s-4.7 6.7-8 16c-42 98.7-107.3 174.7-196 228-6.7 4.7\\n-10.7 8-12 10-1.3 2-2 5.7-2 11zm100-26v40h399900v-40zM0 435v40h400000v-40z\\nm0 0v40h400000v-40z\",\n\n    leftharpoondown: \"M7 241c-4 4-6.333 8.667-7 14 0 5.333.667 9 2 11s5.333\\n 5.333 12 10c90.667 54 156 130 196 228 3.333 10.667 6.333 16.333 9 17 2 .667 5\\n 1 9 1h5c10.667 0 16.667-2 18-6 2-2.667 1-9.667-3-21-32-87.333-82.667-157.667\\n-152-211l-3-3h399907v-40zM93 281 H400000 v-40L7 241z\",\n\n    leftharpoondownplus: \"M7 435c-4 4-6.3 8.7-7 14 0 5.3.7 9 2 11s5.3 5.3 12\\n 10c90.7 54 156 130 196 228 3.3 10.7 6.3 16.3 9 17 2 .7 5 1 9 1h5c10.7 0 16.7\\n-2 18-6 2-2.7 1-9.7-3-21-32-87.3-82.7-157.7-152-211l-3-3h399907v-40H7zm93 0\\nv40h399900v-40zM0 241v40h399900v-40zm0 0v40h399900v-40z\",\n\n    // hook is from glyph U+21A9 in font KaTeX Main\n    lefthook: \"M400000 281 H103s-33-11.2-61-33.5S0 197.3 0 164s14.2-61.2 42.5\\n-83.5C70.8 58.2 104 47 142 47 c16.7 0 25 6.7 25 20 0 12-8.7 18.7-26 20-40 3.3\\n-68.7 15.7-86 37-10 12-15 25.3-15 40 0 22.7 9.8 40.7 29.5 54 19.7 13.3 43.5 21\\n 71.5 23h399859zM103 281v-40h399897v40z\",\n\n    leftlinesegment: \"M40 281 V428 H0 V94 H40 V241 H400000 v40z\\nM40 281 V428 H0 V94 H40 V241 H400000 v40z\",\n\n    leftmapsto: \"M40 281 V448H0V74H40V241H400000v40z\\nM40 281 V448H0V74H40V241H400000v40z\",\n\n    // tofrom is from glyph U+21C4 in font KaTeX AMS Regular\n    leftToFrom: \"M0 147h400000v40H0zm0 214c68 40 115.7 95.7 143 167h22c15.3 0 23\\n-.3 23-1 0-1.3-5.3-13.7-16-37-18-35.3-41.3-69-70-101l-7-8h399905v-40H95l7-8\\nc28.7-32 52-65.7 70-101 10.7-23.3 16-35.7 16-37 0-.7-7.7-1-23-1h-22C115.7 265.3\\n 68 321 0 361zm0-174v-40h399900v40zm100 154v40h399900v-40z\",\n\n    longequal: \"M0 50 h400000 v40H0z m0 194h40000v40H0z\\nM0 50 h400000 v40H0z m0 194h40000v40H0z\",\n\n    midbrace: \"M200428 334\\nc-100.7-8.3-195.3-44-280-108-55.3-42-101.7-93-139-153l-9-14c-2.7 4-5.7 8.7-9 14\\n-53.3 86.7-123.7 153-211 199-66.7 36-137.3 56.3-212 62H0V214h199568c178.3-11.7\\n 311.7-78.3 403-201 6-8 9.7-12 11-12 .7-.7 6.7-1 18-1s17.3.3 18 1c1.3 0 5 4 11\\n 12 44.7 59.3 101.3 106.3 170 141s145.3 54.3 229 60h199572v120z\",\n\n    midbraceunder: \"M199572 214\\nc100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14\\n 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3\\n 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0\\n-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z\",\n\n    oiintSize1: \"M512.6 71.6c272.6 0 320.3 106.8 320.3 178.2 0 70.8-47.7 177.6\\n-320.3 177.6S193.1 320.6 193.1 249.8c0-71.4 46.9-178.2 319.5-178.2z\\nm368.1 178.2c0-86.4-60.9-215.4-368.1-215.4-306.4 0-367.3 129-367.3 215.4 0 85.8\\n60.9 214.8 367.3 214.8 307.2 0 368.1-129 368.1-214.8z\",\n\n    oiintSize2: \"M757.8 100.1c384.7 0 451.1 137.6 451.1 230 0 91.3-66.4 228.8\\n-451.1 228.8-386.3 0-452.7-137.5-452.7-228.8 0-92.4 66.4-230 452.7-230z\\nm502.4 230c0-111.2-82.4-277.2-502.4-277.2s-504 166-504 277.2\\nc0 110 84 276 504 276s502.4-166 502.4-276z\",\n\n    oiiintSize1: \"M681.4 71.6c408.9 0 480.5 106.8 480.5 178.2 0 70.8-71.6 177.6\\n-480.5 177.6S202.1 320.6 202.1 249.8c0-71.4 70.5-178.2 479.3-178.2z\\nm525.8 178.2c0-86.4-86.8-215.4-525.7-215.4-437.9 0-524.7 129-524.7 215.4 0\\n85.8 86.8 214.8 524.7 214.8 438.9 0 525.7-129 525.7-214.8z\",\n\n    oiiintSize2: \"M1021.2 53c603.6 0 707.8 165.8 707.8 277.2 0 110-104.2 275.8\\n-707.8 275.8-606 0-710.2-165.8-710.2-275.8C311 218.8 415.2 53 1021.2 53z\\nm770.4 277.1c0-131.2-126.4-327.6-770.5-327.6S248.4 198.9 248.4 330.1\\nc0 130 128.8 326.4 772.7 326.4s770.5-196.4 770.5-326.4z\",\n\n    rightarrow: \"M0 241v40h399891c-47.3 35.3-84 78-110 128\\n-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20\\n 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7\\n 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85\\n-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5\\n-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67\\n 151.7 139 205zm0 0v40h399900v-40z\",\n\n    rightbrace: \"M400000 542l\\n-6 6h-17c-12.7 0-19.3-.3-20-1-4-4-7.3-8.3-10-13-35.3-51.3-80.8-93.8-136.5-127.5\\ns-117.2-55.8-184.5-66.5c-.7 0-2-.3-4-1-18.7-2.7-76-4.3-172-5H0V214h399571l6 1\\nc124.7 8 235 61.7 331 161 31.3 33.3 59.7 72.7 85 118l7 13v35z\",\n\n    rightbraceunder: \"M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3\\n 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237\\n-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z\",\n\n    rightgroup: \"M0 80h399565c371 0 266.7 149.4 414 180 5.9 1.2 18 0 18 0 2 0\\n 3-1 3-3v-38c-76-158-257-219-435-219H0z\",\n\n    rightgroupunder: \"M0 262h399565c371 0 266.7-149.4 414-180 5.9-1.2 18 0 18\\n 0 2 0 3 1 3 3v38c-76 158-257 219-435 219H0z\",\n\n    rightharpoon: \"M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3\\n-3.7-15.3-11-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2\\n-10.7 0-16.7 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58\\n 69.2 92 94.5zm0 0v40h399900v-40z\",\n\n    rightharpoonplus: \"M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3-3.7-15.3-11\\n-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2-10.7 0-16.7\\n 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58 69.2 92 94.5z\\nm0 0v40h399900v-40z m100 194v40h399900v-40zm0 0v40h399900v-40z\",\n\n    rightharpoondown: \"M399747 511c0 7.3 6.7 11 20 11 8 0 13-.8 15-2.5s4.7-6.8\\n 8-15.5c40-94 99.3-166.3 178-217 13.3-8 20.3-12.3 21-13 5.3-3.3 8.5-5.8 9.5\\n-7.5 1-1.7 1.5-5.2 1.5-10.5s-2.3-10.3-7-15H0v40h399908c-34 25.3-64.7 57-92 95\\n-27.3 38-48.7 77.7-64 119-3.3 8.7-5 14-5 16zM0 241v40h399900v-40z\",\n\n    rightharpoondownplus: \"M399747 705c0 7.3 6.7 11 20 11 8 0 13-.8\\n 15-2.5s4.7-6.8 8-15.5c40-94 99.3-166.3 178-217 13.3-8 20.3-12.3 21-13 5.3-3.3\\n 8.5-5.8 9.5-7.5 1-1.7 1.5-5.2 1.5-10.5s-2.3-10.3-7-15H0v40h399908c-34 25.3\\n-64.7 57-92 95-27.3 38-48.7 77.7-64 119-3.3 8.7-5 14-5 16zM0 435v40h399900v-40z\\nm0-194v40h400000v-40zm0 0v40h400000v-40z\",\n\n    righthook: \"M399859 241c-764 0 0 0 0 0 40-3.3 68.7-15.7 86-37 10-12 15-25.3\\n 15-40 0-22.7-9.8-40.7-29.5-54-19.7-13.3-43.5-21-71.5-23-17.3-1.3-26-8-26-20 0\\n-13.3 8.7-20 26-20 38 0 71 11.2 99 33.5 0 0 7 5.6 21 16.7 14 11.2 21 33.5 21\\n 66.8s-14 61.2-42 83.5c-28 22.3-61 33.5-99 33.5L0 241z M0 281v-40h399859v40z\",\n\n    rightlinesegment: \"M399960 241 V94 h40 V428 h-40 V281 H0 v-40z\\nM399960 241 V94 h40 V428 h-40 V281 H0 v-40z\",\n\n    rightToFrom: \"M400000 167c-70.7-42-118-97.7-142-167h-23c-15.3 0-23 .3-23\\n 1 0 1.3 5.3 13.7 16 37 18 35.3 41.3 69 70 101l7 8H0v40h399905l-7 8c-28.7 32\\n-52 65.7-70 101-10.7 23.3-16 35.7-16 37 0 .7 7.7 1 23 1h23c24-69.3 71.3-125 142\\n-167z M100 147v40h399900v-40zM0 341v40h399900v-40z\",\n\n    // twoheadleftarrow is from glyph U+219E in font KaTeX AMS Regular\n    twoheadleftarrow: \"M0 167c68 40\\n 115.7 95.7 143 167h22c15.3 0 23-.3 23-1 0-1.3-5.3-13.7-16-37-18-35.3-41.3-69\\n-70-101l-7-8h125l9 7c50.7 39.3 85 86 103 140h46c0-4.7-6.3-18.7-19-42-18-35.3\\n-40-67.3-66-96l-9-9h399716v-40H284l9-9c26-28.7 48-60.7 66-96 12.7-23.333 19\\n-37.333 19-42h-46c-18 54-52.3 100.7-103 140l-9 7H95l7-8c28.7-32 52-65.7 70-101\\n 10.7-23.333 16-35.7 16-37 0-.7-7.7-1-23-1h-22C115.7 71.3 68 127 0 167z\",\n\n    twoheadrightarrow: \"M400000 167\\nc-68-40-115.7-95.7-143-167h-22c-15.3 0-23 .3-23 1 0 1.3 5.3 13.7 16 37 18 35.3\\n 41.3 69 70 101l7 8h-125l-9-7c-50.7-39.3-85-86-103-140h-46c0 4.7 6.3 18.7 19 42\\n 18 35.3 40 67.3 66 96l9 9H0v40h399716l-9 9c-26 28.7-48 60.7-66 96-12.7 23.333\\n-19 37.333-19 42h46c18-54 52.3-100.7 103-140l9-7h125l-7 8c-28.7 32-52 65.7-70\\n 101-10.7 23.333-16 35.7-16 37 0 .7 7.7 1 23 1h22c27.3-71.3 75-127 143-167z\",\n\n    // tilde1 is a modified version of a glyph from the MnSymbol package\n    tilde1: \"M200 55.538c-77 0-168 73.953-177 73.953-3 0-7\\n-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0\\n 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0\\n 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128\\n-68.267.847-113-73.952-191-73.952z\",\n\n    // ditto tilde2, tilde3, & tilde4\n    tilde2: \"M344 55.266c-142 0-300.638 81.316-311.5 86.418\\n-8.01 3.762-22.5 10.91-23.5 5.562L1 120c-1-2-1-3-1-4 0-5 3-9 8-10l18.4-9C160.9\\n 31.9 283 0 358 0c148 0 188 122 331 122s314-97 326-97c4 0 8 2 10 7l7 21.114\\nc1 2.14 1 3.21 1 4.28 0 5.347-3 9.626-7 10.696l-22.3 12.622C852.6 158.372 751\\n 181.476 676 181.476c-149 0-189-126.21-332-126.21z\",\n\n    tilde3: \"M786 59C457 59 32 175.242 13 175.242c-6 0-10-3.457\\n-11-10.37L.15 138c-1-7 3-12 10-13l19.2-6.4C378.4 40.7 634.3 0 804.3 0c337 0\\n 411.8 157 746.8 157 328 0 754-112 773-112 5 0 10 3 11 9l1 14.075c1 8.066-.697\\n 16.595-6.697 17.492l-21.052 7.31c-367.9 98.146-609.15 122.696-778.15 122.696\\n -338 0-409-156.573-744-156.573z\",\n\n    tilde4: \"M786 58C457 58 32 177.487 13 177.487c-6 0-10-3.345\\n-11-10.035L.15 143c-1-7 3-12 10-13l22-6.7C381.2 35 637.15 0 807.15 0c337 0 409\\n 177 744 177 328 0 754-127 773-127 5 0 10 3 11 9l1 14.794c1 7.805-3 13.38-9\\n 14.495l-20.7 5.574c-366.85 99.79-607.3 139.372-776.3 139.372-338 0-409\\n -175.236-744-175.236z\",\n\n    // vec is from glyph U+20D7 in font KaTeX Main\n    vec: \"M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\\nc-16-25.333-24-45-24-59z\",\n\n    // widehat1 is a modified version of a glyph from the MnSymbol package\n    widehat1: \"M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22\\nc-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z\",\n\n    // ditto widehat2, widehat3, & widehat4\n    widehat2: \"M1181 0h2l1171 176c6 0 10 5 10 11l-2 23c-1 6-5 10\\n-11 10h-1L1182 67 15 220h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z\",\n\n    widehat3: \"M1181 0h2l1171 236c6 0 10 5 10 11l-2 23c-1 6-5 10\\n-11 10h-1L1182 67 15 280h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z\",\n\n    widehat4: \"M1181 0h2l1171 296c6 0 10 5 10 11l-2 23c-1 6-5 10\\n-11 10h-1L1182 67 15 340h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z\",\n\n    // widecheck paths are all inverted versions of widehat\n    widecheck1: \"M529,159h5l519,-115c5,-1,9,-5,9,-10c0,-1,-1,-2,-1,-3l-4,-22c-1,\\n-5,-5,-9,-11,-9h-2l-512,92l-513,-92h-2c-5,0,-9,4,-11,9l-5,22c-1,6,2,12,8,13z\",\n\n    widecheck2: \"M1181,220h2l1171,-176c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,\\n-11,-10h-1l-1168,153l-1167,-153h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z\",\n\n    widecheck3: \"M1181,280h2l1171,-236c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,\\n-11,-10h-1l-1168,213l-1167,-213h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z\",\n\n    widecheck4: \"M1181,340h2l1171,-296c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,\\n-11,-10h-1l-1168,273l-1167,-273h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z\",\n\n    // The next ten paths support reaction arrows from the mhchem package.\n\n    // Arrows for \\ce{<-->} are offset from xAxis by 0.22ex, per mhchem in LaTeX\n    // baraboveleftarrow is mostly from from glyph U+2190 in font KaTeX Main\n    baraboveleftarrow: \"M400000 620h-399890l3 -3c68.7 -52.7 113.7 -120 135 -202\\nc4 -14.7 6 -23 6 -25c0 -7.3 -7 -11 -21 -11c-8 0 -13.2 0.8 -15.5 2.5\\nc-2.3 1.7 -4.2 5.8 -5.5 12.5c-1.3 4.7 -2.7 10.3 -4 17c-12 48.7 -34.8 92 -68.5 130\\ns-74.2 66.3 -121.5 85c-10 4 -16 7.7 -18 11c0 8.7 6 14.3 18 17c47.3 18.7 87.8 47\\n121.5 85s56.5 81.3 68.5 130c0.7 2 1.3 5 2 9s1.2 6.7 1.5 8c0.3 1.3 1 3.3 2 6\\ns2.2 4.5 3.5 5.5c1.3 1 3.3 1.8 6 2.5s6 1 10 1c14 0 21 -3.7 21 -11\\nc0 -2 -2 -10.3 -6 -25c-20 -79.3 -65 -146.7 -135 -202l-3 -3h399890z\\nM100 241v40h399900v-40z M0 241v40h399900v-40zM0 241v40h399900v-40z\",\n\n    // rightarrowabovebar is mostly from glyph U+2192, KaTeX Main\n    rightarrowabovebar: \"M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32\\n-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0\\n13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39\\n-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5\\n-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5\\n-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67\\n151.7 139 205zm96 379h399894v40H0zm0 0h399904v40H0z\",\n\n    // The short left harpoon has 0.5em (i.e. 500 units) kern on the left end.\n    // Ref from mhchem.sty: \\rlap{\\raisebox{-.22ex}{$\\kern0.5em\n    baraboveshortleftharpoon: \"M507,435c-4,4,-6.3,8.7,-7,14c0,5.3,0.7,9,2,11\\nc1.3,2,5.3,5.3,12,10c90.7,54,156,130,196,228c3.3,10.7,6.3,16.3,9,17\\nc2,0.7,5,1,9,1c0,0,5,0,5,0c10.7,0,16.7,-2,18,-6c2,-2.7,1,-9.7,-3,-21\\nc-32,-87.3,-82.7,-157.7,-152,-211c0,0,-3,-3,-3,-3l399351,0l0,-40\\nc-398570,0,-399437,0,-399437,0z M593 435 v40 H399500 v-40z\\nM0 281 v-40 H399908 v40z M0 281 v-40 H399908 v40z\",\n\n    rightharpoonaboveshortbar: \"M0,241 l0,40c399126,0,399993,0,399993,0\\nc4.7,-4.7,7,-9.3,7,-14c0,-9.3,-3.7,-15.3,-11,-18c-92.7,-56.7,-159,-133.7,-199,\\n-231c-3.3,-9.3,-6,-14.7,-8,-16c-2,-1.3,-7,-2,-15,-2c-10.7,0,-16.7,2,-18,6\\nc-2,2.7,-1,9.7,3,21c15.3,42,36.7,81.8,64,119.5c27.3,37.7,58,69.2,92,94.5z\\nM0 241 v40 H399908 v-40z M0 475 v-40 H399500 v40z M0 475 v-40 H399500 v40z\",\n\n    shortbaraboveleftharpoon: \"M7,435c-4,4,-6.3,8.7,-7,14c0,5.3,0.7,9,2,11\\nc1.3,2,5.3,5.3,12,10c90.7,54,156,130,196,228c3.3,10.7,6.3,16.3,9,17c2,0.7,5,1,9,\\n1c0,0,5,0,5,0c10.7,0,16.7,-2,18,-6c2,-2.7,1,-9.7,-3,-21c-32,-87.3,-82.7,-157.7,\\n-152,-211c0,0,-3,-3,-3,-3l399907,0l0,-40c-399126,0,-399993,0,-399993,0z\\nM93 435 v40 H400000 v-40z M500 241 v40 H400000 v-40z M500 241 v40 H400000 v-40z\",\n\n    shortrightharpoonabovebar: \"M53,241l0,40c398570,0,399437,0,399437,0\\nc4.7,-4.7,7,-9.3,7,-14c0,-9.3,-3.7,-15.3,-11,-18c-92.7,-56.7,-159,-133.7,-199,\\n-231c-3.3,-9.3,-6,-14.7,-8,-16c-2,-1.3,-7,-2,-15,-2c-10.7,0,-16.7,2,-18,6\\nc-2,2.7,-1,9.7,3,21c15.3,42,36.7,81.8,64,119.5c27.3,37.7,58,69.2,92,94.5z\\nM500 241 v40 H399408 v-40z M500 435 v40 H400000 v-40z\"\n};\n\n/* harmony default export */ var svgGeometry = ({ path: svgGeometry_path });\n// CONCATENATED MODULE: ./src/tree.js\n\n\n\n// To ensure that all nodes have compatible signatures for these methods.\n\n\n/**\n * This node represents a document fragment, which contains elements, but when\n * placed into the DOM doesn't have any representation itself. It only contains\n * children and doesn't have any DOM node properties.\n */\nvar tree_DocumentFragment = function () {\n    // Never used; needed for satisfying interface.\n\n    function DocumentFragment(children) {\n        classCallCheck_default()(this, DocumentFragment);\n\n        this.children = children;\n        this.classes = [];\n        this.height = 0;\n        this.depth = 0;\n        this.maxFontSize = 0;\n        this.style = {};\n    }\n    // HtmlDomNode\n\n\n    DocumentFragment.prototype.hasClass = function hasClass(className) {\n        return utils.contains(this.classes, className);\n    };\n\n    DocumentFragment.prototype.tryCombine = function tryCombine(sibling) {\n        return false;\n    };\n\n    /** Convert the fragment into a node. */\n\n\n    DocumentFragment.prototype.toNode = function toNode() {\n        var frag = document.createDocumentFragment();\n\n        for (var i = 0; i < this.children.length; i++) {\n            frag.appendChild(this.children[i].toNode());\n        }\n\n        return frag;\n    };\n\n    /** Convert the fragment into HTML markup. */\n\n\n    DocumentFragment.prototype.toMarkup = function toMarkup() {\n        var markup = \"\";\n\n        // Simply concatenate the markup for the children together.\n        for (var i = 0; i < this.children.length; i++) {\n            markup += this.children[i].toMarkup();\n        }\n\n        return markup;\n    };\n\n    /**\n     * Converts the math node into a string, similar to innerText. Applies to\n     * MathDomNode's only.\n     */\n\n\n    DocumentFragment.prototype.toText = function toText() {\n        // To avoid this, we would subclass documentFragment separately for\n        // MathML, but polyfills for subclassing is expensive per PR 1469.\n        // $FlowFixMe: Only works for ChildType = MathDomNode.\n        var toText = function toText(child) {\n            return child.toText();\n        };\n        return this.children.map(toText).join(\"\");\n    };\n\n    return DocumentFragment;\n}();\n// CONCATENATED MODULE: ./src/domTree.js\n\n\n/**\n * These objects store the data about the DOM nodes we create, as well as some\n * extra data. They can then be transformed into real DOM nodes with the\n * `toNode` function or HTML markup using `toMarkup`. They are useful for both\n * storing extra properties on the nodes, as well as providing a way to easily\n * work with the DOM.\n *\n * Similar functions for working with MathML nodes exist in mathMLTree.js.\n *\n * TODO: refactor `span` and `anchor` into common superclass when\n * target environments support class inheritance\n */\n\n\n\n\n\n\n/**\n * Create an HTML className based on a list of classes. In addition to joining\n * with spaces, we also remove empty classes.\n */\nvar createClass = function createClass(classes) {\n    return classes.filter(function (cls) {\n        return cls;\n    }).join(\" \");\n};\n\nvar initNode = function initNode(classes, options, style) {\n    this.classes = classes || [];\n    this.attributes = {};\n    this.height = 0;\n    this.depth = 0;\n    this.maxFontSize = 0;\n    this.style = style || {};\n    if (options) {\n        if (options.style.isTight()) {\n            this.classes.push(\"mtight\");\n        }\n        var color = options.getColor();\n        if (color) {\n            this.style.color = color;\n        }\n    }\n};\n\n/**\n * Convert into an HTML node\n */\nvar _toNode = function _toNode(tagName) {\n    var node = document.createElement(tagName);\n\n    // Apply the class\n    node.className = createClass(this.classes);\n\n    // Apply inline styles\n    for (var _style in this.style) {\n        if (this.style.hasOwnProperty(_style)) {\n            // $FlowFixMe Flow doesn't seem to understand span.style's type.\n            node.style[_style] = this.style[_style];\n        }\n    }\n\n    // Apply attributes\n    for (var attr in this.attributes) {\n        if (this.attributes.hasOwnProperty(attr)) {\n            node.setAttribute(attr, this.attributes[attr]);\n        }\n    }\n\n    // Append the children, also as HTML nodes\n    for (var i = 0; i < this.children.length; i++) {\n        node.appendChild(this.children[i].toNode());\n    }\n\n    return node;\n};\n\n/**\n * Convert into an HTML markup string\n */\nvar domTree_toMarkup = function _toMarkup(tagName) {\n    var markup = \"<\" + tagName;\n\n    // Add the class\n    if (this.classes.length) {\n        markup += \" class=\\\"\" + utils.escape(createClass(this.classes)) + \"\\\"\";\n    }\n\n    var styles = \"\";\n\n    // Add the styles, after hyphenation\n    for (var _style2 in this.style) {\n        if (this.style.hasOwnProperty(_style2)) {\n            styles += utils.hyphenate(_style2) + \":\" + this.style[_style2] + \";\";\n        }\n    }\n\n    if (styles) {\n        markup += \" style=\\\"\" + utils.escape(styles) + \"\\\"\";\n    }\n\n    // Add the attributes\n    for (var attr in this.attributes) {\n        if (this.attributes.hasOwnProperty(attr)) {\n            markup += \" \" + attr + \"=\\\"\" + utils.escape(this.attributes[attr]) + \"\\\"\";\n        }\n    }\n\n    markup += \">\";\n\n    // Add the markup of the children, also as markup\n    for (var i = 0; i < this.children.length; i++) {\n        markup += this.children[i].toMarkup();\n    }\n\n    markup += \"</\" + tagName + \">\";\n\n    return markup;\n};\n\n// Span wrapping other DOM nodes.\n\n// Span wrapping an SVG node.\n\n\n/**\n * This node represents a span node, with a className, a list of children, and\n * an inline style. It also contains information about its height, depth, and\n * maxFontSize.\n *\n * Represents two types with different uses: SvgSpan to wrap an SVG and DomSpan\n * otherwise. This typesafety is important when HTML builders access a span's\n * children.\n */\nvar domTree_Span = function () {\n    function Span(classes, children, options, style) {\n        classCallCheck_default()(this, Span);\n\n        initNode.call(this, classes, options, style);\n        this.children = children || [];\n    }\n\n    /**\n     * Sets an arbitrary attribute on the span. Warning: use this wisely. Not\n     * all browsers support attributes the same, and having too many custom\n     * attributes is probably bad.\n     */\n\n\n    Span.prototype.setAttribute = function setAttribute(attribute, value) {\n        this.attributes[attribute] = value;\n    };\n\n    Span.prototype.hasClass = function hasClass(className) {\n        return utils.contains(this.classes, className);\n    };\n\n    /**\n     * Try to combine with given sibling.  Returns true if the sibling has\n     * been successfully merged into this node, and false otherwise.\n     * Default behavior fails (returns false).\n     */\n\n\n    Span.prototype.tryCombine = function tryCombine(sibling) {\n        return false;\n    };\n\n    Span.prototype.toNode = function toNode() {\n        return _toNode.call(this, \"span\");\n    };\n\n    Span.prototype.toMarkup = function toMarkup() {\n        return domTree_toMarkup.call(this, \"span\");\n    };\n\n    return Span;\n}();\n\n/**\n * This node represents an anchor (<a>) element with a hyperlink.  See `span`\n * for further details.\n */\nvar domTree_Anchor = function () {\n    function Anchor(href, classes, children, options) {\n        classCallCheck_default()(this, Anchor);\n\n        initNode.call(this, classes, options);\n        this.children = children || [];\n        this.setAttribute('href', href);\n    }\n\n    Anchor.prototype.setAttribute = function setAttribute(attribute, value) {\n        this.attributes[attribute] = value;\n    };\n\n    Anchor.prototype.hasClass = function hasClass(className) {\n        return utils.contains(this.classes, className);\n    };\n\n    Anchor.prototype.tryCombine = function tryCombine(sibling) {\n        return false;\n    };\n\n    Anchor.prototype.toNode = function toNode() {\n        return _toNode.call(this, \"a\");\n    };\n\n    Anchor.prototype.toMarkup = function toMarkup() {\n        return domTree_toMarkup.call(this, \"a\");\n    };\n\n    return Anchor;\n}();\n\nvar iCombinations = {\n    'î': \"\\u0131\\u0302\",\n    'ï': \"\\u0131\\u0308\",\n    'í': \"\\u0131\\u0301\",\n    // 'ī': '\\u0131\\u0304', // enable when we add Extended Latin\n    'ì': \"\\u0131\\u0300\"\n};\n\n/**\n * A symbol node contains information about a single symbol. It either renders\n * to a single text node, or a span with a single text node in it, depending on\n * whether it has CSS classes, styles, or needs italic correction.\n */\nvar domTree_SymbolNode = function () {\n    function SymbolNode(text, height, depth, italic, skew, width, classes, style) {\n        classCallCheck_default()(this, SymbolNode);\n\n        this.text = text;\n        this.height = height || 0;\n        this.depth = depth || 0;\n        this.italic = italic || 0;\n        this.skew = skew || 0;\n        this.width = width || 0;\n        this.classes = classes || [];\n        this.style = style || {};\n        this.maxFontSize = 0;\n\n        // Mark text from non-Latin scripts with specific classes so that we\n        // can specify which fonts to use.  This allows us to render these\n        // characters with a serif font in situations where the browser would\n        // either default to a sans serif or render a placeholder character.\n        // We use CSS class names like cjk_fallback, hangul_fallback and\n        // brahmic_fallback. See ./unicodeScripts.js for the set of possible\n        // script names\n        var script = scriptFromCodepoint(this.text.charCodeAt(0));\n        if (script) {\n            this.classes.push(script + \"_fallback\");\n        }\n\n        if (/[îïíì]/.test(this.text)) {\n            // add ī when we add Extended Latin\n            this.text = iCombinations[this.text];\n        }\n    }\n\n    SymbolNode.prototype.hasClass = function hasClass(className) {\n        return utils.contains(this.classes, className);\n    };\n\n    SymbolNode.prototype.tryCombine = function tryCombine(sibling) {\n        if (!sibling || !(sibling instanceof SymbolNode) || this.italic > 0 || createClass(this.classes) !== createClass(sibling.classes) || this.skew !== sibling.skew || this.maxFontSize !== sibling.maxFontSize) {\n            return false;\n        }\n        for (var _style3 in this.style) {\n            if (this.style.hasOwnProperty(_style3) && this.style[_style3] !== sibling.style[_style3]) {\n                return false;\n            }\n        }\n        for (var _style4 in sibling.style) {\n            if (sibling.style.hasOwnProperty(_style4) && this.style[_style4] !== sibling.style[_style4]) {\n                return false;\n            }\n        }\n        this.text += sibling.text;\n        this.height = Math.max(this.height, sibling.height);\n        this.depth = Math.max(this.depth, sibling.depth);\n        this.italic = sibling.italic;\n        return true;\n    };\n\n    /**\n     * Creates a text node or span from a symbol node. Note that a span is only\n     * created if it is needed.\n     */\n\n\n    SymbolNode.prototype.toNode = function toNode() {\n        var node = document.createTextNode(this.text);\n        var span = null;\n\n        if (this.italic > 0) {\n            span = document.createElement(\"span\");\n            span.style.marginRight = this.italic + \"em\";\n        }\n\n        if (this.classes.length > 0) {\n            span = span || document.createElement(\"span\");\n            span.className = createClass(this.classes);\n        }\n\n        for (var _style5 in this.style) {\n            if (this.style.hasOwnProperty(_style5)) {\n                span = span || document.createElement(\"span\");\n                // $FlowFixMe Flow doesn't seem to understand span.style's type.\n                span.style[_style5] = this.style[_style5];\n            }\n        }\n\n        if (span) {\n            span.appendChild(node);\n            return span;\n        } else {\n            return node;\n        }\n    };\n\n    /**\n     * Creates markup for a symbol node.\n     */\n\n\n    SymbolNode.prototype.toMarkup = function toMarkup() {\n        // TODO(alpert): More duplication than I'd like from\n        // span.prototype.toMarkup and symbolNode.prototype.toNode...\n        var needsSpan = false;\n\n        var markup = \"<span\";\n\n        if (this.classes.length) {\n            needsSpan = true;\n            markup += \" class=\\\"\";\n            markup += utils.escape(createClass(this.classes));\n            markup += \"\\\"\";\n        }\n\n        var styles = \"\";\n\n        if (this.italic > 0) {\n            styles += \"margin-right:\" + this.italic + \"em;\";\n        }\n        for (var _style6 in this.style) {\n            if (this.style.hasOwnProperty(_style6)) {\n                styles += utils.hyphenate(_style6) + \":\" + this.style[_style6] + \";\";\n            }\n        }\n\n        if (styles) {\n            needsSpan = true;\n            markup += \" style=\\\"\" + utils.escape(styles) + \"\\\"\";\n        }\n\n        var escaped = utils.escape(this.text);\n        if (needsSpan) {\n            markup += \">\";\n            markup += escaped;\n            markup += \"</span>\";\n            return markup;\n        } else {\n            return escaped;\n        }\n    };\n\n    return SymbolNode;\n}();\n\n/**\n * SVG nodes are used to render stretchy wide elements.\n */\nvar domTree_SvgNode = function () {\n    function SvgNode(children, attributes) {\n        classCallCheck_default()(this, SvgNode);\n\n        this.children = children || [];\n        this.attributes = attributes || {};\n    }\n\n    SvgNode.prototype.toNode = function toNode() {\n        var svgNS = \"http://www.w3.org/2000/svg\";\n        var node = document.createElementNS(svgNS, \"svg\");\n\n        // Apply attributes\n        for (var attr in this.attributes) {\n            if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n                node.setAttribute(attr, this.attributes[attr]);\n            }\n        }\n\n        for (var i = 0; i < this.children.length; i++) {\n            node.appendChild(this.children[i].toNode());\n        }\n        return node;\n    };\n\n    SvgNode.prototype.toMarkup = function toMarkup() {\n        var markup = \"<svg\";\n\n        // Apply attributes\n        for (var attr in this.attributes) {\n            if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n                markup += \" \" + attr + \"='\" + this.attributes[attr] + \"'\";\n            }\n        }\n\n        markup += \">\";\n\n        for (var i = 0; i < this.children.length; i++) {\n            markup += this.children[i].toMarkup();\n        }\n\n        markup += \"</svg>\";\n\n        return markup;\n    };\n\n    return SvgNode;\n}();\n\nvar domTree_PathNode = function () {\n    function PathNode(pathName, alternate) {\n        classCallCheck_default()(this, PathNode);\n\n        this.pathName = pathName;\n        this.alternate = alternate; // Used only for tall \\sqrt\n    }\n\n    PathNode.prototype.toNode = function toNode() {\n        var svgNS = \"http://www.w3.org/2000/svg\";\n        var node = document.createElementNS(svgNS, \"path\");\n\n        if (this.alternate) {\n            node.setAttribute(\"d\", this.alternate);\n        } else {\n            node.setAttribute(\"d\", svgGeometry.path[this.pathName]);\n        }\n\n        return node;\n    };\n\n    PathNode.prototype.toMarkup = function toMarkup() {\n        if (this.alternate) {\n            return \"<path d='\" + this.alternate + \"'/>\";\n        } else {\n            return \"<path d='\" + svgGeometry.path[this.pathName] + \"'/>\";\n        }\n    };\n\n    return PathNode;\n}();\n\nvar domTree_LineNode = function () {\n    function LineNode(attributes) {\n        classCallCheck_default()(this, LineNode);\n\n        this.attributes = attributes || {};\n    }\n\n    LineNode.prototype.toNode = function toNode() {\n        var svgNS = \"http://www.w3.org/2000/svg\";\n        var node = document.createElementNS(svgNS, \"line\");\n\n        // Apply attributes\n        for (var attr in this.attributes) {\n            if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n                node.setAttribute(attr, this.attributes[attr]);\n            }\n        }\n\n        return node;\n    };\n\n    LineNode.prototype.toMarkup = function toMarkup() {\n        var markup = \"<line\";\n\n        for (var attr in this.attributes) {\n            if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n                markup += \" \" + attr + \"='\" + this.attributes[attr] + \"'\";\n            }\n        }\n\n        markup += \"/>\";\n\n        return markup;\n    };\n\n    return LineNode;\n}();\n\nfunction assertSymbolDomNode(group) {\n    if (group instanceof domTree_SymbolNode) {\n        return group;\n    } else {\n        throw new Error(\"Expected symbolNode but got \" + String(group) + \".\");\n    }\n}\n\nfunction assertSpan(group) {\n    if (group instanceof domTree_Span) {\n        return group;\n    } else {\n        throw new Error(\"Expected span<HtmlDomNode> but got \" + String(group) + \".\");\n    }\n}\n// CONCATENATED MODULE: ./submodules/katex-fonts/fontMetricsData.js\n// This file is GENERATED by buildMetrics.sh. DO NOT MODIFY.\n/* harmony default export */ var fontMetricsData = ({\n    \"AMS-Regular\": {\n        \"65\": [0, 0.68889, 0, 0, 0.72222],\n        \"66\": [0, 0.68889, 0, 0, 0.66667],\n        \"67\": [0, 0.68889, 0, 0, 0.72222],\n        \"68\": [0, 0.68889, 0, 0, 0.72222],\n        \"69\": [0, 0.68889, 0, 0, 0.66667],\n        \"70\": [0, 0.68889, 0, 0, 0.61111],\n        \"71\": [0, 0.68889, 0, 0, 0.77778],\n        \"72\": [0, 0.68889, 0, 0, 0.77778],\n        \"73\": [0, 0.68889, 0, 0, 0.38889],\n        \"74\": [0.16667, 0.68889, 0, 0, 0.5],\n        \"75\": [0, 0.68889, 0, 0, 0.77778],\n        \"76\": [0, 0.68889, 0, 0, 0.66667],\n        \"77\": [0, 0.68889, 0, 0, 0.94445],\n        \"78\": [0, 0.68889, 0, 0, 0.72222],\n        \"79\": [0.16667, 0.68889, 0, 0, 0.77778],\n        \"80\": [0, 0.68889, 0, 0, 0.61111],\n        \"81\": [0.16667, 0.68889, 0, 0, 0.77778],\n        \"82\": [0, 0.68889, 0, 0, 0.72222],\n        \"83\": [0, 0.68889, 0, 0, 0.55556],\n        \"84\": [0, 0.68889, 0, 0, 0.66667],\n        \"85\": [0, 0.68889, 0, 0, 0.72222],\n        \"86\": [0, 0.68889, 0, 0, 0.72222],\n        \"87\": [0, 0.68889, 0, 0, 1.0],\n        \"88\": [0, 0.68889, 0, 0, 0.72222],\n        \"89\": [0, 0.68889, 0, 0, 0.72222],\n        \"90\": [0, 0.68889, 0, 0, 0.66667],\n        \"107\": [0, 0.68889, 0, 0, 0.55556],\n        \"165\": [0, 0.675, 0.025, 0, 0.75],\n        \"174\": [0.15559, 0.69224, 0, 0, 0.94666],\n        \"240\": [0, 0.68889, 0, 0, 0.55556],\n        \"295\": [0, 0.68889, 0, 0, 0.54028],\n        \"710\": [0, 0.825, 0, 0, 2.33334],\n        \"732\": [0, 0.9, 0, 0, 2.33334],\n        \"770\": [0, 0.825, 0, 0, 2.33334],\n        \"771\": [0, 0.9, 0, 0, 2.33334],\n        \"989\": [0.08167, 0.58167, 0, 0, 0.77778],\n        \"1008\": [0, 0.43056, 0.04028, 0, 0.66667],\n        \"8245\": [0, 0.54986, 0, 0, 0.275],\n        \"8463\": [0, 0.68889, 0, 0, 0.54028],\n        \"8487\": [0, 0.68889, 0, 0, 0.72222],\n        \"8498\": [0, 0.68889, 0, 0, 0.55556],\n        \"8502\": [0, 0.68889, 0, 0, 0.66667],\n        \"8503\": [0, 0.68889, 0, 0, 0.44445],\n        \"8504\": [0, 0.68889, 0, 0, 0.66667],\n        \"8513\": [0, 0.68889, 0, 0, 0.63889],\n        \"8592\": [-0.03598, 0.46402, 0, 0, 0.5],\n        \"8594\": [-0.03598, 0.46402, 0, 0, 0.5],\n        \"8602\": [-0.13313, 0.36687, 0, 0, 1.0],\n        \"8603\": [-0.13313, 0.36687, 0, 0, 1.0],\n        \"8606\": [0.01354, 0.52239, 0, 0, 1.0],\n        \"8608\": [0.01354, 0.52239, 0, 0, 1.0],\n        \"8610\": [0.01354, 0.52239, 0, 0, 1.11111],\n        \"8611\": [0.01354, 0.52239, 0, 0, 1.11111],\n        \"8619\": [0, 0.54986, 0, 0, 1.0],\n        \"8620\": [0, 0.54986, 0, 0, 1.0],\n        \"8621\": [-0.13313, 0.37788, 0, 0, 1.38889],\n        \"8622\": [-0.13313, 0.36687, 0, 0, 1.0],\n        \"8624\": [0, 0.69224, 0, 0, 0.5],\n        \"8625\": [0, 0.69224, 0, 0, 0.5],\n        \"8630\": [0, 0.43056, 0, 0, 1.0],\n        \"8631\": [0, 0.43056, 0, 0, 1.0],\n        \"8634\": [0.08198, 0.58198, 0, 0, 0.77778],\n        \"8635\": [0.08198, 0.58198, 0, 0, 0.77778],\n        \"8638\": [0.19444, 0.69224, 0, 0, 0.41667],\n        \"8639\": [0.19444, 0.69224, 0, 0, 0.41667],\n        \"8642\": [0.19444, 0.69224, 0, 0, 0.41667],\n        \"8643\": [0.19444, 0.69224, 0, 0, 0.41667],\n        \"8644\": [0.1808, 0.675, 0, 0, 1.0],\n        \"8646\": [0.1808, 0.675, 0, 0, 1.0],\n        \"8647\": [0.1808, 0.675, 0, 0, 1.0],\n        \"8648\": [0.19444, 0.69224, 0, 0, 0.83334],\n        \"8649\": [0.1808, 0.675, 0, 0, 1.0],\n        \"8650\": [0.19444, 0.69224, 0, 0, 0.83334],\n        \"8651\": [0.01354, 0.52239, 0, 0, 1.0],\n        \"8652\": [0.01354, 0.52239, 0, 0, 1.0],\n        \"8653\": [-0.13313, 0.36687, 0, 0, 1.0],\n        \"8654\": [-0.13313, 0.36687, 0, 0, 1.0],\n        \"8655\": [-0.13313, 0.36687, 0, 0, 1.0],\n        \"8666\": [0.13667, 0.63667, 0, 0, 1.0],\n        \"8667\": [0.13667, 0.63667, 0, 0, 1.0],\n        \"8669\": [-0.13313, 0.37788, 0, 0, 1.0],\n        \"8672\": [-0.064, 0.437, 0, 0, 1.334],\n        \"8674\": [-0.064, 0.437, 0, 0, 1.334],\n        \"8705\": [0, 0.825, 0, 0, 0.5],\n        \"8708\": [0, 0.68889, 0, 0, 0.55556],\n        \"8709\": [0.08167, 0.58167, 0, 0, 0.77778],\n        \"8717\": [0, 0.43056, 0, 0, 0.42917],\n        \"8722\": [-0.03598, 0.46402, 0, 0, 0.5],\n        \"8724\": [0.08198, 0.69224, 0, 0, 0.77778],\n        \"8726\": [0.08167, 0.58167, 0, 0, 0.77778],\n        \"8733\": [0, 0.69224, 0, 0, 0.77778],\n        \"8736\": [0, 0.69224, 0, 0, 0.72222],\n        \"8737\": [0, 0.69224, 0, 0, 0.72222],\n        \"8738\": [0.03517, 0.52239, 0, 0, 0.72222],\n        \"8739\": [0.08167, 0.58167, 0, 0, 0.22222],\n        \"8740\": [0.25142, 0.74111, 0, 0, 0.27778],\n        \"8741\": [0.08167, 0.58167, 0, 0, 0.38889],\n        \"8742\": [0.25142, 0.74111, 0, 0, 0.5],\n        \"8756\": [0, 0.69224, 0, 0, 0.66667],\n        \"8757\": [0, 0.69224, 0, 0, 0.66667],\n        \"8764\": [-0.13313, 0.36687, 0, 0, 0.77778],\n        \"8765\": [-0.13313, 0.37788, 0, 0, 0.77778],\n        \"8769\": [-0.13313, 0.36687, 0, 0, 0.77778],\n        \"8770\": [-0.03625, 0.46375, 0, 0, 0.77778],\n        \"8774\": [0.30274, 0.79383, 0, 0, 0.77778],\n        \"8776\": [-0.01688, 0.48312, 0, 0, 0.77778],\n        \"8778\": [0.08167, 0.58167, 0, 0, 0.77778],\n        \"8782\": [0.06062, 0.54986, 0, 0, 0.77778],\n        \"8783\": [0.06062, 0.54986, 0, 0, 0.77778],\n        \"8785\": [0.08198, 0.58198, 0, 0, 0.77778],\n        \"8786\": [0.08198, 0.58198, 0, 0, 0.77778],\n        \"8787\": [0.08198, 0.58198, 0, 0, 0.77778],\n        \"8790\": [0, 0.69224, 0, 0, 0.77778],\n        \"8791\": [0.22958, 0.72958, 0, 0, 0.77778],\n        \"8796\": [0.08198, 0.91667, 0, 0, 0.77778],\n        \"8806\": [0.25583, 0.75583, 0, 0, 0.77778],\n        \"8807\": [0.25583, 0.75583, 0, 0, 0.77778],\n        \"8808\": [0.25142, 0.75726, 0, 0, 0.77778],\n        \"8809\": [0.25142, 0.75726, 0, 0, 0.77778],\n        \"8812\": [0.25583, 0.75583, 0, 0, 0.5],\n        \"8814\": [0.20576, 0.70576, 0, 0, 0.77778],\n        \"8815\": [0.20576, 0.70576, 0, 0, 0.77778],\n        \"8816\": [0.30274, 0.79383, 0, 0, 0.77778],\n        \"8817\": [0.30274, 0.79383, 0, 0, 0.77778],\n        \"8818\": [0.22958, 0.72958, 0, 0, 0.77778],\n        \"8819\": [0.22958, 0.72958, 0, 0, 0.77778],\n        \"8822\": [0.1808, 0.675, 0, 0, 0.77778],\n        \"8823\": [0.1808, 0.675, 0, 0, 0.77778],\n        \"8828\": [0.13667, 0.63667, 0, 0, 0.77778],\n        \"8829\": [0.13667, 0.63667, 0, 0, 0.77778],\n        \"8830\": [0.22958, 0.72958, 0, 0, 0.77778],\n        \"8831\": [0.22958, 0.72958, 0, 0, 0.77778],\n        \"8832\": [0.20576, 0.70576, 0, 0, 0.77778],\n        \"8833\": [0.20576, 0.70576, 0, 0, 0.77778],\n        \"8840\": [0.30274, 0.79383, 0, 0, 0.77778],\n        \"8841\": [0.30274, 0.79383, 0, 0, 0.77778],\n        \"8842\": [0.13597, 0.63597, 0, 0, 0.77778],\n        \"8843\": [0.13597, 0.63597, 0, 0, 0.77778],\n        \"8847\": [0.03517, 0.54986, 0, 0, 0.77778],\n        \"8848\": [0.03517, 0.54986, 0, 0, 0.77778],\n        \"8858\": [0.08198, 0.58198, 0, 0, 0.77778],\n        \"8859\": [0.08198, 0.58198, 0, 0, 0.77778],\n        \"8861\": [0.08198, 0.58198, 0, 0, 0.77778],\n        \"8862\": [0, 0.675, 0, 0, 0.77778],\n        \"8863\": [0, 0.675, 0, 0, 0.77778],\n        \"8864\": [0, 0.675, 0, 0, 0.77778],\n        \"8865\": [0, 0.675, 0, 0, 0.77778],\n        \"8872\": [0, 0.69224, 0, 0, 0.61111],\n        \"8873\": [0, 0.69224, 0, 0, 0.72222],\n        \"8874\": [0, 0.69224, 0, 0, 0.88889],\n        \"8876\": [0, 0.68889, 0, 0, 0.61111],\n        \"8877\": [0, 0.68889, 0, 0, 0.61111],\n        \"8878\": [0, 0.68889, 0, 0, 0.72222],\n        \"8879\": [0, 0.68889, 0, 0, 0.72222],\n        \"8882\": [0.03517, 0.54986, 0, 0, 0.77778],\n        \"8883\": [0.03517, 0.54986, 0, 0, 0.77778],\n        \"8884\": [0.13667, 0.63667, 0, 0, 0.77778],\n        \"8885\": [0.13667, 0.63667, 0, 0, 0.77778],\n        \"8888\": [0, 0.54986, 0, 0, 1.11111],\n        \"8890\": [0.19444, 0.43056, 0, 0, 0.55556],\n        \"8891\": [0.19444, 0.69224, 0, 0, 0.61111],\n        \"8892\": [0.19444, 0.69224, 0, 0, 0.61111],\n        \"8901\": [0, 0.54986, 0, 0, 0.27778],\n        \"8903\": [0.08167, 0.58167, 0, 0, 0.77778],\n        \"8905\": [0.08167, 0.58167, 0, 0, 0.77778],\n        \"8906\": [0.08167, 0.58167, 0, 0, 0.77778],\n        \"8907\": [0, 0.69224, 0, 0, 0.77778],\n        \"8908\": [0, 0.69224, 0, 0, 0.77778],\n        \"8909\": [-0.03598, 0.46402, 0, 0, 0.77778],\n        \"8910\": [0, 0.54986, 0, 0, 0.76042],\n        \"8911\": [0, 0.54986, 0, 0, 0.76042],\n        \"8912\": [0.03517, 0.54986, 0, 0, 0.77778],\n        \"8913\": [0.03517, 0.54986, 0, 0, 0.77778],\n        \"8914\": [0, 0.54986, 0, 0, 0.66667],\n        \"8915\": [0, 0.54986, 0, 0, 0.66667],\n        \"8916\": [0, 0.69224, 0, 0, 0.66667],\n        \"8918\": [0.0391, 0.5391, 0, 0, 0.77778],\n        \"8919\": [0.0391, 0.5391, 0, 0, 0.77778],\n        \"8920\": [0.03517, 0.54986, 0, 0, 1.33334],\n        \"8921\": [0.03517, 0.54986, 0, 0, 1.33334],\n        \"8922\": [0.38569, 0.88569, 0, 0, 0.77778],\n        \"8923\": [0.38569, 0.88569, 0, 0, 0.77778],\n        \"8926\": [0.13667, 0.63667, 0, 0, 0.77778],\n        \"8927\": [0.13667, 0.63667, 0, 0, 0.77778],\n        \"8928\": [0.30274, 0.79383, 0, 0, 0.77778],\n        \"8929\": [0.30274, 0.79383, 0, 0, 0.77778],\n        \"8934\": [0.23222, 0.74111, 0, 0, 0.77778],\n        \"8935\": [0.23222, 0.74111, 0, 0, 0.77778],\n        \"8936\": [0.23222, 0.74111, 0, 0, 0.77778],\n        \"8937\": [0.23222, 0.74111, 0, 0, 0.77778],\n        \"8938\": [0.20576, 0.70576, 0, 0, 0.77778],\n        \"8939\": [0.20576, 0.70576, 0, 0, 0.77778],\n        \"8940\": [0.30274, 0.79383, 0, 0, 0.77778],\n        \"8941\": [0.30274, 0.79383, 0, 0, 0.77778],\n        \"8994\": [0.19444, 0.69224, 0, 0, 0.77778],\n        \"8995\": [0.19444, 0.69224, 0, 0, 0.77778],\n        \"9416\": [0.15559, 0.69224, 0, 0, 0.90222],\n        \"9484\": [0, 0.69224, 0, 0, 0.5],\n        \"9488\": [0, 0.69224, 0, 0, 0.5],\n        \"9492\": [0, 0.37788, 0, 0, 0.5],\n        \"9496\": [0, 0.37788, 0, 0, 0.5],\n        \"9585\": [0.19444, 0.68889, 0, 0, 0.88889],\n        \"9586\": [0.19444, 0.74111, 0, 0, 0.88889],\n        \"9632\": [0, 0.675, 0, 0, 0.77778],\n        \"9633\": [0, 0.675, 0, 0, 0.77778],\n        \"9650\": [0, 0.54986, 0, 0, 0.72222],\n        \"9651\": [0, 0.54986, 0, 0, 0.72222],\n        \"9654\": [0.03517, 0.54986, 0, 0, 0.77778],\n        \"9660\": [0, 0.54986, 0, 0, 0.72222],\n        \"9661\": [0, 0.54986, 0, 0, 0.72222],\n        \"9664\": [0.03517, 0.54986, 0, 0, 0.77778],\n        \"9674\": [0.11111, 0.69224, 0, 0, 0.66667],\n        \"9733\": [0.19444, 0.69224, 0, 0, 0.94445],\n        \"10003\": [0, 0.69224, 0, 0, 0.83334],\n        \"10016\": [0, 0.69224, 0, 0, 0.83334],\n        \"10731\": [0.11111, 0.69224, 0, 0, 0.66667],\n        \"10846\": [0.19444, 0.75583, 0, 0, 0.61111],\n        \"10877\": [0.13667, 0.63667, 0, 0, 0.77778],\n        \"10878\": [0.13667, 0.63667, 0, 0, 0.77778],\n        \"10885\": [0.25583, 0.75583, 0, 0, 0.77778],\n        \"10886\": [0.25583, 0.75583, 0, 0, 0.77778],\n        \"10887\": [0.13597, 0.63597, 0, 0, 0.77778],\n        \"10888\": [0.13597, 0.63597, 0, 0, 0.77778],\n        \"10889\": [0.26167, 0.75726, 0, 0, 0.77778],\n        \"10890\": [0.26167, 0.75726, 0, 0, 0.77778],\n        \"10891\": [0.48256, 0.98256, 0, 0, 0.77778],\n        \"10892\": [0.48256, 0.98256, 0, 0, 0.77778],\n        \"10901\": [0.13667, 0.63667, 0, 0, 0.77778],\n        \"10902\": [0.13667, 0.63667, 0, 0, 0.77778],\n        \"10933\": [0.25142, 0.75726, 0, 0, 0.77778],\n        \"10934\": [0.25142, 0.75726, 0, 0, 0.77778],\n        \"10935\": [0.26167, 0.75726, 0, 0, 0.77778],\n        \"10936\": [0.26167, 0.75726, 0, 0, 0.77778],\n        \"10937\": [0.26167, 0.75726, 0, 0, 0.77778],\n        \"10938\": [0.26167, 0.75726, 0, 0, 0.77778],\n        \"10949\": [0.25583, 0.75583, 0, 0, 0.77778],\n        \"10950\": [0.25583, 0.75583, 0, 0, 0.77778],\n        \"10955\": [0.28481, 0.79383, 0, 0, 0.77778],\n        \"10956\": [0.28481, 0.79383, 0, 0, 0.77778],\n        \"57350\": [0.08167, 0.58167, 0, 0, 0.22222],\n        \"57351\": [0.08167, 0.58167, 0, 0, 0.38889],\n        \"57352\": [0.08167, 0.58167, 0, 0, 0.77778],\n        \"57353\": [0, 0.43056, 0.04028, 0, 0.66667],\n        \"57356\": [0.25142, 0.75726, 0, 0, 0.77778],\n        \"57357\": [0.25142, 0.75726, 0, 0, 0.77778],\n        \"57358\": [0.41951, 0.91951, 0, 0, 0.77778],\n        \"57359\": [0.30274, 0.79383, 0, 0, 0.77778],\n        \"57360\": [0.30274, 0.79383, 0, 0, 0.77778],\n        \"57361\": [0.41951, 0.91951, 0, 0, 0.77778],\n        \"57366\": [0.25142, 0.75726, 0, 0, 0.77778],\n        \"57367\": [0.25142, 0.75726, 0, 0, 0.77778],\n        \"57368\": [0.25142, 0.75726, 0, 0, 0.77778],\n        \"57369\": [0.25142, 0.75726, 0, 0, 0.77778],\n        \"57370\": [0.13597, 0.63597, 0, 0, 0.77778],\n        \"57371\": [0.13597, 0.63597, 0, 0, 0.77778]\n    },\n    \"Caligraphic-Regular\": {\n        \"48\": [0, 0.43056, 0, 0, 0.5],\n        \"49\": [0, 0.43056, 0, 0, 0.5],\n        \"50\": [0, 0.43056, 0, 0, 0.5],\n        \"51\": [0.19444, 0.43056, 0, 0, 0.5],\n        \"52\": [0.19444, 0.43056, 0, 0, 0.5],\n        \"53\": [0.19444, 0.43056, 0, 0, 0.5],\n        \"54\": [0, 0.64444, 0, 0, 0.5],\n        \"55\": [0.19444, 0.43056, 0, 0, 0.5],\n        \"56\": [0, 0.64444, 0, 0, 0.5],\n        \"57\": [0.19444, 0.43056, 0, 0, 0.5],\n        \"65\": [0, 0.68333, 0, 0.19445, 0.79847],\n        \"66\": [0, 0.68333, 0.03041, 0.13889, 0.65681],\n        \"67\": [0, 0.68333, 0.05834, 0.13889, 0.52653],\n        \"68\": [0, 0.68333, 0.02778, 0.08334, 0.77139],\n        \"69\": [0, 0.68333, 0.08944, 0.11111, 0.52778],\n        \"70\": [0, 0.68333, 0.09931, 0.11111, 0.71875],\n        \"71\": [0.09722, 0.68333, 0.0593, 0.11111, 0.59487],\n        \"72\": [0, 0.68333, 0.00965, 0.11111, 0.84452],\n        \"73\": [0, 0.68333, 0.07382, 0, 0.54452],\n        \"74\": [0.09722, 0.68333, 0.18472, 0.16667, 0.67778],\n        \"75\": [0, 0.68333, 0.01445, 0.05556, 0.76195],\n        \"76\": [0, 0.68333, 0, 0.13889, 0.68972],\n        \"77\": [0, 0.68333, 0, 0.13889, 1.2009],\n        \"78\": [0, 0.68333, 0.14736, 0.08334, 0.82049],\n        \"79\": [0, 0.68333, 0.02778, 0.11111, 0.79611],\n        \"80\": [0, 0.68333, 0.08222, 0.08334, 0.69556],\n        \"81\": [0.09722, 0.68333, 0, 0.11111, 0.81667],\n        \"82\": [0, 0.68333, 0, 0.08334, 0.8475],\n        \"83\": [0, 0.68333, 0.075, 0.13889, 0.60556],\n        \"84\": [0, 0.68333, 0.25417, 0, 0.54464],\n        \"85\": [0, 0.68333, 0.09931, 0.08334, 0.62583],\n        \"86\": [0, 0.68333, 0.08222, 0, 0.61278],\n        \"87\": [0, 0.68333, 0.08222, 0.08334, 0.98778],\n        \"88\": [0, 0.68333, 0.14643, 0.13889, 0.7133],\n        \"89\": [0.09722, 0.68333, 0.08222, 0.08334, 0.66834],\n        \"90\": [0, 0.68333, 0.07944, 0.13889, 0.72473]\n    },\n    \"Fraktur-Regular\": {\n        \"33\": [0, 0.69141, 0, 0, 0.29574],\n        \"34\": [0, 0.69141, 0, 0, 0.21471],\n        \"38\": [0, 0.69141, 0, 0, 0.73786],\n        \"39\": [0, 0.69141, 0, 0, 0.21201],\n        \"40\": [0.24982, 0.74947, 0, 0, 0.38865],\n        \"41\": [0.24982, 0.74947, 0, 0, 0.38865],\n        \"42\": [0, 0.62119, 0, 0, 0.27764],\n        \"43\": [0.08319, 0.58283, 0, 0, 0.75623],\n        \"44\": [0, 0.10803, 0, 0, 0.27764],\n        \"45\": [0.08319, 0.58283, 0, 0, 0.75623],\n        \"46\": [0, 0.10803, 0, 0, 0.27764],\n        \"47\": [0.24982, 0.74947, 0, 0, 0.50181],\n        \"48\": [0, 0.47534, 0, 0, 0.50181],\n        \"49\": [0, 0.47534, 0, 0, 0.50181],\n        \"50\": [0, 0.47534, 0, 0, 0.50181],\n        \"51\": [0.18906, 0.47534, 0, 0, 0.50181],\n        \"52\": [0.18906, 0.47534, 0, 0, 0.50181],\n        \"53\": [0.18906, 0.47534, 0, 0, 0.50181],\n        \"54\": [0, 0.69141, 0, 0, 0.50181],\n        \"55\": [0.18906, 0.47534, 0, 0, 0.50181],\n        \"56\": [0, 0.69141, 0, 0, 0.50181],\n        \"57\": [0.18906, 0.47534, 0, 0, 0.50181],\n        \"58\": [0, 0.47534, 0, 0, 0.21606],\n        \"59\": [0.12604, 0.47534, 0, 0, 0.21606],\n        \"61\": [-0.13099, 0.36866, 0, 0, 0.75623],\n        \"63\": [0, 0.69141, 0, 0, 0.36245],\n        \"65\": [0, 0.69141, 0, 0, 0.7176],\n        \"66\": [0, 0.69141, 0, 0, 0.88397],\n        \"67\": [0, 0.69141, 0, 0, 0.61254],\n        \"68\": [0, 0.69141, 0, 0, 0.83158],\n        \"69\": [0, 0.69141, 0, 0, 0.66278],\n        \"70\": [0.12604, 0.69141, 0, 0, 0.61119],\n        \"71\": [0, 0.69141, 0, 0, 0.78539],\n        \"72\": [0.06302, 0.69141, 0, 0, 0.7203],\n        \"73\": [0, 0.69141, 0, 0, 0.55448],\n        \"74\": [0.12604, 0.69141, 0, 0, 0.55231],\n        \"75\": [0, 0.69141, 0, 0, 0.66845],\n        \"76\": [0, 0.69141, 0, 0, 0.66602],\n        \"77\": [0, 0.69141, 0, 0, 1.04953],\n        \"78\": [0, 0.69141, 0, 0, 0.83212],\n        \"79\": [0, 0.69141, 0, 0, 0.82699],\n        \"80\": [0.18906, 0.69141, 0, 0, 0.82753],\n        \"81\": [0.03781, 0.69141, 0, 0, 0.82699],\n        \"82\": [0, 0.69141, 0, 0, 0.82807],\n        \"83\": [0, 0.69141, 0, 0, 0.82861],\n        \"84\": [0, 0.69141, 0, 0, 0.66899],\n        \"85\": [0, 0.69141, 0, 0, 0.64576],\n        \"86\": [0, 0.69141, 0, 0, 0.83131],\n        \"87\": [0, 0.69141, 0, 0, 1.04602],\n        \"88\": [0, 0.69141, 0, 0, 0.71922],\n        \"89\": [0.18906, 0.69141, 0, 0, 0.83293],\n        \"90\": [0.12604, 0.69141, 0, 0, 0.60201],\n        \"91\": [0.24982, 0.74947, 0, 0, 0.27764],\n        \"93\": [0.24982, 0.74947, 0, 0, 0.27764],\n        \"94\": [0, 0.69141, 0, 0, 0.49965],\n        \"97\": [0, 0.47534, 0, 0, 0.50046],\n        \"98\": [0, 0.69141, 0, 0, 0.51315],\n        \"99\": [0, 0.47534, 0, 0, 0.38946],\n        \"100\": [0, 0.62119, 0, 0, 0.49857],\n        \"101\": [0, 0.47534, 0, 0, 0.40053],\n        \"102\": [0.18906, 0.69141, 0, 0, 0.32626],\n        \"103\": [0.18906, 0.47534, 0, 0, 0.5037],\n        \"104\": [0.18906, 0.69141, 0, 0, 0.52126],\n        \"105\": [0, 0.69141, 0, 0, 0.27899],\n        \"106\": [0, 0.69141, 0, 0, 0.28088],\n        \"107\": [0, 0.69141, 0, 0, 0.38946],\n        \"108\": [0, 0.69141, 0, 0, 0.27953],\n        \"109\": [0, 0.47534, 0, 0, 0.76676],\n        \"110\": [0, 0.47534, 0, 0, 0.52666],\n        \"111\": [0, 0.47534, 0, 0, 0.48885],\n        \"112\": [0.18906, 0.52396, 0, 0, 0.50046],\n        \"113\": [0.18906, 0.47534, 0, 0, 0.48912],\n        \"114\": [0, 0.47534, 0, 0, 0.38919],\n        \"115\": [0, 0.47534, 0, 0, 0.44266],\n        \"116\": [0, 0.62119, 0, 0, 0.33301],\n        \"117\": [0, 0.47534, 0, 0, 0.5172],\n        \"118\": [0, 0.52396, 0, 0, 0.5118],\n        \"119\": [0, 0.52396, 0, 0, 0.77351],\n        \"120\": [0.18906, 0.47534, 0, 0, 0.38865],\n        \"121\": [0.18906, 0.47534, 0, 0, 0.49884],\n        \"122\": [0.18906, 0.47534, 0, 0, 0.39054],\n        \"8216\": [0, 0.69141, 0, 0, 0.21471],\n        \"8217\": [0, 0.69141, 0, 0, 0.21471],\n        \"58112\": [0, 0.62119, 0, 0, 0.49749],\n        \"58113\": [0, 0.62119, 0, 0, 0.4983],\n        \"58114\": [0.18906, 0.69141, 0, 0, 0.33328],\n        \"58115\": [0.18906, 0.69141, 0, 0, 0.32923],\n        \"58116\": [0.18906, 0.47534, 0, 0, 0.50343],\n        \"58117\": [0, 0.69141, 0, 0, 0.33301],\n        \"58118\": [0, 0.62119, 0, 0, 0.33409],\n        \"58119\": [0, 0.47534, 0, 0, 0.50073]\n    },\n    \"Main-Bold\": {\n        \"33\": [0, 0.69444, 0, 0, 0.35],\n        \"34\": [0, 0.69444, 0, 0, 0.60278],\n        \"35\": [0.19444, 0.69444, 0, 0, 0.95833],\n        \"36\": [0.05556, 0.75, 0, 0, 0.575],\n        \"37\": [0.05556, 0.75, 0, 0, 0.95833],\n        \"38\": [0, 0.69444, 0, 0, 0.89444],\n        \"39\": [0, 0.69444, 0, 0, 0.31944],\n        \"40\": [0.25, 0.75, 0, 0, 0.44722],\n        \"41\": [0.25, 0.75, 0, 0, 0.44722],\n        \"42\": [0, 0.75, 0, 0, 0.575],\n        \"43\": [0.13333, 0.63333, 0, 0, 0.89444],\n        \"44\": [0.19444, 0.15556, 0, 0, 0.31944],\n        \"45\": [0, 0.44444, 0, 0, 0.38333],\n        \"46\": [0, 0.15556, 0, 0, 0.31944],\n        \"47\": [0.25, 0.75, 0, 0, 0.575],\n        \"48\": [0, 0.64444, 0, 0, 0.575],\n        \"49\": [0, 0.64444, 0, 0, 0.575],\n        \"50\": [0, 0.64444, 0, 0, 0.575],\n        \"51\": [0, 0.64444, 0, 0, 0.575],\n        \"52\": [0, 0.64444, 0, 0, 0.575],\n        \"53\": [0, 0.64444, 0, 0, 0.575],\n        \"54\": [0, 0.64444, 0, 0, 0.575],\n        \"55\": [0, 0.64444, 0, 0, 0.575],\n        \"56\": [0, 0.64444, 0, 0, 0.575],\n        \"57\": [0, 0.64444, 0, 0, 0.575],\n        \"58\": [0, 0.44444, 0, 0, 0.31944],\n        \"59\": [0.19444, 0.44444, 0, 0, 0.31944],\n        \"60\": [0.08556, 0.58556, 0, 0, 0.89444],\n        \"61\": [-0.10889, 0.39111, 0, 0, 0.89444],\n        \"62\": [0.08556, 0.58556, 0, 0, 0.89444],\n        \"63\": [0, 0.69444, 0, 0, 0.54305],\n        \"64\": [0, 0.69444, 0, 0, 0.89444],\n        \"65\": [0, 0.68611, 0, 0, 0.86944],\n        \"66\": [0, 0.68611, 0, 0, 0.81805],\n        \"67\": [0, 0.68611, 0, 0, 0.83055],\n        \"68\": [0, 0.68611, 0, 0, 0.88194],\n        \"69\": [0, 0.68611, 0, 0, 0.75555],\n        \"70\": [0, 0.68611, 0, 0, 0.72361],\n        \"71\": [0, 0.68611, 0, 0, 0.90416],\n        \"72\": [0, 0.68611, 0, 0, 0.9],\n        \"73\": [0, 0.68611, 0, 0, 0.43611],\n        \"74\": [0, 0.68611, 0, 0, 0.59444],\n        \"75\": [0, 0.68611, 0, 0, 0.90138],\n        \"76\": [0, 0.68611, 0, 0, 0.69166],\n        \"77\": [0, 0.68611, 0, 0, 1.09166],\n        \"78\": [0, 0.68611, 0, 0, 0.9],\n        \"79\": [0, 0.68611, 0, 0, 0.86388],\n        \"80\": [0, 0.68611, 0, 0, 0.78611],\n        \"81\": [0.19444, 0.68611, 0, 0, 0.86388],\n        \"82\": [0, 0.68611, 0, 0, 0.8625],\n        \"83\": [0, 0.68611, 0, 0, 0.63889],\n        \"84\": [0, 0.68611, 0, 0, 0.8],\n        \"85\": [0, 0.68611, 0, 0, 0.88472],\n        \"86\": [0, 0.68611, 0.01597, 0, 0.86944],\n        \"87\": [0, 0.68611, 0.01597, 0, 1.18888],\n        \"88\": [0, 0.68611, 0, 0, 0.86944],\n        \"89\": [0, 0.68611, 0.02875, 0, 0.86944],\n        \"90\": [0, 0.68611, 0, 0, 0.70277],\n        \"91\": [0.25, 0.75, 0, 0, 0.31944],\n        \"92\": [0.25, 0.75, 0, 0, 0.575],\n        \"93\": [0.25, 0.75, 0, 0, 0.31944],\n        \"94\": [0, 0.69444, 0, 0, 0.575],\n        \"95\": [0.31, 0.13444, 0.03194, 0, 0.575],\n        \"97\": [0, 0.44444, 0, 0, 0.55902],\n        \"98\": [0, 0.69444, 0, 0, 0.63889],\n        \"99\": [0, 0.44444, 0, 0, 0.51111],\n        \"100\": [0, 0.69444, 0, 0, 0.63889],\n        \"101\": [0, 0.44444, 0, 0, 0.52708],\n        \"102\": [0, 0.69444, 0.10903, 0, 0.35139],\n        \"103\": [0.19444, 0.44444, 0.01597, 0, 0.575],\n        \"104\": [0, 0.69444, 0, 0, 0.63889],\n        \"105\": [0, 0.69444, 0, 0, 0.31944],\n        \"106\": [0.19444, 0.69444, 0, 0, 0.35139],\n        \"107\": [0, 0.69444, 0, 0, 0.60694],\n        \"108\": [0, 0.69444, 0, 0, 0.31944],\n        \"109\": [0, 0.44444, 0, 0, 0.95833],\n        \"110\": [0, 0.44444, 0, 0, 0.63889],\n        \"111\": [0, 0.44444, 0, 0, 0.575],\n        \"112\": [0.19444, 0.44444, 0, 0, 0.63889],\n        \"113\": [0.19444, 0.44444, 0, 0, 0.60694],\n        \"114\": [0, 0.44444, 0, 0, 0.47361],\n        \"115\": [0, 0.44444, 0, 0, 0.45361],\n        \"116\": [0, 0.63492, 0, 0, 0.44722],\n        \"117\": [0, 0.44444, 0, 0, 0.63889],\n        \"118\": [0, 0.44444, 0.01597, 0, 0.60694],\n        \"119\": [0, 0.44444, 0.01597, 0, 0.83055],\n        \"120\": [0, 0.44444, 0, 0, 0.60694],\n        \"121\": [0.19444, 0.44444, 0.01597, 0, 0.60694],\n        \"122\": [0, 0.44444, 0, 0, 0.51111],\n        \"123\": [0.25, 0.75, 0, 0, 0.575],\n        \"124\": [0.25, 0.75, 0, 0, 0.31944],\n        \"125\": [0.25, 0.75, 0, 0, 0.575],\n        \"126\": [0.35, 0.34444, 0, 0, 0.575],\n        \"168\": [0, 0.69444, 0, 0, 0.575],\n        \"172\": [0, 0.44444, 0, 0, 0.76666],\n        \"176\": [0, 0.69444, 0, 0, 0.86944],\n        \"177\": [0.13333, 0.63333, 0, 0, 0.89444],\n        \"184\": [0.17014, 0, 0, 0, 0.51111],\n        \"198\": [0, 0.68611, 0, 0, 1.04166],\n        \"215\": [0.13333, 0.63333, 0, 0, 0.89444],\n        \"216\": [0.04861, 0.73472, 0, 0, 0.89444],\n        \"223\": [0, 0.69444, 0, 0, 0.59722],\n        \"230\": [0, 0.44444, 0, 0, 0.83055],\n        \"247\": [0.13333, 0.63333, 0, 0, 0.89444],\n        \"248\": [0.09722, 0.54167, 0, 0, 0.575],\n        \"305\": [0, 0.44444, 0, 0, 0.31944],\n        \"338\": [0, 0.68611, 0, 0, 1.16944],\n        \"339\": [0, 0.44444, 0, 0, 0.89444],\n        \"567\": [0.19444, 0.44444, 0, 0, 0.35139],\n        \"710\": [0, 0.69444, 0, 0, 0.575],\n        \"711\": [0, 0.63194, 0, 0, 0.575],\n        \"713\": [0, 0.59611, 0, 0, 0.575],\n        \"714\": [0, 0.69444, 0, 0, 0.575],\n        \"715\": [0, 0.69444, 0, 0, 0.575],\n        \"728\": [0, 0.69444, 0, 0, 0.575],\n        \"729\": [0, 0.69444, 0, 0, 0.31944],\n        \"730\": [0, 0.69444, 0, 0, 0.86944],\n        \"732\": [0, 0.69444, 0, 0, 0.575],\n        \"733\": [0, 0.69444, 0, 0, 0.575],\n        \"824\": [0.19444, 0.69444, 0, 0, 0],\n        \"915\": [0, 0.68611, 0, 0, 0.69166],\n        \"916\": [0, 0.68611, 0, 0, 0.95833],\n        \"920\": [0, 0.68611, 0, 0, 0.89444],\n        \"923\": [0, 0.68611, 0, 0, 0.80555],\n        \"926\": [0, 0.68611, 0, 0, 0.76666],\n        \"928\": [0, 0.68611, 0, 0, 0.9],\n        \"931\": [0, 0.68611, 0, 0, 0.83055],\n        \"933\": [0, 0.68611, 0, 0, 0.89444],\n        \"934\": [0, 0.68611, 0, 0, 0.83055],\n        \"936\": [0, 0.68611, 0, 0, 0.89444],\n        \"937\": [0, 0.68611, 0, 0, 0.83055],\n        \"8211\": [0, 0.44444, 0.03194, 0, 0.575],\n        \"8212\": [0, 0.44444, 0.03194, 0, 1.14999],\n        \"8216\": [0, 0.69444, 0, 0, 0.31944],\n        \"8217\": [0, 0.69444, 0, 0, 0.31944],\n        \"8220\": [0, 0.69444, 0, 0, 0.60278],\n        \"8221\": [0, 0.69444, 0, 0, 0.60278],\n        \"8224\": [0.19444, 0.69444, 0, 0, 0.51111],\n        \"8225\": [0.19444, 0.69444, 0, 0, 0.51111],\n        \"8242\": [0, 0.55556, 0, 0, 0.34444],\n        \"8407\": [0, 0.72444, 0.15486, 0, 0.575],\n        \"8463\": [0, 0.69444, 0, 0, 0.66759],\n        \"8465\": [0, 0.69444, 0, 0, 0.83055],\n        \"8467\": [0, 0.69444, 0, 0, 0.47361],\n        \"8472\": [0.19444, 0.44444, 0, 0, 0.74027],\n        \"8476\": [0, 0.69444, 0, 0, 0.83055],\n        \"8501\": [0, 0.69444, 0, 0, 0.70277],\n        \"8592\": [-0.10889, 0.39111, 0, 0, 1.14999],\n        \"8593\": [0.19444, 0.69444, 0, 0, 0.575],\n        \"8594\": [-0.10889, 0.39111, 0, 0, 1.14999],\n        \"8595\": [0.19444, 0.69444, 0, 0, 0.575],\n        \"8596\": [-0.10889, 0.39111, 0, 0, 1.14999],\n        \"8597\": [0.25, 0.75, 0, 0, 0.575],\n        \"8598\": [0.19444, 0.69444, 0, 0, 1.14999],\n        \"8599\": [0.19444, 0.69444, 0, 0, 1.14999],\n        \"8600\": [0.19444, 0.69444, 0, 0, 1.14999],\n        \"8601\": [0.19444, 0.69444, 0, 0, 1.14999],\n        \"8636\": [-0.10889, 0.39111, 0, 0, 1.14999],\n        \"8637\": [-0.10889, 0.39111, 0, 0, 1.14999],\n        \"8640\": [-0.10889, 0.39111, 0, 0, 1.14999],\n        \"8641\": [-0.10889, 0.39111, 0, 0, 1.14999],\n        \"8656\": [-0.10889, 0.39111, 0, 0, 1.14999],\n        \"8657\": [0.19444, 0.69444, 0, 0, 0.70277],\n        \"8658\": [-0.10889, 0.39111, 0, 0, 1.14999],\n        \"8659\": [0.19444, 0.69444, 0, 0, 0.70277],\n        \"8660\": [-0.10889, 0.39111, 0, 0, 1.14999],\n        \"8661\": [0.25, 0.75, 0, 0, 0.70277],\n        \"8704\": [0, 0.69444, 0, 0, 0.63889],\n        \"8706\": [0, 0.69444, 0.06389, 0, 0.62847],\n        \"8707\": [0, 0.69444, 0, 0, 0.63889],\n        \"8709\": [0.05556, 0.75, 0, 0, 0.575],\n        \"8711\": [0, 0.68611, 0, 0, 0.95833],\n        \"8712\": [0.08556, 0.58556, 0, 0, 0.76666],\n        \"8715\": [0.08556, 0.58556, 0, 0, 0.76666],\n        \"8722\": [0.13333, 0.63333, 0, 0, 0.89444],\n        \"8723\": [0.13333, 0.63333, 0, 0, 0.89444],\n        \"8725\": [0.25, 0.75, 0, 0, 0.575],\n        \"8726\": [0.25, 0.75, 0, 0, 0.575],\n        \"8727\": [-0.02778, 0.47222, 0, 0, 0.575],\n        \"8728\": [-0.02639, 0.47361, 0, 0, 0.575],\n        \"8729\": [-0.02639, 0.47361, 0, 0, 0.575],\n        \"8730\": [0.18, 0.82, 0, 0, 0.95833],\n        \"8733\": [0, 0.44444, 0, 0, 0.89444],\n        \"8734\": [0, 0.44444, 0, 0, 1.14999],\n        \"8736\": [0, 0.69224, 0, 0, 0.72222],\n        \"8739\": [0.25, 0.75, 0, 0, 0.31944],\n        \"8741\": [0.25, 0.75, 0, 0, 0.575],\n        \"8743\": [0, 0.55556, 0, 0, 0.76666],\n        \"8744\": [0, 0.55556, 0, 0, 0.76666],\n        \"8745\": [0, 0.55556, 0, 0, 0.76666],\n        \"8746\": [0, 0.55556, 0, 0, 0.76666],\n        \"8747\": [0.19444, 0.69444, 0.12778, 0, 0.56875],\n        \"8764\": [-0.10889, 0.39111, 0, 0, 0.89444],\n        \"8768\": [0.19444, 0.69444, 0, 0, 0.31944],\n        \"8771\": [0.00222, 0.50222, 0, 0, 0.89444],\n        \"8776\": [0.02444, 0.52444, 0, 0, 0.89444],\n        \"8781\": [0.00222, 0.50222, 0, 0, 0.89444],\n        \"8801\": [0.00222, 0.50222, 0, 0, 0.89444],\n        \"8804\": [0.19667, 0.69667, 0, 0, 0.89444],\n        \"8805\": [0.19667, 0.69667, 0, 0, 0.89444],\n        \"8810\": [0.08556, 0.58556, 0, 0, 1.14999],\n        \"8811\": [0.08556, 0.58556, 0, 0, 1.14999],\n        \"8826\": [0.08556, 0.58556, 0, 0, 0.89444],\n        \"8827\": [0.08556, 0.58556, 0, 0, 0.89444],\n        \"8834\": [0.08556, 0.58556, 0, 0, 0.89444],\n        \"8835\": [0.08556, 0.58556, 0, 0, 0.89444],\n        \"8838\": [0.19667, 0.69667, 0, 0, 0.89444],\n        \"8839\": [0.19667, 0.69667, 0, 0, 0.89444],\n        \"8846\": [0, 0.55556, 0, 0, 0.76666],\n        \"8849\": [0.19667, 0.69667, 0, 0, 0.89444],\n        \"8850\": [0.19667, 0.69667, 0, 0, 0.89444],\n        \"8851\": [0, 0.55556, 0, 0, 0.76666],\n        \"8852\": [0, 0.55556, 0, 0, 0.76666],\n        \"8853\": [0.13333, 0.63333, 0, 0, 0.89444],\n        \"8854\": [0.13333, 0.63333, 0, 0, 0.89444],\n        \"8855\": [0.13333, 0.63333, 0, 0, 0.89444],\n        \"8856\": [0.13333, 0.63333, 0, 0, 0.89444],\n        \"8857\": [0.13333, 0.63333, 0, 0, 0.89444],\n        \"8866\": [0, 0.69444, 0, 0, 0.70277],\n        \"8867\": [0, 0.69444, 0, 0, 0.70277],\n        \"8868\": [0, 0.69444, 0, 0, 0.89444],\n        \"8869\": [0, 0.69444, 0, 0, 0.89444],\n        \"8900\": [-0.02639, 0.47361, 0, 0, 0.575],\n        \"8901\": [-0.02639, 0.47361, 0, 0, 0.31944],\n        \"8902\": [-0.02778, 0.47222, 0, 0, 0.575],\n        \"8968\": [0.25, 0.75, 0, 0, 0.51111],\n        \"8969\": [0.25, 0.75, 0, 0, 0.51111],\n        \"8970\": [0.25, 0.75, 0, 0, 0.51111],\n        \"8971\": [0.25, 0.75, 0, 0, 0.51111],\n        \"8994\": [-0.13889, 0.36111, 0, 0, 1.14999],\n        \"8995\": [-0.13889, 0.36111, 0, 0, 1.14999],\n        \"9651\": [0.19444, 0.69444, 0, 0, 1.02222],\n        \"9657\": [-0.02778, 0.47222, 0, 0, 0.575],\n        \"9661\": [0.19444, 0.69444, 0, 0, 1.02222],\n        \"9667\": [-0.02778, 0.47222, 0, 0, 0.575],\n        \"9711\": [0.19444, 0.69444, 0, 0, 1.14999],\n        \"9824\": [0.12963, 0.69444, 0, 0, 0.89444],\n        \"9825\": [0.12963, 0.69444, 0, 0, 0.89444],\n        \"9826\": [0.12963, 0.69444, 0, 0, 0.89444],\n        \"9827\": [0.12963, 0.69444, 0, 0, 0.89444],\n        \"9837\": [0, 0.75, 0, 0, 0.44722],\n        \"9838\": [0.19444, 0.69444, 0, 0, 0.44722],\n        \"9839\": [0.19444, 0.69444, 0, 0, 0.44722],\n        \"10216\": [0.25, 0.75, 0, 0, 0.44722],\n        \"10217\": [0.25, 0.75, 0, 0, 0.44722],\n        \"10815\": [0, 0.68611, 0, 0, 0.9],\n        \"10927\": [0.19667, 0.69667, 0, 0, 0.89444],\n        \"10928\": [0.19667, 0.69667, 0, 0, 0.89444]\n    },\n    \"Main-BoldItalic\": {\n        \"33\": [0, 0.69444, 0.11417, 0, 0.38611],\n        \"34\": [0, 0.69444, 0.07939, 0, 0.62055],\n        \"35\": [0.19444, 0.69444, 0.06833, 0, 0.94444],\n        \"37\": [0.05556, 0.75, 0.12861, 0, 0.94444],\n        \"38\": [0, 0.69444, 0.08528, 0, 0.88555],\n        \"39\": [0, 0.69444, 0.12945, 0, 0.35555],\n        \"40\": [0.25, 0.75, 0.15806, 0, 0.47333],\n        \"41\": [0.25, 0.75, 0.03306, 0, 0.47333],\n        \"42\": [0, 0.75, 0.14333, 0, 0.59111],\n        \"43\": [0.10333, 0.60333, 0.03306, 0, 0.88555],\n        \"44\": [0.19444, 0.14722, 0, 0, 0.35555],\n        \"45\": [0, 0.44444, 0.02611, 0, 0.41444],\n        \"46\": [0, 0.14722, 0, 0, 0.35555],\n        \"47\": [0.25, 0.75, 0.15806, 0, 0.59111],\n        \"48\": [0, 0.64444, 0.13167, 0, 0.59111],\n        \"49\": [0, 0.64444, 0.13167, 0, 0.59111],\n        \"50\": [0, 0.64444, 0.13167, 0, 0.59111],\n        \"51\": [0, 0.64444, 0.13167, 0, 0.59111],\n        \"52\": [0.19444, 0.64444, 0.13167, 0, 0.59111],\n        \"53\": [0, 0.64444, 0.13167, 0, 0.59111],\n        \"54\": [0, 0.64444, 0.13167, 0, 0.59111],\n        \"55\": [0.19444, 0.64444, 0.13167, 0, 0.59111],\n        \"56\": [0, 0.64444, 0.13167, 0, 0.59111],\n        \"57\": [0, 0.64444, 0.13167, 0, 0.59111],\n        \"58\": [0, 0.44444, 0.06695, 0, 0.35555],\n        \"59\": [0.19444, 0.44444, 0.06695, 0, 0.35555],\n        \"61\": [-0.10889, 0.39111, 0.06833, 0, 0.88555],\n        \"63\": [0, 0.69444, 0.11472, 0, 0.59111],\n        \"64\": [0, 0.69444, 0.09208, 0, 0.88555],\n        \"65\": [0, 0.68611, 0, 0, 0.86555],\n        \"66\": [0, 0.68611, 0.0992, 0, 0.81666],\n        \"67\": [0, 0.68611, 0.14208, 0, 0.82666],\n        \"68\": [0, 0.68611, 0.09062, 0, 0.87555],\n        \"69\": [0, 0.68611, 0.11431, 0, 0.75666],\n        \"70\": [0, 0.68611, 0.12903, 0, 0.72722],\n        \"71\": [0, 0.68611, 0.07347, 0, 0.89527],\n        \"72\": [0, 0.68611, 0.17208, 0, 0.8961],\n        \"73\": [0, 0.68611, 0.15681, 0, 0.47166],\n        \"74\": [0, 0.68611, 0.145, 0, 0.61055],\n        \"75\": [0, 0.68611, 0.14208, 0, 0.89499],\n        \"76\": [0, 0.68611, 0, 0, 0.69777],\n        \"77\": [0, 0.68611, 0.17208, 0, 1.07277],\n        \"78\": [0, 0.68611, 0.17208, 0, 0.8961],\n        \"79\": [0, 0.68611, 0.09062, 0, 0.85499],\n        \"80\": [0, 0.68611, 0.0992, 0, 0.78721],\n        \"81\": [0.19444, 0.68611, 0.09062, 0, 0.85499],\n        \"82\": [0, 0.68611, 0.02559, 0, 0.85944],\n        \"83\": [0, 0.68611, 0.11264, 0, 0.64999],\n        \"84\": [0, 0.68611, 0.12903, 0, 0.7961],\n        \"85\": [0, 0.68611, 0.17208, 0, 0.88083],\n        \"86\": [0, 0.68611, 0.18625, 0, 0.86555],\n        \"87\": [0, 0.68611, 0.18625, 0, 1.15999],\n        \"88\": [0, 0.68611, 0.15681, 0, 0.86555],\n        \"89\": [0, 0.68611, 0.19803, 0, 0.86555],\n        \"90\": [0, 0.68611, 0.14208, 0, 0.70888],\n        \"91\": [0.25, 0.75, 0.1875, 0, 0.35611],\n        \"93\": [0.25, 0.75, 0.09972, 0, 0.35611],\n        \"94\": [0, 0.69444, 0.06709, 0, 0.59111],\n        \"95\": [0.31, 0.13444, 0.09811, 0, 0.59111],\n        \"97\": [0, 0.44444, 0.09426, 0, 0.59111],\n        \"98\": [0, 0.69444, 0.07861, 0, 0.53222],\n        \"99\": [0, 0.44444, 0.05222, 0, 0.53222],\n        \"100\": [0, 0.69444, 0.10861, 0, 0.59111],\n        \"101\": [0, 0.44444, 0.085, 0, 0.53222],\n        \"102\": [0.19444, 0.69444, 0.21778, 0, 0.4],\n        \"103\": [0.19444, 0.44444, 0.105, 0, 0.53222],\n        \"104\": [0, 0.69444, 0.09426, 0, 0.59111],\n        \"105\": [0, 0.69326, 0.11387, 0, 0.35555],\n        \"106\": [0.19444, 0.69326, 0.1672, 0, 0.35555],\n        \"107\": [0, 0.69444, 0.11111, 0, 0.53222],\n        \"108\": [0, 0.69444, 0.10861, 0, 0.29666],\n        \"109\": [0, 0.44444, 0.09426, 0, 0.94444],\n        \"110\": [0, 0.44444, 0.09426, 0, 0.64999],\n        \"111\": [0, 0.44444, 0.07861, 0, 0.59111],\n        \"112\": [0.19444, 0.44444, 0.07861, 0, 0.59111],\n        \"113\": [0.19444, 0.44444, 0.105, 0, 0.53222],\n        \"114\": [0, 0.44444, 0.11111, 0, 0.50167],\n        \"115\": [0, 0.44444, 0.08167, 0, 0.48694],\n        \"116\": [0, 0.63492, 0.09639, 0, 0.385],\n        \"117\": [0, 0.44444, 0.09426, 0, 0.62055],\n        \"118\": [0, 0.44444, 0.11111, 0, 0.53222],\n        \"119\": [0, 0.44444, 0.11111, 0, 0.76777],\n        \"120\": [0, 0.44444, 0.12583, 0, 0.56055],\n        \"121\": [0.19444, 0.44444, 0.105, 0, 0.56166],\n        \"122\": [0, 0.44444, 0.13889, 0, 0.49055],\n        \"126\": [0.35, 0.34444, 0.11472, 0, 0.59111],\n        \"163\": [0, 0.69444, 0, 0, 0.86853],\n        \"168\": [0, 0.69444, 0.11473, 0, 0.59111],\n        \"176\": [0, 0.69444, 0, 0, 0.94888],\n        \"184\": [0.17014, 0, 0, 0, 0.53222],\n        \"198\": [0, 0.68611, 0.11431, 0, 1.02277],\n        \"216\": [0.04861, 0.73472, 0.09062, 0, 0.88555],\n        \"223\": [0.19444, 0.69444, 0.09736, 0, 0.665],\n        \"230\": [0, 0.44444, 0.085, 0, 0.82666],\n        \"248\": [0.09722, 0.54167, 0.09458, 0, 0.59111],\n        \"305\": [0, 0.44444, 0.09426, 0, 0.35555],\n        \"338\": [0, 0.68611, 0.11431, 0, 1.14054],\n        \"339\": [0, 0.44444, 0.085, 0, 0.82666],\n        \"567\": [0.19444, 0.44444, 0.04611, 0, 0.385],\n        \"710\": [0, 0.69444, 0.06709, 0, 0.59111],\n        \"711\": [0, 0.63194, 0.08271, 0, 0.59111],\n        \"713\": [0, 0.59444, 0.10444, 0, 0.59111],\n        \"714\": [0, 0.69444, 0.08528, 0, 0.59111],\n        \"715\": [0, 0.69444, 0, 0, 0.59111],\n        \"728\": [0, 0.69444, 0.10333, 0, 0.59111],\n        \"729\": [0, 0.69444, 0.12945, 0, 0.35555],\n        \"730\": [0, 0.69444, 0, 0, 0.94888],\n        \"732\": [0, 0.69444, 0.11472, 0, 0.59111],\n        \"733\": [0, 0.69444, 0.11472, 0, 0.59111],\n        \"915\": [0, 0.68611, 0.12903, 0, 0.69777],\n        \"916\": [0, 0.68611, 0, 0, 0.94444],\n        \"920\": [0, 0.68611, 0.09062, 0, 0.88555],\n        \"923\": [0, 0.68611, 0, 0, 0.80666],\n        \"926\": [0, 0.68611, 0.15092, 0, 0.76777],\n        \"928\": [0, 0.68611, 0.17208, 0, 0.8961],\n        \"931\": [0, 0.68611, 0.11431, 0, 0.82666],\n        \"933\": [0, 0.68611, 0.10778, 0, 0.88555],\n        \"934\": [0, 0.68611, 0.05632, 0, 0.82666],\n        \"936\": [0, 0.68611, 0.10778, 0, 0.88555],\n        \"937\": [0, 0.68611, 0.0992, 0, 0.82666],\n        \"8211\": [0, 0.44444, 0.09811, 0, 0.59111],\n        \"8212\": [0, 0.44444, 0.09811, 0, 1.18221],\n        \"8216\": [0, 0.69444, 0.12945, 0, 0.35555],\n        \"8217\": [0, 0.69444, 0.12945, 0, 0.35555],\n        \"8220\": [0, 0.69444, 0.16772, 0, 0.62055],\n        \"8221\": [0, 0.69444, 0.07939, 0, 0.62055]\n    },\n    \"Main-Italic\": {\n        \"33\": [0, 0.69444, 0.12417, 0, 0.30667],\n        \"34\": [0, 0.69444, 0.06961, 0, 0.51444],\n        \"35\": [0.19444, 0.69444, 0.06616, 0, 0.81777],\n        \"37\": [0.05556, 0.75, 0.13639, 0, 0.81777],\n        \"38\": [0, 0.69444, 0.09694, 0, 0.76666],\n        \"39\": [0, 0.69444, 0.12417, 0, 0.30667],\n        \"40\": [0.25, 0.75, 0.16194, 0, 0.40889],\n        \"41\": [0.25, 0.75, 0.03694, 0, 0.40889],\n        \"42\": [0, 0.75, 0.14917, 0, 0.51111],\n        \"43\": [0.05667, 0.56167, 0.03694, 0, 0.76666],\n        \"44\": [0.19444, 0.10556, 0, 0, 0.30667],\n        \"45\": [0, 0.43056, 0.02826, 0, 0.35778],\n        \"46\": [0, 0.10556, 0, 0, 0.30667],\n        \"47\": [0.25, 0.75, 0.16194, 0, 0.51111],\n        \"48\": [0, 0.64444, 0.13556, 0, 0.51111],\n        \"49\": [0, 0.64444, 0.13556, 0, 0.51111],\n        \"50\": [0, 0.64444, 0.13556, 0, 0.51111],\n        \"51\": [0, 0.64444, 0.13556, 0, 0.51111],\n        \"52\": [0.19444, 0.64444, 0.13556, 0, 0.51111],\n        \"53\": [0, 0.64444, 0.13556, 0, 0.51111],\n        \"54\": [0, 0.64444, 0.13556, 0, 0.51111],\n        \"55\": [0.19444, 0.64444, 0.13556, 0, 0.51111],\n        \"56\": [0, 0.64444, 0.13556, 0, 0.51111],\n        \"57\": [0, 0.64444, 0.13556, 0, 0.51111],\n        \"58\": [0, 0.43056, 0.0582, 0, 0.30667],\n        \"59\": [0.19444, 0.43056, 0.0582, 0, 0.30667],\n        \"61\": [-0.13313, 0.36687, 0.06616, 0, 0.76666],\n        \"63\": [0, 0.69444, 0.1225, 0, 0.51111],\n        \"64\": [0, 0.69444, 0.09597, 0, 0.76666],\n        \"65\": [0, 0.68333, 0, 0, 0.74333],\n        \"66\": [0, 0.68333, 0.10257, 0, 0.70389],\n        \"67\": [0, 0.68333, 0.14528, 0, 0.71555],\n        \"68\": [0, 0.68333, 0.09403, 0, 0.755],\n        \"69\": [0, 0.68333, 0.12028, 0, 0.67833],\n        \"70\": [0, 0.68333, 0.13305, 0, 0.65277],\n        \"71\": [0, 0.68333, 0.08722, 0, 0.77361],\n        \"72\": [0, 0.68333, 0.16389, 0, 0.74333],\n        \"73\": [0, 0.68333, 0.15806, 0, 0.38555],\n        \"74\": [0, 0.68333, 0.14028, 0, 0.525],\n        \"75\": [0, 0.68333, 0.14528, 0, 0.76888],\n        \"76\": [0, 0.68333, 0, 0, 0.62722],\n        \"77\": [0, 0.68333, 0.16389, 0, 0.89666],\n        \"78\": [0, 0.68333, 0.16389, 0, 0.74333],\n        \"79\": [0, 0.68333, 0.09403, 0, 0.76666],\n        \"80\": [0, 0.68333, 0.10257, 0, 0.67833],\n        \"81\": [0.19444, 0.68333, 0.09403, 0, 0.76666],\n        \"82\": [0, 0.68333, 0.03868, 0, 0.72944],\n        \"83\": [0, 0.68333, 0.11972, 0, 0.56222],\n        \"84\": [0, 0.68333, 0.13305, 0, 0.71555],\n        \"85\": [0, 0.68333, 0.16389, 0, 0.74333],\n        \"86\": [0, 0.68333, 0.18361, 0, 0.74333],\n        \"87\": [0, 0.68333, 0.18361, 0, 0.99888],\n        \"88\": [0, 0.68333, 0.15806, 0, 0.74333],\n        \"89\": [0, 0.68333, 0.19383, 0, 0.74333],\n        \"90\": [0, 0.68333, 0.14528, 0, 0.61333],\n        \"91\": [0.25, 0.75, 0.1875, 0, 0.30667],\n        \"93\": [0.25, 0.75, 0.10528, 0, 0.30667],\n        \"94\": [0, 0.69444, 0.06646, 0, 0.51111],\n        \"95\": [0.31, 0.12056, 0.09208, 0, 0.51111],\n        \"97\": [0, 0.43056, 0.07671, 0, 0.51111],\n        \"98\": [0, 0.69444, 0.06312, 0, 0.46],\n        \"99\": [0, 0.43056, 0.05653, 0, 0.46],\n        \"100\": [0, 0.69444, 0.10333, 0, 0.51111],\n        \"101\": [0, 0.43056, 0.07514, 0, 0.46],\n        \"102\": [0.19444, 0.69444, 0.21194, 0, 0.30667],\n        \"103\": [0.19444, 0.43056, 0.08847, 0, 0.46],\n        \"104\": [0, 0.69444, 0.07671, 0, 0.51111],\n        \"105\": [0, 0.65536, 0.1019, 0, 0.30667],\n        \"106\": [0.19444, 0.65536, 0.14467, 0, 0.30667],\n        \"107\": [0, 0.69444, 0.10764, 0, 0.46],\n        \"108\": [0, 0.69444, 0.10333, 0, 0.25555],\n        \"109\": [0, 0.43056, 0.07671, 0, 0.81777],\n        \"110\": [0, 0.43056, 0.07671, 0, 0.56222],\n        \"111\": [0, 0.43056, 0.06312, 0, 0.51111],\n        \"112\": [0.19444, 0.43056, 0.06312, 0, 0.51111],\n        \"113\": [0.19444, 0.43056, 0.08847, 0, 0.46],\n        \"114\": [0, 0.43056, 0.10764, 0, 0.42166],\n        \"115\": [0, 0.43056, 0.08208, 0, 0.40889],\n        \"116\": [0, 0.61508, 0.09486, 0, 0.33222],\n        \"117\": [0, 0.43056, 0.07671, 0, 0.53666],\n        \"118\": [0, 0.43056, 0.10764, 0, 0.46],\n        \"119\": [0, 0.43056, 0.10764, 0, 0.66444],\n        \"120\": [0, 0.43056, 0.12042, 0, 0.46389],\n        \"121\": [0.19444, 0.43056, 0.08847, 0, 0.48555],\n        \"122\": [0, 0.43056, 0.12292, 0, 0.40889],\n        \"126\": [0.35, 0.31786, 0.11585, 0, 0.51111],\n        \"163\": [0, 0.69444, 0, 0, 0.76909],\n        \"168\": [0, 0.66786, 0.10474, 0, 0.51111],\n        \"176\": [0, 0.69444, 0, 0, 0.83129],\n        \"184\": [0.17014, 0, 0, 0, 0.46],\n        \"198\": [0, 0.68333, 0.12028, 0, 0.88277],\n        \"216\": [0.04861, 0.73194, 0.09403, 0, 0.76666],\n        \"223\": [0.19444, 0.69444, 0.10514, 0, 0.53666],\n        \"230\": [0, 0.43056, 0.07514, 0, 0.71555],\n        \"248\": [0.09722, 0.52778, 0.09194, 0, 0.51111],\n        \"305\": [0, 0.43056, 0, 0.02778, 0.32246],\n        \"338\": [0, 0.68333, 0.12028, 0, 0.98499],\n        \"339\": [0, 0.43056, 0.07514, 0, 0.71555],\n        \"567\": [0.19444, 0.43056, 0, 0.08334, 0.38403],\n        \"710\": [0, 0.69444, 0.06646, 0, 0.51111],\n        \"711\": [0, 0.62847, 0.08295, 0, 0.51111],\n        \"713\": [0, 0.56167, 0.10333, 0, 0.51111],\n        \"714\": [0, 0.69444, 0.09694, 0, 0.51111],\n        \"715\": [0, 0.69444, 0, 0, 0.51111],\n        \"728\": [0, 0.69444, 0.10806, 0, 0.51111],\n        \"729\": [0, 0.66786, 0.11752, 0, 0.30667],\n        \"730\": [0, 0.69444, 0, 0, 0.83129],\n        \"732\": [0, 0.66786, 0.11585, 0, 0.51111],\n        \"733\": [0, 0.69444, 0.1225, 0, 0.51111],\n        \"915\": [0, 0.68333, 0.13305, 0, 0.62722],\n        \"916\": [0, 0.68333, 0, 0, 0.81777],\n        \"920\": [0, 0.68333, 0.09403, 0, 0.76666],\n        \"923\": [0, 0.68333, 0, 0, 0.69222],\n        \"926\": [0, 0.68333, 0.15294, 0, 0.66444],\n        \"928\": [0, 0.68333, 0.16389, 0, 0.74333],\n        \"931\": [0, 0.68333, 0.12028, 0, 0.71555],\n        \"933\": [0, 0.68333, 0.11111, 0, 0.76666],\n        \"934\": [0, 0.68333, 0.05986, 0, 0.71555],\n        \"936\": [0, 0.68333, 0.11111, 0, 0.76666],\n        \"937\": [0, 0.68333, 0.10257, 0, 0.71555],\n        \"8211\": [0, 0.43056, 0.09208, 0, 0.51111],\n        \"8212\": [0, 0.43056, 0.09208, 0, 1.02222],\n        \"8216\": [0, 0.69444, 0.12417, 0, 0.30667],\n        \"8217\": [0, 0.69444, 0.12417, 0, 0.30667],\n        \"8220\": [0, 0.69444, 0.1685, 0, 0.51444],\n        \"8221\": [0, 0.69444, 0.06961, 0, 0.51444],\n        \"8463\": [0, 0.68889, 0, 0, 0.54028]\n    },\n    \"Main-Regular\": {\n        \"32\": [0, 0, 0, 0, 0.25],\n        \"33\": [0, 0.69444, 0, 0, 0.27778],\n        \"34\": [0, 0.69444, 0, 0, 0.5],\n        \"35\": [0.19444, 0.69444, 0, 0, 0.83334],\n        \"36\": [0.05556, 0.75, 0, 0, 0.5],\n        \"37\": [0.05556, 0.75, 0, 0, 0.83334],\n        \"38\": [0, 0.69444, 0, 0, 0.77778],\n        \"39\": [0, 0.69444, 0, 0, 0.27778],\n        \"40\": [0.25, 0.75, 0, 0, 0.38889],\n        \"41\": [0.25, 0.75, 0, 0, 0.38889],\n        \"42\": [0, 0.75, 0, 0, 0.5],\n        \"43\": [0.08333, 0.58333, 0, 0, 0.77778],\n        \"44\": [0.19444, 0.10556, 0, 0, 0.27778],\n        \"45\": [0, 0.43056, 0, 0, 0.33333],\n        \"46\": [0, 0.10556, 0, 0, 0.27778],\n        \"47\": [0.25, 0.75, 0, 0, 0.5],\n        \"48\": [0, 0.64444, 0, 0, 0.5],\n        \"49\": [0, 0.64444, 0, 0, 0.5],\n        \"50\": [0, 0.64444, 0, 0, 0.5],\n        \"51\": [0, 0.64444, 0, 0, 0.5],\n        \"52\": [0, 0.64444, 0, 0, 0.5],\n        \"53\": [0, 0.64444, 0, 0, 0.5],\n        \"54\": [0, 0.64444, 0, 0, 0.5],\n        \"55\": [0, 0.64444, 0, 0, 0.5],\n        \"56\": [0, 0.64444, 0, 0, 0.5],\n        \"57\": [0, 0.64444, 0, 0, 0.5],\n        \"58\": [0, 0.43056, 0, 0, 0.27778],\n        \"59\": [0.19444, 0.43056, 0, 0, 0.27778],\n        \"60\": [0.0391, 0.5391, 0, 0, 0.77778],\n        \"61\": [-0.13313, 0.36687, 0, 0, 0.77778],\n        \"62\": [0.0391, 0.5391, 0, 0, 0.77778],\n        \"63\": [0, 0.69444, 0, 0, 0.47222],\n        \"64\": [0, 0.69444, 0, 0, 0.77778],\n        \"65\": [0, 0.68333, 0, 0, 0.75],\n        \"66\": [0, 0.68333, 0, 0, 0.70834],\n        \"67\": [0, 0.68333, 0, 0, 0.72222],\n        \"68\": [0, 0.68333, 0, 0, 0.76389],\n        \"69\": [0, 0.68333, 0, 0, 0.68056],\n        \"70\": [0, 0.68333, 0, 0, 0.65278],\n        \"71\": [0, 0.68333, 0, 0, 0.78472],\n        \"72\": [0, 0.68333, 0, 0, 0.75],\n        \"73\": [0, 0.68333, 0, 0, 0.36111],\n        \"74\": [0, 0.68333, 0, 0, 0.51389],\n        \"75\": [0, 0.68333, 0, 0, 0.77778],\n        \"76\": [0, 0.68333, 0, 0, 0.625],\n        \"77\": [0, 0.68333, 0, 0, 0.91667],\n        \"78\": [0, 0.68333, 0, 0, 0.75],\n        \"79\": [0, 0.68333, 0, 0, 0.77778],\n        \"80\": [0, 0.68333, 0, 0, 0.68056],\n        \"81\": [0.19444, 0.68333, 0, 0, 0.77778],\n        \"82\": [0, 0.68333, 0, 0, 0.73611],\n        \"83\": [0, 0.68333, 0, 0, 0.55556],\n        \"84\": [0, 0.68333, 0, 0, 0.72222],\n        \"85\": [0, 0.68333, 0, 0, 0.75],\n        \"86\": [0, 0.68333, 0.01389, 0, 0.75],\n        \"87\": [0, 0.68333, 0.01389, 0, 1.02778],\n        \"88\": [0, 0.68333, 0, 0, 0.75],\n        \"89\": [0, 0.68333, 0.025, 0, 0.75],\n        \"90\": [0, 0.68333, 0, 0, 0.61111],\n        \"91\": [0.25, 0.75, 0, 0, 0.27778],\n        \"92\": [0.25, 0.75, 0, 0, 0.5],\n        \"93\": [0.25, 0.75, 0, 0, 0.27778],\n        \"94\": [0, 0.69444, 0, 0, 0.5],\n        \"95\": [0.31, 0.12056, 0.02778, 0, 0.5],\n        \"97\": [0, 0.43056, 0, 0, 0.5],\n        \"98\": [0, 0.69444, 0, 0, 0.55556],\n        \"99\": [0, 0.43056, 0, 0, 0.44445],\n        \"100\": [0, 0.69444, 0, 0, 0.55556],\n        \"101\": [0, 0.43056, 0, 0, 0.44445],\n        \"102\": [0, 0.69444, 0.07778, 0, 0.30556],\n        \"103\": [0.19444, 0.43056, 0.01389, 0, 0.5],\n        \"104\": [0, 0.69444, 0, 0, 0.55556],\n        \"105\": [0, 0.66786, 0, 0, 0.27778],\n        \"106\": [0.19444, 0.66786, 0, 0, 0.30556],\n        \"107\": [0, 0.69444, 0, 0, 0.52778],\n        \"108\": [0, 0.69444, 0, 0, 0.27778],\n        \"109\": [0, 0.43056, 0, 0, 0.83334],\n        \"110\": [0, 0.43056, 0, 0, 0.55556],\n        \"111\": [0, 0.43056, 0, 0, 0.5],\n        \"112\": [0.19444, 0.43056, 0, 0, 0.55556],\n        \"113\": [0.19444, 0.43056, 0, 0, 0.52778],\n        \"114\": [0, 0.43056, 0, 0, 0.39167],\n        \"115\": [0, 0.43056, 0, 0, 0.39445],\n        \"116\": [0, 0.61508, 0, 0, 0.38889],\n        \"117\": [0, 0.43056, 0, 0, 0.55556],\n        \"118\": [0, 0.43056, 0.01389, 0, 0.52778],\n        \"119\": [0, 0.43056, 0.01389, 0, 0.72222],\n        \"120\": [0, 0.43056, 0, 0, 0.52778],\n        \"121\": [0.19444, 0.43056, 0.01389, 0, 0.52778],\n        \"122\": [0, 0.43056, 0, 0, 0.44445],\n        \"123\": [0.25, 0.75, 0, 0, 0.5],\n        \"124\": [0.25, 0.75, 0, 0, 0.27778],\n        \"125\": [0.25, 0.75, 0, 0, 0.5],\n        \"126\": [0.35, 0.31786, 0, 0, 0.5],\n        \"160\": [0, 0, 0, 0, 0.25],\n        \"167\": [0.19444, 0.69444, 0, 0, 0.44445],\n        \"168\": [0, 0.66786, 0, 0, 0.5],\n        \"172\": [0, 0.43056, 0, 0, 0.66667],\n        \"176\": [0, 0.69444, 0, 0, 0.75],\n        \"177\": [0.08333, 0.58333, 0, 0, 0.77778],\n        \"182\": [0.19444, 0.69444, 0, 0, 0.61111],\n        \"184\": [0.17014, 0, 0, 0, 0.44445],\n        \"198\": [0, 0.68333, 0, 0, 0.90278],\n        \"215\": [0.08333, 0.58333, 0, 0, 0.77778],\n        \"216\": [0.04861, 0.73194, 0, 0, 0.77778],\n        \"223\": [0, 0.69444, 0, 0, 0.5],\n        \"230\": [0, 0.43056, 0, 0, 0.72222],\n        \"247\": [0.08333, 0.58333, 0, 0, 0.77778],\n        \"248\": [0.09722, 0.52778, 0, 0, 0.5],\n        \"305\": [0, 0.43056, 0, 0, 0.27778],\n        \"338\": [0, 0.68333, 0, 0, 1.01389],\n        \"339\": [0, 0.43056, 0, 0, 0.77778],\n        \"567\": [0.19444, 0.43056, 0, 0, 0.30556],\n        \"710\": [0, 0.69444, 0, 0, 0.5],\n        \"711\": [0, 0.62847, 0, 0, 0.5],\n        \"713\": [0, 0.56778, 0, 0, 0.5],\n        \"714\": [0, 0.69444, 0, 0, 0.5],\n        \"715\": [0, 0.69444, 0, 0, 0.5],\n        \"728\": [0, 0.69444, 0, 0, 0.5],\n        \"729\": [0, 0.66786, 0, 0, 0.27778],\n        \"730\": [0, 0.69444, 0, 0, 0.75],\n        \"732\": [0, 0.66786, 0, 0, 0.5],\n        \"733\": [0, 0.69444, 0, 0, 0.5],\n        \"824\": [0.19444, 0.69444, 0, 0, 0],\n        \"915\": [0, 0.68333, 0, 0, 0.625],\n        \"916\": [0, 0.68333, 0, 0, 0.83334],\n        \"920\": [0, 0.68333, 0, 0, 0.77778],\n        \"923\": [0, 0.68333, 0, 0, 0.69445],\n        \"926\": [0, 0.68333, 0, 0, 0.66667],\n        \"928\": [0, 0.68333, 0, 0, 0.75],\n        \"931\": [0, 0.68333, 0, 0, 0.72222],\n        \"933\": [0, 0.68333, 0, 0, 0.77778],\n        \"934\": [0, 0.68333, 0, 0, 0.72222],\n        \"936\": [0, 0.68333, 0, 0, 0.77778],\n        \"937\": [0, 0.68333, 0, 0, 0.72222],\n        \"8211\": [0, 0.43056, 0.02778, 0, 0.5],\n        \"8212\": [0, 0.43056, 0.02778, 0, 1.0],\n        \"8216\": [0, 0.69444, 0, 0, 0.27778],\n        \"8217\": [0, 0.69444, 0, 0, 0.27778],\n        \"8220\": [0, 0.69444, 0, 0, 0.5],\n        \"8221\": [0, 0.69444, 0, 0, 0.5],\n        \"8224\": [0.19444, 0.69444, 0, 0, 0.44445],\n        \"8225\": [0.19444, 0.69444, 0, 0, 0.44445],\n        \"8230\": [0, 0.12, 0, 0, 1.172],\n        \"8242\": [0, 0.55556, 0, 0, 0.275],\n        \"8407\": [0, 0.71444, 0.15382, 0, 0.5],\n        \"8463\": [0, 0.68889, 0, 0, 0.54028],\n        \"8465\": [0, 0.69444, 0, 0, 0.72222],\n        \"8467\": [0, 0.69444, 0, 0.11111, 0.41667],\n        \"8472\": [0.19444, 0.43056, 0, 0.11111, 0.63646],\n        \"8476\": [0, 0.69444, 0, 0, 0.72222],\n        \"8501\": [0, 0.69444, 0, 0, 0.61111],\n        \"8592\": [-0.13313, 0.36687, 0, 0, 1.0],\n        \"8593\": [0.19444, 0.69444, 0, 0, 0.5],\n        \"8594\": [-0.13313, 0.36687, 0, 0, 1.0],\n        \"8595\": [0.19444, 0.69444, 0, 0, 0.5],\n        \"8596\": [-0.13313, 0.36687, 0, 0, 1.0],\n        \"8597\": [0.25, 0.75, 0, 0, 0.5],\n        \"8598\": [0.19444, 0.69444, 0, 0, 1.0],\n        \"8599\": [0.19444, 0.69444, 0, 0, 1.0],\n        \"8600\": [0.19444, 0.69444, 0, 0, 1.0],\n        \"8601\": [0.19444, 0.69444, 0, 0, 1.0],\n        \"8614\": [0.011, 0.511, 0, 0, 1.0],\n        \"8617\": [0.011, 0.511, 0, 0, 1.126],\n        \"8618\": [0.011, 0.511, 0, 0, 1.126],\n        \"8636\": [-0.13313, 0.36687, 0, 0, 1.0],\n        \"8637\": [-0.13313, 0.36687, 0, 0, 1.0],\n        \"8640\": [-0.13313, 0.36687, 0, 0, 1.0],\n        \"8641\": [-0.13313, 0.36687, 0, 0, 1.0],\n        \"8652\": [0.011, 0.671, 0, 0, 1.0],\n        \"8656\": [-0.13313, 0.36687, 0, 0, 1.0],\n        \"8657\": [0.19444, 0.69444, 0, 0, 0.61111],\n        \"8658\": [-0.13313, 0.36687, 0, 0, 1.0],\n        \"8659\": [0.19444, 0.69444, 0, 0, 0.61111],\n        \"8660\": [-0.13313, 0.36687, 0, 0, 1.0],\n        \"8661\": [0.25, 0.75, 0, 0, 0.61111],\n        \"8704\": [0, 0.69444, 0, 0, 0.55556],\n        \"8706\": [0, 0.69444, 0.05556, 0.08334, 0.5309],\n        \"8707\": [0, 0.69444, 0, 0, 0.55556],\n        \"8709\": [0.05556, 0.75, 0, 0, 0.5],\n        \"8711\": [0, 0.68333, 0, 0, 0.83334],\n        \"8712\": [0.0391, 0.5391, 0, 0, 0.66667],\n        \"8715\": [0.0391, 0.5391, 0, 0, 0.66667],\n        \"8722\": [0.08333, 0.58333, 0, 0, 0.77778],\n        \"8723\": [0.08333, 0.58333, 0, 0, 0.77778],\n        \"8725\": [0.25, 0.75, 0, 0, 0.5],\n        \"8726\": [0.25, 0.75, 0, 0, 0.5],\n        \"8727\": [-0.03472, 0.46528, 0, 0, 0.5],\n        \"8728\": [-0.05555, 0.44445, 0, 0, 0.5],\n        \"8729\": [-0.05555, 0.44445, 0, 0, 0.5],\n        \"8730\": [0.2, 0.8, 0, 0, 0.83334],\n        \"8733\": [0, 0.43056, 0, 0, 0.77778],\n        \"8734\": [0, 0.43056, 0, 0, 1.0],\n        \"8736\": [0, 0.69224, 0, 0, 0.72222],\n        \"8739\": [0.25, 0.75, 0, 0, 0.27778],\n        \"8741\": [0.25, 0.75, 0, 0, 0.5],\n        \"8743\": [0, 0.55556, 0, 0, 0.66667],\n        \"8744\": [0, 0.55556, 0, 0, 0.66667],\n        \"8745\": [0, 0.55556, 0, 0, 0.66667],\n        \"8746\": [0, 0.55556, 0, 0, 0.66667],\n        \"8747\": [0.19444, 0.69444, 0.11111, 0, 0.41667],\n        \"8764\": [-0.13313, 0.36687, 0, 0, 0.77778],\n        \"8768\": [0.19444, 0.69444, 0, 0, 0.27778],\n        \"8771\": [-0.03625, 0.46375, 0, 0, 0.77778],\n        \"8773\": [-0.022, 0.589, 0, 0, 1.0],\n        \"8776\": [-0.01688, 0.48312, 0, 0, 0.77778],\n        \"8781\": [-0.03625, 0.46375, 0, 0, 0.77778],\n        \"8784\": [-0.133, 0.67, 0, 0, 0.778],\n        \"8800\": [0.215, 0.716, 0, 0, 0.778],\n        \"8801\": [-0.03625, 0.46375, 0, 0, 0.77778],\n        \"8804\": [0.13597, 0.63597, 0, 0, 0.77778],\n        \"8805\": [0.13597, 0.63597, 0, 0, 0.77778],\n        \"8810\": [0.0391, 0.5391, 0, 0, 1.0],\n        \"8811\": [0.0391, 0.5391, 0, 0, 1.0],\n        \"8826\": [0.0391, 0.5391, 0, 0, 0.77778],\n        \"8827\": [0.0391, 0.5391, 0, 0, 0.77778],\n        \"8834\": [0.0391, 0.5391, 0, 0, 0.77778],\n        \"8835\": [0.0391, 0.5391, 0, 0, 0.77778],\n        \"8838\": [0.13597, 0.63597, 0, 0, 0.77778],\n        \"8839\": [0.13597, 0.63597, 0, 0, 0.77778],\n        \"8846\": [0, 0.55556, 0, 0, 0.66667],\n        \"8849\": [0.13597, 0.63597, 0, 0, 0.77778],\n        \"8850\": [0.13597, 0.63597, 0, 0, 0.77778],\n        \"8851\": [0, 0.55556, 0, 0, 0.66667],\n        \"8852\": [0, 0.55556, 0, 0, 0.66667],\n        \"8853\": [0.08333, 0.58333, 0, 0, 0.77778],\n        \"8854\": [0.08333, 0.58333, 0, 0, 0.77778],\n        \"8855\": [0.08333, 0.58333, 0, 0, 0.77778],\n        \"8856\": [0.08333, 0.58333, 0, 0, 0.77778],\n        \"8857\": [0.08333, 0.58333, 0, 0, 0.77778],\n        \"8866\": [0, 0.69444, 0, 0, 0.61111],\n        \"8867\": [0, 0.69444, 0, 0, 0.61111],\n        \"8868\": [0, 0.69444, 0, 0, 0.77778],\n        \"8869\": [0, 0.69444, 0, 0, 0.77778],\n        \"8872\": [0.249, 0.75, 0, 0, 0.867],\n        \"8900\": [-0.05555, 0.44445, 0, 0, 0.5],\n        \"8901\": [-0.05555, 0.44445, 0, 0, 0.27778],\n        \"8902\": [-0.03472, 0.46528, 0, 0, 0.5],\n        \"8904\": [0.005, 0.505, 0, 0, 0.9],\n        \"8942\": [0.03, 0.9, 0, 0, 0.278],\n        \"8943\": [-0.19, 0.31, 0, 0, 1.172],\n        \"8945\": [-0.1, 0.82, 0, 0, 1.282],\n        \"8968\": [0.25, 0.75, 0, 0, 0.44445],\n        \"8969\": [0.25, 0.75, 0, 0, 0.44445],\n        \"8970\": [0.25, 0.75, 0, 0, 0.44445],\n        \"8971\": [0.25, 0.75, 0, 0, 0.44445],\n        \"8994\": [-0.14236, 0.35764, 0, 0, 1.0],\n        \"8995\": [-0.14236, 0.35764, 0, 0, 1.0],\n        \"9136\": [0.244, 0.744, 0, 0, 0.412],\n        \"9137\": [0.244, 0.744, 0, 0, 0.412],\n        \"9651\": [0.19444, 0.69444, 0, 0, 0.88889],\n        \"9657\": [-0.03472, 0.46528, 0, 0, 0.5],\n        \"9661\": [0.19444, 0.69444, 0, 0, 0.88889],\n        \"9667\": [-0.03472, 0.46528, 0, 0, 0.5],\n        \"9711\": [0.19444, 0.69444, 0, 0, 1.0],\n        \"9824\": [0.12963, 0.69444, 0, 0, 0.77778],\n        \"9825\": [0.12963, 0.69444, 0, 0, 0.77778],\n        \"9826\": [0.12963, 0.69444, 0, 0, 0.77778],\n        \"9827\": [0.12963, 0.69444, 0, 0, 0.77778],\n        \"9837\": [0, 0.75, 0, 0, 0.38889],\n        \"9838\": [0.19444, 0.69444, 0, 0, 0.38889],\n        \"9839\": [0.19444, 0.69444, 0, 0, 0.38889],\n        \"10216\": [0.25, 0.75, 0, 0, 0.38889],\n        \"10217\": [0.25, 0.75, 0, 0, 0.38889],\n        \"10222\": [0.244, 0.744, 0, 0, 0.412],\n        \"10223\": [0.244, 0.744, 0, 0, 0.412],\n        \"10229\": [0.011, 0.511, 0, 0, 1.609],\n        \"10230\": [0.011, 0.511, 0, 0, 1.638],\n        \"10231\": [0.011, 0.511, 0, 0, 1.859],\n        \"10232\": [0.024, 0.525, 0, 0, 1.609],\n        \"10233\": [0.024, 0.525, 0, 0, 1.638],\n        \"10234\": [0.024, 0.525, 0, 0, 1.858],\n        \"10236\": [0.011, 0.511, 0, 0, 1.638],\n        \"10815\": [0, 0.68333, 0, 0, 0.75],\n        \"10927\": [0.13597, 0.63597, 0, 0, 0.77778],\n        \"10928\": [0.13597, 0.63597, 0, 0, 0.77778]\n    },\n    \"Math-BoldItalic\": {\n        \"47\": [0.19444, 0.69444, 0, 0, 0],\n        \"65\": [0, 0.68611, 0, 0, 0.86944],\n        \"66\": [0, 0.68611, 0.04835, 0, 0.8664],\n        \"67\": [0, 0.68611, 0.06979, 0, 0.81694],\n        \"68\": [0, 0.68611, 0.03194, 0, 0.93812],\n        \"69\": [0, 0.68611, 0.05451, 0, 0.81007],\n        \"70\": [0, 0.68611, 0.15972, 0, 0.68889],\n        \"71\": [0, 0.68611, 0, 0, 0.88673],\n        \"72\": [0, 0.68611, 0.08229, 0, 0.98229],\n        \"73\": [0, 0.68611, 0.07778, 0, 0.51111],\n        \"74\": [0, 0.68611, 0.10069, 0, 0.63125],\n        \"75\": [0, 0.68611, 0.06979, 0, 0.97118],\n        \"76\": [0, 0.68611, 0, 0, 0.75555],\n        \"77\": [0, 0.68611, 0.11424, 0, 1.14201],\n        \"78\": [0, 0.68611, 0.11424, 0, 0.95034],\n        \"79\": [0, 0.68611, 0.03194, 0, 0.83666],\n        \"80\": [0, 0.68611, 0.15972, 0, 0.72309],\n        \"81\": [0.19444, 0.68611, 0, 0, 0.86861],\n        \"82\": [0, 0.68611, 0.00421, 0, 0.87235],\n        \"83\": [0, 0.68611, 0.05382, 0, 0.69271],\n        \"84\": [0, 0.68611, 0.15972, 0, 0.63663],\n        \"85\": [0, 0.68611, 0.11424, 0, 0.80027],\n        \"86\": [0, 0.68611, 0.25555, 0, 0.67778],\n        \"87\": [0, 0.68611, 0.15972, 0, 1.09305],\n        \"88\": [0, 0.68611, 0.07778, 0, 0.94722],\n        \"89\": [0, 0.68611, 0.25555, 0, 0.67458],\n        \"90\": [0, 0.68611, 0.06979, 0, 0.77257],\n        \"97\": [0, 0.44444, 0, 0, 0.63287],\n        \"98\": [0, 0.69444, 0, 0, 0.52083],\n        \"99\": [0, 0.44444, 0, 0, 0.51342],\n        \"100\": [0, 0.69444, 0, 0, 0.60972],\n        \"101\": [0, 0.44444, 0, 0, 0.55361],\n        \"102\": [0.19444, 0.69444, 0.11042, 0, 0.56806],\n        \"103\": [0.19444, 0.44444, 0.03704, 0, 0.5449],\n        \"104\": [0, 0.69444, 0, 0, 0.66759],\n        \"105\": [0, 0.69326, 0, 0, 0.4048],\n        \"106\": [0.19444, 0.69326, 0.0622, 0, 0.47083],\n        \"107\": [0, 0.69444, 0.01852, 0, 0.6037],\n        \"108\": [0, 0.69444, 0.0088, 0, 0.34815],\n        \"109\": [0, 0.44444, 0, 0, 1.0324],\n        \"110\": [0, 0.44444, 0, 0, 0.71296],\n        \"111\": [0, 0.44444, 0, 0, 0.58472],\n        \"112\": [0.19444, 0.44444, 0, 0, 0.60092],\n        \"113\": [0.19444, 0.44444, 0.03704, 0, 0.54213],\n        \"114\": [0, 0.44444, 0.03194, 0, 0.5287],\n        \"115\": [0, 0.44444, 0, 0, 0.53125],\n        \"116\": [0, 0.63492, 0, 0, 0.41528],\n        \"117\": [0, 0.44444, 0, 0, 0.68102],\n        \"118\": [0, 0.44444, 0.03704, 0, 0.56666],\n        \"119\": [0, 0.44444, 0.02778, 0, 0.83148],\n        \"120\": [0, 0.44444, 0, 0, 0.65903],\n        \"121\": [0.19444, 0.44444, 0.03704, 0, 0.59028],\n        \"122\": [0, 0.44444, 0.04213, 0, 0.55509],\n        \"915\": [0, 0.68611, 0.15972, 0, 0.65694],\n        \"916\": [0, 0.68611, 0, 0, 0.95833],\n        \"920\": [0, 0.68611, 0.03194, 0, 0.86722],\n        \"923\": [0, 0.68611, 0, 0, 0.80555],\n        \"926\": [0, 0.68611, 0.07458, 0, 0.84125],\n        \"928\": [0, 0.68611, 0.08229, 0, 0.98229],\n        \"931\": [0, 0.68611, 0.05451, 0, 0.88507],\n        \"933\": [0, 0.68611, 0.15972, 0, 0.67083],\n        \"934\": [0, 0.68611, 0, 0, 0.76666],\n        \"936\": [0, 0.68611, 0.11653, 0, 0.71402],\n        \"937\": [0, 0.68611, 0.04835, 0, 0.8789],\n        \"945\": [0, 0.44444, 0, 0, 0.76064],\n        \"946\": [0.19444, 0.69444, 0.03403, 0, 0.65972],\n        \"947\": [0.19444, 0.44444, 0.06389, 0, 0.59003],\n        \"948\": [0, 0.69444, 0.03819, 0, 0.52222],\n        \"949\": [0, 0.44444, 0, 0, 0.52882],\n        \"950\": [0.19444, 0.69444, 0.06215, 0, 0.50833],\n        \"951\": [0.19444, 0.44444, 0.03704, 0, 0.6],\n        \"952\": [0, 0.69444, 0.03194, 0, 0.5618],\n        \"953\": [0, 0.44444, 0, 0, 0.41204],\n        \"954\": [0, 0.44444, 0, 0, 0.66759],\n        \"955\": [0, 0.69444, 0, 0, 0.67083],\n        \"956\": [0.19444, 0.44444, 0, 0, 0.70787],\n        \"957\": [0, 0.44444, 0.06898, 0, 0.57685],\n        \"958\": [0.19444, 0.69444, 0.03021, 0, 0.50833],\n        \"959\": [0, 0.44444, 0, 0, 0.58472],\n        \"960\": [0, 0.44444, 0.03704, 0, 0.68241],\n        \"961\": [0.19444, 0.44444, 0, 0, 0.6118],\n        \"962\": [0.09722, 0.44444, 0.07917, 0, 0.42361],\n        \"963\": [0, 0.44444, 0.03704, 0, 0.68588],\n        \"964\": [0, 0.44444, 0.13472, 0, 0.52083],\n        \"965\": [0, 0.44444, 0.03704, 0, 0.63055],\n        \"966\": [0.19444, 0.44444, 0, 0, 0.74722],\n        \"967\": [0.19444, 0.44444, 0, 0, 0.71805],\n        \"968\": [0.19444, 0.69444, 0.03704, 0, 0.75833],\n        \"969\": [0, 0.44444, 0.03704, 0, 0.71782],\n        \"977\": [0, 0.69444, 0, 0, 0.69155],\n        \"981\": [0.19444, 0.69444, 0, 0, 0.7125],\n        \"982\": [0, 0.44444, 0.03194, 0, 0.975],\n        \"1009\": [0.19444, 0.44444, 0, 0, 0.6118],\n        \"1013\": [0, 0.44444, 0, 0, 0.48333]\n    },\n    \"Math-Italic\": {\n        \"47\": [0.19444, 0.69444, 0, 0, 0],\n        \"65\": [0, 0.68333, 0, 0.13889, 0.75],\n        \"66\": [0, 0.68333, 0.05017, 0.08334, 0.75851],\n        \"67\": [0, 0.68333, 0.07153, 0.08334, 0.71472],\n        \"68\": [0, 0.68333, 0.02778, 0.05556, 0.82792],\n        \"69\": [0, 0.68333, 0.05764, 0.08334, 0.7382],\n        \"70\": [0, 0.68333, 0.13889, 0.08334, 0.64306],\n        \"71\": [0, 0.68333, 0, 0.08334, 0.78625],\n        \"72\": [0, 0.68333, 0.08125, 0.05556, 0.83125],\n        \"73\": [0, 0.68333, 0.07847, 0.11111, 0.43958],\n        \"74\": [0, 0.68333, 0.09618, 0.16667, 0.55451],\n        \"75\": [0, 0.68333, 0.07153, 0.05556, 0.84931],\n        \"76\": [0, 0.68333, 0, 0.02778, 0.68056],\n        \"77\": [0, 0.68333, 0.10903, 0.08334, 0.97014],\n        \"78\": [0, 0.68333, 0.10903, 0.08334, 0.80347],\n        \"79\": [0, 0.68333, 0.02778, 0.08334, 0.76278],\n        \"80\": [0, 0.68333, 0.13889, 0.08334, 0.64201],\n        \"81\": [0.19444, 0.68333, 0, 0.08334, 0.79056],\n        \"82\": [0, 0.68333, 0.00773, 0.08334, 0.75929],\n        \"83\": [0, 0.68333, 0.05764, 0.08334, 0.6132],\n        \"84\": [0, 0.68333, 0.13889, 0.08334, 0.58438],\n        \"85\": [0, 0.68333, 0.10903, 0.02778, 0.68278],\n        \"86\": [0, 0.68333, 0.22222, 0, 0.58333],\n        \"87\": [0, 0.68333, 0.13889, 0, 0.94445],\n        \"88\": [0, 0.68333, 0.07847, 0.08334, 0.82847],\n        \"89\": [0, 0.68333, 0.22222, 0, 0.58056],\n        \"90\": [0, 0.68333, 0.07153, 0.08334, 0.68264],\n        \"97\": [0, 0.43056, 0, 0, 0.52859],\n        \"98\": [0, 0.69444, 0, 0, 0.42917],\n        \"99\": [0, 0.43056, 0, 0.05556, 0.43276],\n        \"100\": [0, 0.69444, 0, 0.16667, 0.52049],\n        \"101\": [0, 0.43056, 0, 0.05556, 0.46563],\n        \"102\": [0.19444, 0.69444, 0.10764, 0.16667, 0.48959],\n        \"103\": [0.19444, 0.43056, 0.03588, 0.02778, 0.47697],\n        \"104\": [0, 0.69444, 0, 0, 0.57616],\n        \"105\": [0, 0.65952, 0, 0, 0.34451],\n        \"106\": [0.19444, 0.65952, 0.05724, 0, 0.41181],\n        \"107\": [0, 0.69444, 0.03148, 0, 0.5206],\n        \"108\": [0, 0.69444, 0.01968, 0.08334, 0.29838],\n        \"109\": [0, 0.43056, 0, 0, 0.87801],\n        \"110\": [0, 0.43056, 0, 0, 0.60023],\n        \"111\": [0, 0.43056, 0, 0.05556, 0.48472],\n        \"112\": [0.19444, 0.43056, 0, 0.08334, 0.50313],\n        \"113\": [0.19444, 0.43056, 0.03588, 0.08334, 0.44641],\n        \"114\": [0, 0.43056, 0.02778, 0.05556, 0.45116],\n        \"115\": [0, 0.43056, 0, 0.05556, 0.46875],\n        \"116\": [0, 0.61508, 0, 0.08334, 0.36111],\n        \"117\": [0, 0.43056, 0, 0.02778, 0.57246],\n        \"118\": [0, 0.43056, 0.03588, 0.02778, 0.48472],\n        \"119\": [0, 0.43056, 0.02691, 0.08334, 0.71592],\n        \"120\": [0, 0.43056, 0, 0.02778, 0.57153],\n        \"121\": [0.19444, 0.43056, 0.03588, 0.05556, 0.49028],\n        \"122\": [0, 0.43056, 0.04398, 0.05556, 0.46505],\n        \"915\": [0, 0.68333, 0.13889, 0.08334, 0.61528],\n        \"916\": [0, 0.68333, 0, 0.16667, 0.83334],\n        \"920\": [0, 0.68333, 0.02778, 0.08334, 0.76278],\n        \"923\": [0, 0.68333, 0, 0.16667, 0.69445],\n        \"926\": [0, 0.68333, 0.07569, 0.08334, 0.74236],\n        \"928\": [0, 0.68333, 0.08125, 0.05556, 0.83125],\n        \"931\": [0, 0.68333, 0.05764, 0.08334, 0.77986],\n        \"933\": [0, 0.68333, 0.13889, 0.05556, 0.58333],\n        \"934\": [0, 0.68333, 0, 0.08334, 0.66667],\n        \"936\": [0, 0.68333, 0.11, 0.05556, 0.61222],\n        \"937\": [0, 0.68333, 0.05017, 0.08334, 0.7724],\n        \"945\": [0, 0.43056, 0.0037, 0.02778, 0.6397],\n        \"946\": [0.19444, 0.69444, 0.05278, 0.08334, 0.56563],\n        \"947\": [0.19444, 0.43056, 0.05556, 0, 0.51773],\n        \"948\": [0, 0.69444, 0.03785, 0.05556, 0.44444],\n        \"949\": [0, 0.43056, 0, 0.08334, 0.46632],\n        \"950\": [0.19444, 0.69444, 0.07378, 0.08334, 0.4375],\n        \"951\": [0.19444, 0.43056, 0.03588, 0.05556, 0.49653],\n        \"952\": [0, 0.69444, 0.02778, 0.08334, 0.46944],\n        \"953\": [0, 0.43056, 0, 0.05556, 0.35394],\n        \"954\": [0, 0.43056, 0, 0, 0.57616],\n        \"955\": [0, 0.69444, 0, 0, 0.58334],\n        \"956\": [0.19444, 0.43056, 0, 0.02778, 0.60255],\n        \"957\": [0, 0.43056, 0.06366, 0.02778, 0.49398],\n        \"958\": [0.19444, 0.69444, 0.04601, 0.11111, 0.4375],\n        \"959\": [0, 0.43056, 0, 0.05556, 0.48472],\n        \"960\": [0, 0.43056, 0.03588, 0, 0.57003],\n        \"961\": [0.19444, 0.43056, 0, 0.08334, 0.51702],\n        \"962\": [0.09722, 0.43056, 0.07986, 0.08334, 0.36285],\n        \"963\": [0, 0.43056, 0.03588, 0, 0.57141],\n        \"964\": [0, 0.43056, 0.1132, 0.02778, 0.43715],\n        \"965\": [0, 0.43056, 0.03588, 0.02778, 0.54028],\n        \"966\": [0.19444, 0.43056, 0, 0.08334, 0.65417],\n        \"967\": [0.19444, 0.43056, 0, 0.05556, 0.62569],\n        \"968\": [0.19444, 0.69444, 0.03588, 0.11111, 0.65139],\n        \"969\": [0, 0.43056, 0.03588, 0, 0.62245],\n        \"977\": [0, 0.69444, 0, 0.08334, 0.59144],\n        \"981\": [0.19444, 0.69444, 0, 0.08334, 0.59583],\n        \"982\": [0, 0.43056, 0.02778, 0, 0.82813],\n        \"1009\": [0.19444, 0.43056, 0, 0.08334, 0.51702],\n        \"1013\": [0, 0.43056, 0, 0.05556, 0.4059]\n    },\n    \"Math-Regular\": {\n        \"65\": [0, 0.68333, 0, 0.13889, 0.75],\n        \"66\": [0, 0.68333, 0.05017, 0.08334, 0.75851],\n        \"67\": [0, 0.68333, 0.07153, 0.08334, 0.71472],\n        \"68\": [0, 0.68333, 0.02778, 0.05556, 0.82792],\n        \"69\": [0, 0.68333, 0.05764, 0.08334, 0.7382],\n        \"70\": [0, 0.68333, 0.13889, 0.08334, 0.64306],\n        \"71\": [0, 0.68333, 0, 0.08334, 0.78625],\n        \"72\": [0, 0.68333, 0.08125, 0.05556, 0.83125],\n        \"73\": [0, 0.68333, 0.07847, 0.11111, 0.43958],\n        \"74\": [0, 0.68333, 0.09618, 0.16667, 0.55451],\n        \"75\": [0, 0.68333, 0.07153, 0.05556, 0.84931],\n        \"76\": [0, 0.68333, 0, 0.02778, 0.68056],\n        \"77\": [0, 0.68333, 0.10903, 0.08334, 0.97014],\n        \"78\": [0, 0.68333, 0.10903, 0.08334, 0.80347],\n        \"79\": [0, 0.68333, 0.02778, 0.08334, 0.76278],\n        \"80\": [0, 0.68333, 0.13889, 0.08334, 0.64201],\n        \"81\": [0.19444, 0.68333, 0, 0.08334, 0.79056],\n        \"82\": [0, 0.68333, 0.00773, 0.08334, 0.75929],\n        \"83\": [0, 0.68333, 0.05764, 0.08334, 0.6132],\n        \"84\": [0, 0.68333, 0.13889, 0.08334, 0.58438],\n        \"85\": [0, 0.68333, 0.10903, 0.02778, 0.68278],\n        \"86\": [0, 0.68333, 0.22222, 0, 0.58333],\n        \"87\": [0, 0.68333, 0.13889, 0, 0.94445],\n        \"88\": [0, 0.68333, 0.07847, 0.08334, 0.82847],\n        \"89\": [0, 0.68333, 0.22222, 0, 0.58056],\n        \"90\": [0, 0.68333, 0.07153, 0.08334, 0.68264],\n        \"97\": [0, 0.43056, 0, 0, 0.52859],\n        \"98\": [0, 0.69444, 0, 0, 0.42917],\n        \"99\": [0, 0.43056, 0, 0.05556, 0.43276],\n        \"100\": [0, 0.69444, 0, 0.16667, 0.52049],\n        \"101\": [0, 0.43056, 0, 0.05556, 0.46563],\n        \"102\": [0.19444, 0.69444, 0.10764, 0.16667, 0.48959],\n        \"103\": [0.19444, 0.43056, 0.03588, 0.02778, 0.47697],\n        \"104\": [0, 0.69444, 0, 0, 0.57616],\n        \"105\": [0, 0.65952, 0, 0, 0.34451],\n        \"106\": [0.19444, 0.65952, 0.05724, 0, 0.41181],\n        \"107\": [0, 0.69444, 0.03148, 0, 0.5206],\n        \"108\": [0, 0.69444, 0.01968, 0.08334, 0.29838],\n        \"109\": [0, 0.43056, 0, 0, 0.87801],\n        \"110\": [0, 0.43056, 0, 0, 0.60023],\n        \"111\": [0, 0.43056, 0, 0.05556, 0.48472],\n        \"112\": [0.19444, 0.43056, 0, 0.08334, 0.50313],\n        \"113\": [0.19444, 0.43056, 0.03588, 0.08334, 0.44641],\n        \"114\": [0, 0.43056, 0.02778, 0.05556, 0.45116],\n        \"115\": [0, 0.43056, 0, 0.05556, 0.46875],\n        \"116\": [0, 0.61508, 0, 0.08334, 0.36111],\n        \"117\": [0, 0.43056, 0, 0.02778, 0.57246],\n        \"118\": [0, 0.43056, 0.03588, 0.02778, 0.48472],\n        \"119\": [0, 0.43056, 0.02691, 0.08334, 0.71592],\n        \"120\": [0, 0.43056, 0, 0.02778, 0.57153],\n        \"121\": [0.19444, 0.43056, 0.03588, 0.05556, 0.49028],\n        \"122\": [0, 0.43056, 0.04398, 0.05556, 0.46505],\n        \"915\": [0, 0.68333, 0.13889, 0.08334, 0.61528],\n        \"916\": [0, 0.68333, 0, 0.16667, 0.83334],\n        \"920\": [0, 0.68333, 0.02778, 0.08334, 0.76278],\n        \"923\": [0, 0.68333, 0, 0.16667, 0.69445],\n        \"926\": [0, 0.68333, 0.07569, 0.08334, 0.74236],\n        \"928\": [0, 0.68333, 0.08125, 0.05556, 0.83125],\n        \"931\": [0, 0.68333, 0.05764, 0.08334, 0.77986],\n        \"933\": [0, 0.68333, 0.13889, 0.05556, 0.58333],\n        \"934\": [0, 0.68333, 0, 0.08334, 0.66667],\n        \"936\": [0, 0.68333, 0.11, 0.05556, 0.61222],\n        \"937\": [0, 0.68333, 0.05017, 0.08334, 0.7724],\n        \"945\": [0, 0.43056, 0.0037, 0.02778, 0.6397],\n        \"946\": [0.19444, 0.69444, 0.05278, 0.08334, 0.56563],\n        \"947\": [0.19444, 0.43056, 0.05556, 0, 0.51773],\n        \"948\": [0, 0.69444, 0.03785, 0.05556, 0.44444],\n        \"949\": [0, 0.43056, 0, 0.08334, 0.46632],\n        \"950\": [0.19444, 0.69444, 0.07378, 0.08334, 0.4375],\n        \"951\": [0.19444, 0.43056, 0.03588, 0.05556, 0.49653],\n        \"952\": [0, 0.69444, 0.02778, 0.08334, 0.46944],\n        \"953\": [0, 0.43056, 0, 0.05556, 0.35394],\n        \"954\": [0, 0.43056, 0, 0, 0.57616],\n        \"955\": [0, 0.69444, 0, 0, 0.58334],\n        \"956\": [0.19444, 0.43056, 0, 0.02778, 0.60255],\n        \"957\": [0, 0.43056, 0.06366, 0.02778, 0.49398],\n        \"958\": [0.19444, 0.69444, 0.04601, 0.11111, 0.4375],\n        \"959\": [0, 0.43056, 0, 0.05556, 0.48472],\n        \"960\": [0, 0.43056, 0.03588, 0, 0.57003],\n        \"961\": [0.19444, 0.43056, 0, 0.08334, 0.51702],\n        \"962\": [0.09722, 0.43056, 0.07986, 0.08334, 0.36285],\n        \"963\": [0, 0.43056, 0.03588, 0, 0.57141],\n        \"964\": [0, 0.43056, 0.1132, 0.02778, 0.43715],\n        \"965\": [0, 0.43056, 0.03588, 0.02778, 0.54028],\n        \"966\": [0.19444, 0.43056, 0, 0.08334, 0.65417],\n        \"967\": [0.19444, 0.43056, 0, 0.05556, 0.62569],\n        \"968\": [0.19444, 0.69444, 0.03588, 0.11111, 0.65139],\n        \"969\": [0, 0.43056, 0.03588, 0, 0.62245],\n        \"977\": [0, 0.69444, 0, 0.08334, 0.59144],\n        \"981\": [0.19444, 0.69444, 0, 0.08334, 0.59583],\n        \"982\": [0, 0.43056, 0.02778, 0, 0.82813],\n        \"1009\": [0.19444, 0.43056, 0, 0.08334, 0.51702],\n        \"1013\": [0, 0.43056, 0, 0.05556, 0.4059]\n    },\n    \"SansSerif-Bold\": {\n        \"33\": [0, 0.69444, 0, 0, 0.36667],\n        \"34\": [0, 0.69444, 0, 0, 0.55834],\n        \"35\": [0.19444, 0.69444, 0, 0, 0.91667],\n        \"36\": [0.05556, 0.75, 0, 0, 0.55],\n        \"37\": [0.05556, 0.75, 0, 0, 1.02912],\n        \"38\": [0, 0.69444, 0, 0, 0.83056],\n        \"39\": [0, 0.69444, 0, 0, 0.30556],\n        \"40\": [0.25, 0.75, 0, 0, 0.42778],\n        \"41\": [0.25, 0.75, 0, 0, 0.42778],\n        \"42\": [0, 0.75, 0, 0, 0.55],\n        \"43\": [0.11667, 0.61667, 0, 0, 0.85556],\n        \"44\": [0.10556, 0.13056, 0, 0, 0.30556],\n        \"45\": [0, 0.45833, 0, 0, 0.36667],\n        \"46\": [0, 0.13056, 0, 0, 0.30556],\n        \"47\": [0.25, 0.75, 0, 0, 0.55],\n        \"48\": [0, 0.69444, 0, 0, 0.55],\n        \"49\": [0, 0.69444, 0, 0, 0.55],\n        \"50\": [0, 0.69444, 0, 0, 0.55],\n        \"51\": [0, 0.69444, 0, 0, 0.55],\n        \"52\": [0, 0.69444, 0, 0, 0.55],\n        \"53\": [0, 0.69444, 0, 0, 0.55],\n        \"54\": [0, 0.69444, 0, 0, 0.55],\n        \"55\": [0, 0.69444, 0, 0, 0.55],\n        \"56\": [0, 0.69444, 0, 0, 0.55],\n        \"57\": [0, 0.69444, 0, 0, 0.55],\n        \"58\": [0, 0.45833, 0, 0, 0.30556],\n        \"59\": [0.10556, 0.45833, 0, 0, 0.30556],\n        \"61\": [-0.09375, 0.40625, 0, 0, 0.85556],\n        \"63\": [0, 0.69444, 0, 0, 0.51945],\n        \"64\": [0, 0.69444, 0, 0, 0.73334],\n        \"65\": [0, 0.69444, 0, 0, 0.73334],\n        \"66\": [0, 0.69444, 0, 0, 0.73334],\n        \"67\": [0, 0.69444, 0, 0, 0.70278],\n        \"68\": [0, 0.69444, 0, 0, 0.79445],\n        \"69\": [0, 0.69444, 0, 0, 0.64167],\n        \"70\": [0, 0.69444, 0, 0, 0.61111],\n        \"71\": [0, 0.69444, 0, 0, 0.73334],\n        \"72\": [0, 0.69444, 0, 0, 0.79445],\n        \"73\": [0, 0.69444, 0, 0, 0.33056],\n        \"74\": [0, 0.69444, 0, 0, 0.51945],\n        \"75\": [0, 0.69444, 0, 0, 0.76389],\n        \"76\": [0, 0.69444, 0, 0, 0.58056],\n        \"77\": [0, 0.69444, 0, 0, 0.97778],\n        \"78\": [0, 0.69444, 0, 0, 0.79445],\n        \"79\": [0, 0.69444, 0, 0, 0.79445],\n        \"80\": [0, 0.69444, 0, 0, 0.70278],\n        \"81\": [0.10556, 0.69444, 0, 0, 0.79445],\n        \"82\": [0, 0.69444, 0, 0, 0.70278],\n        \"83\": [0, 0.69444, 0, 0, 0.61111],\n        \"84\": [0, 0.69444, 0, 0, 0.73334],\n        \"85\": [0, 0.69444, 0, 0, 0.76389],\n        \"86\": [0, 0.69444, 0.01528, 0, 0.73334],\n        \"87\": [0, 0.69444, 0.01528, 0, 1.03889],\n        \"88\": [0, 0.69444, 0, 0, 0.73334],\n        \"89\": [0, 0.69444, 0.0275, 0, 0.73334],\n        \"90\": [0, 0.69444, 0, 0, 0.67223],\n        \"91\": [0.25, 0.75, 0, 0, 0.34306],\n        \"93\": [0.25, 0.75, 0, 0, 0.34306],\n        \"94\": [0, 0.69444, 0, 0, 0.55],\n        \"95\": [0.35, 0.10833, 0.03056, 0, 0.55],\n        \"97\": [0, 0.45833, 0, 0, 0.525],\n        \"98\": [0, 0.69444, 0, 0, 0.56111],\n        \"99\": [0, 0.45833, 0, 0, 0.48889],\n        \"100\": [0, 0.69444, 0, 0, 0.56111],\n        \"101\": [0, 0.45833, 0, 0, 0.51111],\n        \"102\": [0, 0.69444, 0.07639, 0, 0.33611],\n        \"103\": [0.19444, 0.45833, 0.01528, 0, 0.55],\n        \"104\": [0, 0.69444, 0, 0, 0.56111],\n        \"105\": [0, 0.69444, 0, 0, 0.25556],\n        \"106\": [0.19444, 0.69444, 0, 0, 0.28611],\n        \"107\": [0, 0.69444, 0, 0, 0.53056],\n        \"108\": [0, 0.69444, 0, 0, 0.25556],\n        \"109\": [0, 0.45833, 0, 0, 0.86667],\n        \"110\": [0, 0.45833, 0, 0, 0.56111],\n        \"111\": [0, 0.45833, 0, 0, 0.55],\n        \"112\": [0.19444, 0.45833, 0, 0, 0.56111],\n        \"113\": [0.19444, 0.45833, 0, 0, 0.56111],\n        \"114\": [0, 0.45833, 0.01528, 0, 0.37222],\n        \"115\": [0, 0.45833, 0, 0, 0.42167],\n        \"116\": [0, 0.58929, 0, 0, 0.40417],\n        \"117\": [0, 0.45833, 0, 0, 0.56111],\n        \"118\": [0, 0.45833, 0.01528, 0, 0.5],\n        \"119\": [0, 0.45833, 0.01528, 0, 0.74445],\n        \"120\": [0, 0.45833, 0, 0, 0.5],\n        \"121\": [0.19444, 0.45833, 0.01528, 0, 0.5],\n        \"122\": [0, 0.45833, 0, 0, 0.47639],\n        \"126\": [0.35, 0.34444, 0, 0, 0.55],\n        \"168\": [0, 0.69444, 0, 0, 0.55],\n        \"176\": [0, 0.69444, 0, 0, 0.73334],\n        \"180\": [0, 0.69444, 0, 0, 0.55],\n        \"184\": [0.17014, 0, 0, 0, 0.48889],\n        \"305\": [0, 0.45833, 0, 0, 0.25556],\n        \"567\": [0.19444, 0.45833, 0, 0, 0.28611],\n        \"710\": [0, 0.69444, 0, 0, 0.55],\n        \"711\": [0, 0.63542, 0, 0, 0.55],\n        \"713\": [0, 0.63778, 0, 0, 0.55],\n        \"728\": [0, 0.69444, 0, 0, 0.55],\n        \"729\": [0, 0.69444, 0, 0, 0.30556],\n        \"730\": [0, 0.69444, 0, 0, 0.73334],\n        \"732\": [0, 0.69444, 0, 0, 0.55],\n        \"733\": [0, 0.69444, 0, 0, 0.55],\n        \"915\": [0, 0.69444, 0, 0, 0.58056],\n        \"916\": [0, 0.69444, 0, 0, 0.91667],\n        \"920\": [0, 0.69444, 0, 0, 0.85556],\n        \"923\": [0, 0.69444, 0, 0, 0.67223],\n        \"926\": [0, 0.69444, 0, 0, 0.73334],\n        \"928\": [0, 0.69444, 0, 0, 0.79445],\n        \"931\": [0, 0.69444, 0, 0, 0.79445],\n        \"933\": [0, 0.69444, 0, 0, 0.85556],\n        \"934\": [0, 0.69444, 0, 0, 0.79445],\n        \"936\": [0, 0.69444, 0, 0, 0.85556],\n        \"937\": [0, 0.69444, 0, 0, 0.79445],\n        \"8211\": [0, 0.45833, 0.03056, 0, 0.55],\n        \"8212\": [0, 0.45833, 0.03056, 0, 1.10001],\n        \"8216\": [0, 0.69444, 0, 0, 0.30556],\n        \"8217\": [0, 0.69444, 0, 0, 0.30556],\n        \"8220\": [0, 0.69444, 0, 0, 0.55834],\n        \"8221\": [0, 0.69444, 0, 0, 0.55834]\n    },\n    \"SansSerif-Italic\": {\n        \"33\": [0, 0.69444, 0.05733, 0, 0.31945],\n        \"34\": [0, 0.69444, 0.00316, 0, 0.5],\n        \"35\": [0.19444, 0.69444, 0.05087, 0, 0.83334],\n        \"36\": [0.05556, 0.75, 0.11156, 0, 0.5],\n        \"37\": [0.05556, 0.75, 0.03126, 0, 0.83334],\n        \"38\": [0, 0.69444, 0.03058, 0, 0.75834],\n        \"39\": [0, 0.69444, 0.07816, 0, 0.27778],\n        \"40\": [0.25, 0.75, 0.13164, 0, 0.38889],\n        \"41\": [0.25, 0.75, 0.02536, 0, 0.38889],\n        \"42\": [0, 0.75, 0.11775, 0, 0.5],\n        \"43\": [0.08333, 0.58333, 0.02536, 0, 0.77778],\n        \"44\": [0.125, 0.08333, 0, 0, 0.27778],\n        \"45\": [0, 0.44444, 0.01946, 0, 0.33333],\n        \"46\": [0, 0.08333, 0, 0, 0.27778],\n        \"47\": [0.25, 0.75, 0.13164, 0, 0.5],\n        \"48\": [0, 0.65556, 0.11156, 0, 0.5],\n        \"49\": [0, 0.65556, 0.11156, 0, 0.5],\n        \"50\": [0, 0.65556, 0.11156, 0, 0.5],\n        \"51\": [0, 0.65556, 0.11156, 0, 0.5],\n        \"52\": [0, 0.65556, 0.11156, 0, 0.5],\n        \"53\": [0, 0.65556, 0.11156, 0, 0.5],\n        \"54\": [0, 0.65556, 0.11156, 0, 0.5],\n        \"55\": [0, 0.65556, 0.11156, 0, 0.5],\n        \"56\": [0, 0.65556, 0.11156, 0, 0.5],\n        \"57\": [0, 0.65556, 0.11156, 0, 0.5],\n        \"58\": [0, 0.44444, 0.02502, 0, 0.27778],\n        \"59\": [0.125, 0.44444, 0.02502, 0, 0.27778],\n        \"61\": [-0.13, 0.37, 0.05087, 0, 0.77778],\n        \"63\": [0, 0.69444, 0.11809, 0, 0.47222],\n        \"64\": [0, 0.69444, 0.07555, 0, 0.66667],\n        \"65\": [0, 0.69444, 0, 0, 0.66667],\n        \"66\": [0, 0.69444, 0.08293, 0, 0.66667],\n        \"67\": [0, 0.69444, 0.11983, 0, 0.63889],\n        \"68\": [0, 0.69444, 0.07555, 0, 0.72223],\n        \"69\": [0, 0.69444, 0.11983, 0, 0.59722],\n        \"70\": [0, 0.69444, 0.13372, 0, 0.56945],\n        \"71\": [0, 0.69444, 0.11983, 0, 0.66667],\n        \"72\": [0, 0.69444, 0.08094, 0, 0.70834],\n        \"73\": [0, 0.69444, 0.13372, 0, 0.27778],\n        \"74\": [0, 0.69444, 0.08094, 0, 0.47222],\n        \"75\": [0, 0.69444, 0.11983, 0, 0.69445],\n        \"76\": [0, 0.69444, 0, 0, 0.54167],\n        \"77\": [0, 0.69444, 0.08094, 0, 0.875],\n        \"78\": [0, 0.69444, 0.08094, 0, 0.70834],\n        \"79\": [0, 0.69444, 0.07555, 0, 0.73611],\n        \"80\": [0, 0.69444, 0.08293, 0, 0.63889],\n        \"81\": [0.125, 0.69444, 0.07555, 0, 0.73611],\n        \"82\": [0, 0.69444, 0.08293, 0, 0.64584],\n        \"83\": [0, 0.69444, 0.09205, 0, 0.55556],\n        \"84\": [0, 0.69444, 0.13372, 0, 0.68056],\n        \"85\": [0, 0.69444, 0.08094, 0, 0.6875],\n        \"86\": [0, 0.69444, 0.1615, 0, 0.66667],\n        \"87\": [0, 0.69444, 0.1615, 0, 0.94445],\n        \"88\": [0, 0.69444, 0.13372, 0, 0.66667],\n        \"89\": [0, 0.69444, 0.17261, 0, 0.66667],\n        \"90\": [0, 0.69444, 0.11983, 0, 0.61111],\n        \"91\": [0.25, 0.75, 0.15942, 0, 0.28889],\n        \"93\": [0.25, 0.75, 0.08719, 0, 0.28889],\n        \"94\": [0, 0.69444, 0.0799, 0, 0.5],\n        \"95\": [0.35, 0.09444, 0.08616, 0, 0.5],\n        \"97\": [0, 0.44444, 0.00981, 0, 0.48056],\n        \"98\": [0, 0.69444, 0.03057, 0, 0.51667],\n        \"99\": [0, 0.44444, 0.08336, 0, 0.44445],\n        \"100\": [0, 0.69444, 0.09483, 0, 0.51667],\n        \"101\": [0, 0.44444, 0.06778, 0, 0.44445],\n        \"102\": [0, 0.69444, 0.21705, 0, 0.30556],\n        \"103\": [0.19444, 0.44444, 0.10836, 0, 0.5],\n        \"104\": [0, 0.69444, 0.01778, 0, 0.51667],\n        \"105\": [0, 0.67937, 0.09718, 0, 0.23889],\n        \"106\": [0.19444, 0.67937, 0.09162, 0, 0.26667],\n        \"107\": [0, 0.69444, 0.08336, 0, 0.48889],\n        \"108\": [0, 0.69444, 0.09483, 0, 0.23889],\n        \"109\": [0, 0.44444, 0.01778, 0, 0.79445],\n        \"110\": [0, 0.44444, 0.01778, 0, 0.51667],\n        \"111\": [0, 0.44444, 0.06613, 0, 0.5],\n        \"112\": [0.19444, 0.44444, 0.0389, 0, 0.51667],\n        \"113\": [0.19444, 0.44444, 0.04169, 0, 0.51667],\n        \"114\": [0, 0.44444, 0.10836, 0, 0.34167],\n        \"115\": [0, 0.44444, 0.0778, 0, 0.38333],\n        \"116\": [0, 0.57143, 0.07225, 0, 0.36111],\n        \"117\": [0, 0.44444, 0.04169, 0, 0.51667],\n        \"118\": [0, 0.44444, 0.10836, 0, 0.46111],\n        \"119\": [0, 0.44444, 0.10836, 0, 0.68334],\n        \"120\": [0, 0.44444, 0.09169, 0, 0.46111],\n        \"121\": [0.19444, 0.44444, 0.10836, 0, 0.46111],\n        \"122\": [0, 0.44444, 0.08752, 0, 0.43472],\n        \"126\": [0.35, 0.32659, 0.08826, 0, 0.5],\n        \"168\": [0, 0.67937, 0.06385, 0, 0.5],\n        \"176\": [0, 0.69444, 0, 0, 0.73752],\n        \"184\": [0.17014, 0, 0, 0, 0.44445],\n        \"305\": [0, 0.44444, 0.04169, 0, 0.23889],\n        \"567\": [0.19444, 0.44444, 0.04169, 0, 0.26667],\n        \"710\": [0, 0.69444, 0.0799, 0, 0.5],\n        \"711\": [0, 0.63194, 0.08432, 0, 0.5],\n        \"713\": [0, 0.60889, 0.08776, 0, 0.5],\n        \"714\": [0, 0.69444, 0.09205, 0, 0.5],\n        \"715\": [0, 0.69444, 0, 0, 0.5],\n        \"728\": [0, 0.69444, 0.09483, 0, 0.5],\n        \"729\": [0, 0.67937, 0.07774, 0, 0.27778],\n        \"730\": [0, 0.69444, 0, 0, 0.73752],\n        \"732\": [0, 0.67659, 0.08826, 0, 0.5],\n        \"733\": [0, 0.69444, 0.09205, 0, 0.5],\n        \"915\": [0, 0.69444, 0.13372, 0, 0.54167],\n        \"916\": [0, 0.69444, 0, 0, 0.83334],\n        \"920\": [0, 0.69444, 0.07555, 0, 0.77778],\n        \"923\": [0, 0.69444, 0, 0, 0.61111],\n        \"926\": [0, 0.69444, 0.12816, 0, 0.66667],\n        \"928\": [0, 0.69444, 0.08094, 0, 0.70834],\n        \"931\": [0, 0.69444, 0.11983, 0, 0.72222],\n        \"933\": [0, 0.69444, 0.09031, 0, 0.77778],\n        \"934\": [0, 0.69444, 0.04603, 0, 0.72222],\n        \"936\": [0, 0.69444, 0.09031, 0, 0.77778],\n        \"937\": [0, 0.69444, 0.08293, 0, 0.72222],\n        \"8211\": [0, 0.44444, 0.08616, 0, 0.5],\n        \"8212\": [0, 0.44444, 0.08616, 0, 1.0],\n        \"8216\": [0, 0.69444, 0.07816, 0, 0.27778],\n        \"8217\": [0, 0.69444, 0.07816, 0, 0.27778],\n        \"8220\": [0, 0.69444, 0.14205, 0, 0.5],\n        \"8221\": [0, 0.69444, 0.00316, 0, 0.5]\n    },\n    \"SansSerif-Regular\": {\n        \"33\": [0, 0.69444, 0, 0, 0.31945],\n        \"34\": [0, 0.69444, 0, 0, 0.5],\n        \"35\": [0.19444, 0.69444, 0, 0, 0.83334],\n        \"36\": [0.05556, 0.75, 0, 0, 0.5],\n        \"37\": [0.05556, 0.75, 0, 0, 0.83334],\n        \"38\": [0, 0.69444, 0, 0, 0.75834],\n        \"39\": [0, 0.69444, 0, 0, 0.27778],\n        \"40\": [0.25, 0.75, 0, 0, 0.38889],\n        \"41\": [0.25, 0.75, 0, 0, 0.38889],\n        \"42\": [0, 0.75, 0, 0, 0.5],\n        \"43\": [0.08333, 0.58333, 0, 0, 0.77778],\n        \"44\": [0.125, 0.08333, 0, 0, 0.27778],\n        \"45\": [0, 0.44444, 0, 0, 0.33333],\n        \"46\": [0, 0.08333, 0, 0, 0.27778],\n        \"47\": [0.25, 0.75, 0, 0, 0.5],\n        \"48\": [0, 0.65556, 0, 0, 0.5],\n        \"49\": [0, 0.65556, 0, 0, 0.5],\n        \"50\": [0, 0.65556, 0, 0, 0.5],\n        \"51\": [0, 0.65556, 0, 0, 0.5],\n        \"52\": [0, 0.65556, 0, 0, 0.5],\n        \"53\": [0, 0.65556, 0, 0, 0.5],\n        \"54\": [0, 0.65556, 0, 0, 0.5],\n        \"55\": [0, 0.65556, 0, 0, 0.5],\n        \"56\": [0, 0.65556, 0, 0, 0.5],\n        \"57\": [0, 0.65556, 0, 0, 0.5],\n        \"58\": [0, 0.44444, 0, 0, 0.27778],\n        \"59\": [0.125, 0.44444, 0, 0, 0.27778],\n        \"61\": [-0.13, 0.37, 0, 0, 0.77778],\n        \"63\": [0, 0.69444, 0, 0, 0.47222],\n        \"64\": [0, 0.69444, 0, 0, 0.66667],\n        \"65\": [0, 0.69444, 0, 0, 0.66667],\n        \"66\": [0, 0.69444, 0, 0, 0.66667],\n        \"67\": [0, 0.69444, 0, 0, 0.63889],\n        \"68\": [0, 0.69444, 0, 0, 0.72223],\n        \"69\": [0, 0.69444, 0, 0, 0.59722],\n        \"70\": [0, 0.69444, 0, 0, 0.56945],\n        \"71\": [0, 0.69444, 0, 0, 0.66667],\n        \"72\": [0, 0.69444, 0, 0, 0.70834],\n        \"73\": [0, 0.69444, 0, 0, 0.27778],\n        \"74\": [0, 0.69444, 0, 0, 0.47222],\n        \"75\": [0, 0.69444, 0, 0, 0.69445],\n        \"76\": [0, 0.69444, 0, 0, 0.54167],\n        \"77\": [0, 0.69444, 0, 0, 0.875],\n        \"78\": [0, 0.69444, 0, 0, 0.70834],\n        \"79\": [0, 0.69444, 0, 0, 0.73611],\n        \"80\": [0, 0.69444, 0, 0, 0.63889],\n        \"81\": [0.125, 0.69444, 0, 0, 0.73611],\n        \"82\": [0, 0.69444, 0, 0, 0.64584],\n        \"83\": [0, 0.69444, 0, 0, 0.55556],\n        \"84\": [0, 0.69444, 0, 0, 0.68056],\n        \"85\": [0, 0.69444, 0, 0, 0.6875],\n        \"86\": [0, 0.69444, 0.01389, 0, 0.66667],\n        \"87\": [0, 0.69444, 0.01389, 0, 0.94445],\n        \"88\": [0, 0.69444, 0, 0, 0.66667],\n        \"89\": [0, 0.69444, 0.025, 0, 0.66667],\n        \"90\": [0, 0.69444, 0, 0, 0.61111],\n        \"91\": [0.25, 0.75, 0, 0, 0.28889],\n        \"93\": [0.25, 0.75, 0, 0, 0.28889],\n        \"94\": [0, 0.69444, 0, 0, 0.5],\n        \"95\": [0.35, 0.09444, 0.02778, 0, 0.5],\n        \"97\": [0, 0.44444, 0, 0, 0.48056],\n        \"98\": [0, 0.69444, 0, 0, 0.51667],\n        \"99\": [0, 0.44444, 0, 0, 0.44445],\n        \"100\": [0, 0.69444, 0, 0, 0.51667],\n        \"101\": [0, 0.44444, 0, 0, 0.44445],\n        \"102\": [0, 0.69444, 0.06944, 0, 0.30556],\n        \"103\": [0.19444, 0.44444, 0.01389, 0, 0.5],\n        \"104\": [0, 0.69444, 0, 0, 0.51667],\n        \"105\": [0, 0.67937, 0, 0, 0.23889],\n        \"106\": [0.19444, 0.67937, 0, 0, 0.26667],\n        \"107\": [0, 0.69444, 0, 0, 0.48889],\n        \"108\": [0, 0.69444, 0, 0, 0.23889],\n        \"109\": [0, 0.44444, 0, 0, 0.79445],\n        \"110\": [0, 0.44444, 0, 0, 0.51667],\n        \"111\": [0, 0.44444, 0, 0, 0.5],\n        \"112\": [0.19444, 0.44444, 0, 0, 0.51667],\n        \"113\": [0.19444, 0.44444, 0, 0, 0.51667],\n        \"114\": [0, 0.44444, 0.01389, 0, 0.34167],\n        \"115\": [0, 0.44444, 0, 0, 0.38333],\n        \"116\": [0, 0.57143, 0, 0, 0.36111],\n        \"117\": [0, 0.44444, 0, 0, 0.51667],\n        \"118\": [0, 0.44444, 0.01389, 0, 0.46111],\n        \"119\": [0, 0.44444, 0.01389, 0, 0.68334],\n        \"120\": [0, 0.44444, 0, 0, 0.46111],\n        \"121\": [0.19444, 0.44444, 0.01389, 0, 0.46111],\n        \"122\": [0, 0.44444, 0, 0, 0.43472],\n        \"126\": [0.35, 0.32659, 0, 0, 0.5],\n        \"168\": [0, 0.67937, 0, 0, 0.5],\n        \"176\": [0, 0.69444, 0, 0, 0.66667],\n        \"184\": [0.17014, 0, 0, 0, 0.44445],\n        \"305\": [0, 0.44444, 0, 0, 0.23889],\n        \"567\": [0.19444, 0.44444, 0, 0, 0.26667],\n        \"710\": [0, 0.69444, 0, 0, 0.5],\n        \"711\": [0, 0.63194, 0, 0, 0.5],\n        \"713\": [0, 0.60889, 0, 0, 0.5],\n        \"714\": [0, 0.69444, 0, 0, 0.5],\n        \"715\": [0, 0.69444, 0, 0, 0.5],\n        \"728\": [0, 0.69444, 0, 0, 0.5],\n        \"729\": [0, 0.67937, 0, 0, 0.27778],\n        \"730\": [0, 0.69444, 0, 0, 0.66667],\n        \"732\": [0, 0.67659, 0, 0, 0.5],\n        \"733\": [0, 0.69444, 0, 0, 0.5],\n        \"915\": [0, 0.69444, 0, 0, 0.54167],\n        \"916\": [0, 0.69444, 0, 0, 0.83334],\n        \"920\": [0, 0.69444, 0, 0, 0.77778],\n        \"923\": [0, 0.69444, 0, 0, 0.61111],\n        \"926\": [0, 0.69444, 0, 0, 0.66667],\n        \"928\": [0, 0.69444, 0, 0, 0.70834],\n        \"931\": [0, 0.69444, 0, 0, 0.72222],\n        \"933\": [0, 0.69444, 0, 0, 0.77778],\n        \"934\": [0, 0.69444, 0, 0, 0.72222],\n        \"936\": [0, 0.69444, 0, 0, 0.77778],\n        \"937\": [0, 0.69444, 0, 0, 0.72222],\n        \"8211\": [0, 0.44444, 0.02778, 0, 0.5],\n        \"8212\": [0, 0.44444, 0.02778, 0, 1.0],\n        \"8216\": [0, 0.69444, 0, 0, 0.27778],\n        \"8217\": [0, 0.69444, 0, 0, 0.27778],\n        \"8220\": [0, 0.69444, 0, 0, 0.5],\n        \"8221\": [0, 0.69444, 0, 0, 0.5]\n    },\n    \"Script-Regular\": {\n        \"65\": [0, 0.7, 0.22925, 0, 0.80253],\n        \"66\": [0, 0.7, 0.04087, 0, 0.90757],\n        \"67\": [0, 0.7, 0.1689, 0, 0.66619],\n        \"68\": [0, 0.7, 0.09371, 0, 0.77443],\n        \"69\": [0, 0.7, 0.18583, 0, 0.56162],\n        \"70\": [0, 0.7, 0.13634, 0, 0.89544],\n        \"71\": [0, 0.7, 0.17322, 0, 0.60961],\n        \"72\": [0, 0.7, 0.29694, 0, 0.96919],\n        \"73\": [0, 0.7, 0.19189, 0, 0.80907],\n        \"74\": [0.27778, 0.7, 0.19189, 0, 1.05159],\n        \"75\": [0, 0.7, 0.31259, 0, 0.91364],\n        \"76\": [0, 0.7, 0.19189, 0, 0.87373],\n        \"77\": [0, 0.7, 0.15981, 0, 1.08031],\n        \"78\": [0, 0.7, 0.3525, 0, 0.9015],\n        \"79\": [0, 0.7, 0.08078, 0, 0.73787],\n        \"80\": [0, 0.7, 0.08078, 0, 1.01262],\n        \"81\": [0, 0.7, 0.03305, 0, 0.88282],\n        \"82\": [0, 0.7, 0.06259, 0, 0.85],\n        \"83\": [0, 0.7, 0.19189, 0, 0.86767],\n        \"84\": [0, 0.7, 0.29087, 0, 0.74697],\n        \"85\": [0, 0.7, 0.25815, 0, 0.79996],\n        \"86\": [0, 0.7, 0.27523, 0, 0.62204],\n        \"87\": [0, 0.7, 0.27523, 0, 0.80532],\n        \"88\": [0, 0.7, 0.26006, 0, 0.94445],\n        \"89\": [0, 0.7, 0.2939, 0, 0.70961],\n        \"90\": [0, 0.7, 0.24037, 0, 0.8212]\n    },\n    \"Size1-Regular\": {\n        \"40\": [0.35001, 0.85, 0, 0, 0.45834],\n        \"41\": [0.35001, 0.85, 0, 0, 0.45834],\n        \"47\": [0.35001, 0.85, 0, 0, 0.57778],\n        \"91\": [0.35001, 0.85, 0, 0, 0.41667],\n        \"92\": [0.35001, 0.85, 0, 0, 0.57778],\n        \"93\": [0.35001, 0.85, 0, 0, 0.41667],\n        \"123\": [0.35001, 0.85, 0, 0, 0.58334],\n        \"125\": [0.35001, 0.85, 0, 0, 0.58334],\n        \"710\": [0, 0.72222, 0, 0, 0.55556],\n        \"732\": [0, 0.72222, 0, 0, 0.55556],\n        \"770\": [0, 0.72222, 0, 0, 0.55556],\n        \"771\": [0, 0.72222, 0, 0, 0.55556],\n        \"8214\": [-0.00099, 0.601, 0, 0, 0.77778],\n        \"8593\": [1e-05, 0.6, 0, 0, 0.66667],\n        \"8595\": [1e-05, 0.6, 0, 0, 0.66667],\n        \"8657\": [1e-05, 0.6, 0, 0, 0.77778],\n        \"8659\": [1e-05, 0.6, 0, 0, 0.77778],\n        \"8719\": [0.25001, 0.75, 0, 0, 0.94445],\n        \"8720\": [0.25001, 0.75, 0, 0, 0.94445],\n        \"8721\": [0.25001, 0.75, 0, 0, 1.05556],\n        \"8730\": [0.35001, 0.85, 0, 0, 1.0],\n        \"8739\": [-0.00599, 0.606, 0, 0, 0.33333],\n        \"8741\": [-0.00599, 0.606, 0, 0, 0.55556],\n        \"8747\": [0.30612, 0.805, 0.19445, 0, 0.47222],\n        \"8748\": [0.306, 0.805, 0.19445, 0, 0.47222],\n        \"8749\": [0.306, 0.805, 0.19445, 0, 0.47222],\n        \"8750\": [0.30612, 0.805, 0.19445, 0, 0.47222],\n        \"8896\": [0.25001, 0.75, 0, 0, 0.83334],\n        \"8897\": [0.25001, 0.75, 0, 0, 0.83334],\n        \"8898\": [0.25001, 0.75, 0, 0, 0.83334],\n        \"8899\": [0.25001, 0.75, 0, 0, 0.83334],\n        \"8968\": [0.35001, 0.85, 0, 0, 0.47222],\n        \"8969\": [0.35001, 0.85, 0, 0, 0.47222],\n        \"8970\": [0.35001, 0.85, 0, 0, 0.47222],\n        \"8971\": [0.35001, 0.85, 0, 0, 0.47222],\n        \"9168\": [-0.00099, 0.601, 0, 0, 0.66667],\n        \"10216\": [0.35001, 0.85, 0, 0, 0.47222],\n        \"10217\": [0.35001, 0.85, 0, 0, 0.47222],\n        \"10752\": [0.25001, 0.75, 0, 0, 1.11111],\n        \"10753\": [0.25001, 0.75, 0, 0, 1.11111],\n        \"10754\": [0.25001, 0.75, 0, 0, 1.11111],\n        \"10756\": [0.25001, 0.75, 0, 0, 0.83334],\n        \"10758\": [0.25001, 0.75, 0, 0, 0.83334]\n    },\n    \"Size2-Regular\": {\n        \"40\": [0.65002, 1.15, 0, 0, 0.59722],\n        \"41\": [0.65002, 1.15, 0, 0, 0.59722],\n        \"47\": [0.65002, 1.15, 0, 0, 0.81111],\n        \"91\": [0.65002, 1.15, 0, 0, 0.47222],\n        \"92\": [0.65002, 1.15, 0, 0, 0.81111],\n        \"93\": [0.65002, 1.15, 0, 0, 0.47222],\n        \"123\": [0.65002, 1.15, 0, 0, 0.66667],\n        \"125\": [0.65002, 1.15, 0, 0, 0.66667],\n        \"710\": [0, 0.75, 0, 0, 1.0],\n        \"732\": [0, 0.75, 0, 0, 1.0],\n        \"770\": [0, 0.75, 0, 0, 1.0],\n        \"771\": [0, 0.75, 0, 0, 1.0],\n        \"8719\": [0.55001, 1.05, 0, 0, 1.27778],\n        \"8720\": [0.55001, 1.05, 0, 0, 1.27778],\n        \"8721\": [0.55001, 1.05, 0, 0, 1.44445],\n        \"8730\": [0.65002, 1.15, 0, 0, 1.0],\n        \"8747\": [0.86225, 1.36, 0.44445, 0, 0.55556],\n        \"8748\": [0.862, 1.36, 0.44445, 0, 0.55556],\n        \"8749\": [0.862, 1.36, 0.44445, 0, 0.55556],\n        \"8750\": [0.86225, 1.36, 0.44445, 0, 0.55556],\n        \"8896\": [0.55001, 1.05, 0, 0, 1.11111],\n        \"8897\": [0.55001, 1.05, 0, 0, 1.11111],\n        \"8898\": [0.55001, 1.05, 0, 0, 1.11111],\n        \"8899\": [0.55001, 1.05, 0, 0, 1.11111],\n        \"8968\": [0.65002, 1.15, 0, 0, 0.52778],\n        \"8969\": [0.65002, 1.15, 0, 0, 0.52778],\n        \"8970\": [0.65002, 1.15, 0, 0, 0.52778],\n        \"8971\": [0.65002, 1.15, 0, 0, 0.52778],\n        \"10216\": [0.65002, 1.15, 0, 0, 0.61111],\n        \"10217\": [0.65002, 1.15, 0, 0, 0.61111],\n        \"10752\": [0.55001, 1.05, 0, 0, 1.51112],\n        \"10753\": [0.55001, 1.05, 0, 0, 1.51112],\n        \"10754\": [0.55001, 1.05, 0, 0, 1.51112],\n        \"10756\": [0.55001, 1.05, 0, 0, 1.11111],\n        \"10758\": [0.55001, 1.05, 0, 0, 1.11111]\n    },\n    \"Size3-Regular\": {\n        \"40\": [0.95003, 1.45, 0, 0, 0.73611],\n        \"41\": [0.95003, 1.45, 0, 0, 0.73611],\n        \"47\": [0.95003, 1.45, 0, 0, 1.04445],\n        \"91\": [0.95003, 1.45, 0, 0, 0.52778],\n        \"92\": [0.95003, 1.45, 0, 0, 1.04445],\n        \"93\": [0.95003, 1.45, 0, 0, 0.52778],\n        \"123\": [0.95003, 1.45, 0, 0, 0.75],\n        \"125\": [0.95003, 1.45, 0, 0, 0.75],\n        \"710\": [0, 0.75, 0, 0, 1.44445],\n        \"732\": [0, 0.75, 0, 0, 1.44445],\n        \"770\": [0, 0.75, 0, 0, 1.44445],\n        \"771\": [0, 0.75, 0, 0, 1.44445],\n        \"8730\": [0.95003, 1.45, 0, 0, 1.0],\n        \"8968\": [0.95003, 1.45, 0, 0, 0.58334],\n        \"8969\": [0.95003, 1.45, 0, 0, 0.58334],\n        \"8970\": [0.95003, 1.45, 0, 0, 0.58334],\n        \"8971\": [0.95003, 1.45, 0, 0, 0.58334],\n        \"10216\": [0.95003, 1.45, 0, 0, 0.75],\n        \"10217\": [0.95003, 1.45, 0, 0, 0.75]\n    },\n    \"Size4-Regular\": {\n        \"40\": [1.25003, 1.75, 0, 0, 0.79167],\n        \"41\": [1.25003, 1.75, 0, 0, 0.79167],\n        \"47\": [1.25003, 1.75, 0, 0, 1.27778],\n        \"91\": [1.25003, 1.75, 0, 0, 0.58334],\n        \"92\": [1.25003, 1.75, 0, 0, 1.27778],\n        \"93\": [1.25003, 1.75, 0, 0, 0.58334],\n        \"123\": [1.25003, 1.75, 0, 0, 0.80556],\n        \"125\": [1.25003, 1.75, 0, 0, 0.80556],\n        \"710\": [0, 0.825, 0, 0, 1.8889],\n        \"732\": [0, 0.825, 0, 0, 1.8889],\n        \"770\": [0, 0.825, 0, 0, 1.8889],\n        \"771\": [0, 0.825, 0, 0, 1.8889],\n        \"8730\": [1.25003, 1.75, 0, 0, 1.0],\n        \"8968\": [1.25003, 1.75, 0, 0, 0.63889],\n        \"8969\": [1.25003, 1.75, 0, 0, 0.63889],\n        \"8970\": [1.25003, 1.75, 0, 0, 0.63889],\n        \"8971\": [1.25003, 1.75, 0, 0, 0.63889],\n        \"9115\": [0.64502, 1.155, 0, 0, 0.875],\n        \"9116\": [1e-05, 0.6, 0, 0, 0.875],\n        \"9117\": [0.64502, 1.155, 0, 0, 0.875],\n        \"9118\": [0.64502, 1.155, 0, 0, 0.875],\n        \"9119\": [1e-05, 0.6, 0, 0, 0.875],\n        \"9120\": [0.64502, 1.155, 0, 0, 0.875],\n        \"9121\": [0.64502, 1.155, 0, 0, 0.66667],\n        \"9122\": [-0.00099, 0.601, 0, 0, 0.66667],\n        \"9123\": [0.64502, 1.155, 0, 0, 0.66667],\n        \"9124\": [0.64502, 1.155, 0, 0, 0.66667],\n        \"9125\": [-0.00099, 0.601, 0, 0, 0.66667],\n        \"9126\": [0.64502, 1.155, 0, 0, 0.66667],\n        \"9127\": [1e-05, 0.9, 0, 0, 0.88889],\n        \"9128\": [0.65002, 1.15, 0, 0, 0.88889],\n        \"9129\": [0.90001, 0, 0, 0, 0.88889],\n        \"9130\": [0, 0.3, 0, 0, 0.88889],\n        \"9131\": [1e-05, 0.9, 0, 0, 0.88889],\n        \"9132\": [0.65002, 1.15, 0, 0, 0.88889],\n        \"9133\": [0.90001, 0, 0, 0, 0.88889],\n        \"9143\": [0.88502, 0.915, 0, 0, 1.05556],\n        \"10216\": [1.25003, 1.75, 0, 0, 0.80556],\n        \"10217\": [1.25003, 1.75, 0, 0, 0.80556],\n        \"57344\": [-0.00499, 0.605, 0, 0, 1.05556],\n        \"57345\": [-0.00499, 0.605, 0, 0, 1.05556],\n        \"57680\": [0, 0.12, 0, 0, 0.45],\n        \"57681\": [0, 0.12, 0, 0, 0.45],\n        \"57682\": [0, 0.12, 0, 0, 0.45],\n        \"57683\": [0, 0.12, 0, 0, 0.45]\n    },\n    \"Typewriter-Regular\": {\n        \"32\": [0, 0, 0, 0, 0.525],\n        \"33\": [0, 0.61111, 0, 0, 0.525],\n        \"34\": [0, 0.61111, 0, 0, 0.525],\n        \"35\": [0, 0.61111, 0, 0, 0.525],\n        \"36\": [0.08333, 0.69444, 0, 0, 0.525],\n        \"37\": [0.08333, 0.69444, 0, 0, 0.525],\n        \"38\": [0, 0.61111, 0, 0, 0.525],\n        \"39\": [0, 0.61111, 0, 0, 0.525],\n        \"40\": [0.08333, 0.69444, 0, 0, 0.525],\n        \"41\": [0.08333, 0.69444, 0, 0, 0.525],\n        \"42\": [0, 0.52083, 0, 0, 0.525],\n        \"43\": [-0.08056, 0.53055, 0, 0, 0.525],\n        \"44\": [0.13889, 0.125, 0, 0, 0.525],\n        \"45\": [-0.08056, 0.53055, 0, 0, 0.525],\n        \"46\": [0, 0.125, 0, 0, 0.525],\n        \"47\": [0.08333, 0.69444, 0, 0, 0.525],\n        \"48\": [0, 0.61111, 0, 0, 0.525],\n        \"49\": [0, 0.61111, 0, 0, 0.525],\n        \"50\": [0, 0.61111, 0, 0, 0.525],\n        \"51\": [0, 0.61111, 0, 0, 0.525],\n        \"52\": [0, 0.61111, 0, 0, 0.525],\n        \"53\": [0, 0.61111, 0, 0, 0.525],\n        \"54\": [0, 0.61111, 0, 0, 0.525],\n        \"55\": [0, 0.61111, 0, 0, 0.525],\n        \"56\": [0, 0.61111, 0, 0, 0.525],\n        \"57\": [0, 0.61111, 0, 0, 0.525],\n        \"58\": [0, 0.43056, 0, 0, 0.525],\n        \"59\": [0.13889, 0.43056, 0, 0, 0.525],\n        \"60\": [-0.05556, 0.55556, 0, 0, 0.525],\n        \"61\": [-0.19549, 0.41562, 0, 0, 0.525],\n        \"62\": [-0.05556, 0.55556, 0, 0, 0.525],\n        \"63\": [0, 0.61111, 0, 0, 0.525],\n        \"64\": [0, 0.61111, 0, 0, 0.525],\n        \"65\": [0, 0.61111, 0, 0, 0.525],\n        \"66\": [0, 0.61111, 0, 0, 0.525],\n        \"67\": [0, 0.61111, 0, 0, 0.525],\n        \"68\": [0, 0.61111, 0, 0, 0.525],\n        \"69\": [0, 0.61111, 0, 0, 0.525],\n        \"70\": [0, 0.61111, 0, 0, 0.525],\n        \"71\": [0, 0.61111, 0, 0, 0.525],\n        \"72\": [0, 0.61111, 0, 0, 0.525],\n        \"73\": [0, 0.61111, 0, 0, 0.525],\n        \"74\": [0, 0.61111, 0, 0, 0.525],\n        \"75\": [0, 0.61111, 0, 0, 0.525],\n        \"76\": [0, 0.61111, 0, 0, 0.525],\n        \"77\": [0, 0.61111, 0, 0, 0.525],\n        \"78\": [0, 0.61111, 0, 0, 0.525],\n        \"79\": [0, 0.61111, 0, 0, 0.525],\n        \"80\": [0, 0.61111, 0, 0, 0.525],\n        \"81\": [0.13889, 0.61111, 0, 0, 0.525],\n        \"82\": [0, 0.61111, 0, 0, 0.525],\n        \"83\": [0, 0.61111, 0, 0, 0.525],\n        \"84\": [0, 0.61111, 0, 0, 0.525],\n        \"85\": [0, 0.61111, 0, 0, 0.525],\n        \"86\": [0, 0.61111, 0, 0, 0.525],\n        \"87\": [0, 0.61111, 0, 0, 0.525],\n        \"88\": [0, 0.61111, 0, 0, 0.525],\n        \"89\": [0, 0.61111, 0, 0, 0.525],\n        \"90\": [0, 0.61111, 0, 0, 0.525],\n        \"91\": [0.08333, 0.69444, 0, 0, 0.525],\n        \"92\": [0.08333, 0.69444, 0, 0, 0.525],\n        \"93\": [0.08333, 0.69444, 0, 0, 0.525],\n        \"94\": [0, 0.61111, 0, 0, 0.525],\n        \"95\": [0.09514, 0, 0, 0, 0.525],\n        \"96\": [0, 0.61111, 0, 0, 0.525],\n        \"97\": [0, 0.43056, 0, 0, 0.525],\n        \"98\": [0, 0.61111, 0, 0, 0.525],\n        \"99\": [0, 0.43056, 0, 0, 0.525],\n        \"100\": [0, 0.61111, 0, 0, 0.525],\n        \"101\": [0, 0.43056, 0, 0, 0.525],\n        \"102\": [0, 0.61111, 0, 0, 0.525],\n        \"103\": [0.22222, 0.43056, 0, 0, 0.525],\n        \"104\": [0, 0.61111, 0, 0, 0.525],\n        \"105\": [0, 0.61111, 0, 0, 0.525],\n        \"106\": [0.22222, 0.61111, 0, 0, 0.525],\n        \"107\": [0, 0.61111, 0, 0, 0.525],\n        \"108\": [0, 0.61111, 0, 0, 0.525],\n        \"109\": [0, 0.43056, 0, 0, 0.525],\n        \"110\": [0, 0.43056, 0, 0, 0.525],\n        \"111\": [0, 0.43056, 0, 0, 0.525],\n        \"112\": [0.22222, 0.43056, 0, 0, 0.525],\n        \"113\": [0.22222, 0.43056, 0, 0, 0.525],\n        \"114\": [0, 0.43056, 0, 0, 0.525],\n        \"115\": [0, 0.43056, 0, 0, 0.525],\n        \"116\": [0, 0.55358, 0, 0, 0.525],\n        \"117\": [0, 0.43056, 0, 0, 0.525],\n        \"118\": [0, 0.43056, 0, 0, 0.525],\n        \"119\": [0, 0.43056, 0, 0, 0.525],\n        \"120\": [0, 0.43056, 0, 0, 0.525],\n        \"121\": [0.22222, 0.43056, 0, 0, 0.525],\n        \"122\": [0, 0.43056, 0, 0, 0.525],\n        \"123\": [0.08333, 0.69444, 0, 0, 0.525],\n        \"124\": [0.08333, 0.69444, 0, 0, 0.525],\n        \"125\": [0.08333, 0.69444, 0, 0, 0.525],\n        \"126\": [0, 0.61111, 0, 0, 0.525],\n        \"127\": [0, 0.61111, 0, 0, 0.525],\n        \"160\": [0, 0, 0, 0, 0.525],\n        \"176\": [0, 0.61111, 0, 0, 0.525],\n        \"184\": [0.19445, 0, 0, 0, 0.525],\n        \"305\": [0, 0.43056, 0, 0, 0.525],\n        \"567\": [0.22222, 0.43056, 0, 0, 0.525],\n        \"711\": [0, 0.56597, 0, 0, 0.525],\n        \"713\": [0, 0.56555, 0, 0, 0.525],\n        \"714\": [0, 0.61111, 0, 0, 0.525],\n        \"715\": [0, 0.61111, 0, 0, 0.525],\n        \"728\": [0, 0.61111, 0, 0, 0.525],\n        \"730\": [0, 0.61111, 0, 0, 0.525],\n        \"770\": [0, 0.61111, 0, 0, 0.525],\n        \"771\": [0, 0.61111, 0, 0, 0.525],\n        \"776\": [0, 0.61111, 0, 0, 0.525],\n        \"915\": [0, 0.61111, 0, 0, 0.525],\n        \"916\": [0, 0.61111, 0, 0, 0.525],\n        \"920\": [0, 0.61111, 0, 0, 0.525],\n        \"923\": [0, 0.61111, 0, 0, 0.525],\n        \"926\": [0, 0.61111, 0, 0, 0.525],\n        \"928\": [0, 0.61111, 0, 0, 0.525],\n        \"931\": [0, 0.61111, 0, 0, 0.525],\n        \"933\": [0, 0.61111, 0, 0, 0.525],\n        \"934\": [0, 0.61111, 0, 0, 0.525],\n        \"936\": [0, 0.61111, 0, 0, 0.525],\n        \"937\": [0, 0.61111, 0, 0, 0.525],\n        \"8216\": [0, 0.61111, 0, 0, 0.525],\n        \"8217\": [0, 0.61111, 0, 0, 0.525],\n        \"8242\": [0, 0.61111, 0, 0, 0.525],\n        \"9251\": [0.11111, 0.21944, 0, 0, 0.525]\n    }\n});\n// CONCATENATED MODULE: ./src/fontMetrics.js\n\n\n/**\n * This file contains metrics regarding fonts and individual symbols. The sigma\n * and xi variables, as well as the metricMap map contain data extracted from\n * TeX, TeX font metrics, and the TTF files. These data are then exposed via the\n * `metrics` variable and the getCharacterMetrics function.\n */\n\n// In TeX, there are actually three sets of dimensions, one for each of\n// textstyle (size index 5 and higher: >=9pt), scriptstyle (size index 3 and 4:\n// 7-8pt), and scriptscriptstyle (size index 1 and 2: 5-6pt).  These are\n// provided in the the arrays below, in that order.\n//\n// The font metrics are stored in fonts cmsy10, cmsy7, and cmsy5 respsectively.\n// This was determined by running the following script:\n//\n//     latex -interaction=nonstopmode \\\n//     '\\documentclass{article}\\usepackage{amsmath}\\begin{document}' \\\n//     '$a$ \\expandafter\\show\\the\\textfont2' \\\n//     '\\expandafter\\show\\the\\scriptfont2' \\\n//     '\\expandafter\\show\\the\\scriptscriptfont2' \\\n//     '\\stop'\n//\n// The metrics themselves were retreived using the following commands:\n//\n//     tftopl cmsy10\n//     tftopl cmsy7\n//     tftopl cmsy5\n//\n// The output of each of these commands is quite lengthy.  The only part we\n// care about is the FONTDIMEN section. Each value is measured in EMs.\nvar sigmasAndXis = {\n    slant: [0.250, 0.250, 0.250], // sigma1\n    space: [0.000, 0.000, 0.000], // sigma2\n    stretch: [0.000, 0.000, 0.000], // sigma3\n    shrink: [0.000, 0.000, 0.000], // sigma4\n    xHeight: [0.431, 0.431, 0.431], // sigma5\n    quad: [1.000, 1.171, 1.472], // sigma6\n    extraSpace: [0.000, 0.000, 0.000], // sigma7\n    num1: [0.677, 0.732, 0.925], // sigma8\n    num2: [0.394, 0.384, 0.387], // sigma9\n    num3: [0.444, 0.471, 0.504], // sigma10\n    denom1: [0.686, 0.752, 1.025], // sigma11\n    denom2: [0.345, 0.344, 0.532], // sigma12\n    sup1: [0.413, 0.503, 0.504], // sigma13\n    sup2: [0.363, 0.431, 0.404], // sigma14\n    sup3: [0.289, 0.286, 0.294], // sigma15\n    sub1: [0.150, 0.143, 0.200], // sigma16\n    sub2: [0.247, 0.286, 0.400], // sigma17\n    supDrop: [0.386, 0.353, 0.494], // sigma18\n    subDrop: [0.050, 0.071, 0.100], // sigma19\n    delim1: [2.390, 1.700, 1.980], // sigma20\n    delim2: [1.010, 1.157, 1.420], // sigma21\n    axisHeight: [0.250, 0.250, 0.250], // sigma22\n\n    // These font metrics are extracted from TeX by using tftopl on cmex10.tfm;\n    // they correspond to the font parameters of the extension fonts (family 3).\n    // See the TeXbook, page 441. In AMSTeX, the extension fonts scale; to\n    // match cmex7, we'd use cmex7.tfm values for script and scriptscript\n    // values.\n    defaultRuleThickness: [0.04, 0.049, 0.049], // xi8; cmex7: 0.049\n    bigOpSpacing1: [0.111, 0.111, 0.111], // xi9\n    bigOpSpacing2: [0.166, 0.166, 0.166], // xi10\n    bigOpSpacing3: [0.2, 0.2, 0.2], // xi11\n    bigOpSpacing4: [0.6, 0.611, 0.611], // xi12; cmex7: 0.611\n    bigOpSpacing5: [0.1, 0.143, 0.143], // xi13; cmex7: 0.143\n\n    // The \\sqrt rule width is taken from the height of the surd character.\n    // Since we use the same font at all sizes, this thickness doesn't scale.\n    sqrtRuleThickness: [0.04, 0.04, 0.04],\n\n    // This value determines how large a pt is, for metrics which are defined\n    // in terms of pts.\n    // This value is also used in katex.less; if you change it make sure the\n    // values match.\n    ptPerEm: [10.0, 10.0, 10.0],\n\n    // The space between adjacent `|` columns in an array definition. From\n    // `\\showthe\\doublerulesep` in LaTeX. Equals 2.0 / ptPerEm.\n    doubleRuleSep: [0.2, 0.2, 0.2]\n};\n\n// This map contains a mapping from font name and character code to character\n// metrics, including height, depth, italic correction, and skew (kern from the\n// character to the corresponding \\skewchar)\n// This map is generated via `make metrics`. It should not be changed manually.\n\n\n// These are very rough approximations.  We default to Times New Roman which\n// should have Latin-1 and Cyrillic characters, but may not depending on the\n// operating system.  The metrics do not account for extra height from the\n// accents.  In the case of Cyrillic characters which have both ascenders and\n// descenders we prefer approximations with ascenders, primarily to prevent\n// the fraction bar or root line from intersecting the glyph.\n// TODO(kevinb) allow union of multiple glyph metrics for better accuracy.\nvar extraCharacterMap = {\n    // Latin-1\n    'Å': 'A',\n    'Ç': 'C',\n    'Ð': 'D',\n    'Þ': 'o',\n    'å': 'a',\n    'ç': 'c',\n    'ð': 'd',\n    'þ': 'o',\n\n    // Cyrillic\n    'А': 'A',\n    'Б': 'B',\n    'В': 'B',\n    'Г': 'F',\n    'Д': 'A',\n    'Е': 'E',\n    'Ж': 'K',\n    'З': '3',\n    'И': 'N',\n    'Й': 'N',\n    'К': 'K',\n    'Л': 'N',\n    'М': 'M',\n    'Н': 'H',\n    'О': 'O',\n    'П': 'N',\n    'Р': 'P',\n    'С': 'C',\n    'Т': 'T',\n    'У': 'y',\n    'Ф': 'O',\n    'Х': 'X',\n    'Ц': 'U',\n    'Ч': 'h',\n    'Ш': 'W',\n    'Щ': 'W',\n    'Ъ': 'B',\n    'Ы': 'X',\n    'Ь': 'B',\n    'Э': '3',\n    'Ю': 'X',\n    'Я': 'R',\n    'а': 'a',\n    'б': 'b',\n    'в': 'a',\n    'г': 'r',\n    'д': 'y',\n    'е': 'e',\n    'ж': 'm',\n    'з': 'e',\n    'и': 'n',\n    'й': 'n',\n    'к': 'n',\n    'л': 'n',\n    'м': 'm',\n    'н': 'n',\n    'о': 'o',\n    'п': 'n',\n    'р': 'p',\n    'с': 'c',\n    'т': 'o',\n    'у': 'y',\n    'ф': 'b',\n    'х': 'x',\n    'ц': 'n',\n    'ч': 'n',\n    'ш': 'w',\n    'щ': 'w',\n    'ъ': 'a',\n    'ы': 'm',\n    'ь': 'a',\n    'э': 'e',\n    'ю': 'm',\n    'я': 'r'\n};\n\n/**\n * This function adds new font metrics to default metricMap\n * It can also override existing metrics\n */\nfunction setFontMetrics(fontName, metrics) {\n    fontMetricsData[fontName] = metrics;\n}\n\n/**\n * This function is a convenience function for looking up information in the\n * metricMap table. It takes a character as a string, and a font.\n *\n * Note: the `width` property may be undefined if fontMetricsData.js wasn't\n * built using `Make extended_metrics`.\n */\nfunction getCharacterMetrics(character, font, mode) {\n    if (!fontMetricsData[font]) {\n        throw new Error(\"Font metrics not found for font: \" + font + \".\");\n    }\n    var ch = character.charCodeAt(0);\n    if (character[0] in extraCharacterMap) {\n        ch = extraCharacterMap[character[0]].charCodeAt(0);\n    }\n    var metrics = fontMetricsData[font][ch];\n\n    if (!metrics && mode === 'text') {\n        // We don't typically have font metrics for Asian scripts.\n        // But since we support them in text mode, we need to return\n        // some sort of metrics.\n        // So if the character is in a script we support but we\n        // don't have metrics for it, just use the metrics for\n        // the Latin capital letter M. This is close enough because\n        // we (currently) only care about the height of the glpyh\n        // not its width.\n        if (supportedCodepoint(ch)) {\n            metrics = fontMetricsData[font][77]; // 77 is the charcode for 'M'\n        }\n    }\n\n    if (metrics) {\n        return {\n            depth: metrics[0],\n            height: metrics[1],\n            italic: metrics[2],\n            skew: metrics[3],\n            width: metrics[4]\n        };\n    }\n}\n\nvar fontMetricsBySizeIndex = {};\n\n/**\n * Get the font metrics for a given size.\n */\nfunction getGlobalMetrics(size) {\n    var sizeIndex = void 0;\n    if (size >= 5) {\n        sizeIndex = 0;\n    } else if (size >= 3) {\n        sizeIndex = 1;\n    } else {\n        sizeIndex = 2;\n    }\n    if (!fontMetricsBySizeIndex[sizeIndex]) {\n        var metrics = fontMetricsBySizeIndex[sizeIndex] = {\n            cssEmPerMu: sigmasAndXis.quad[sizeIndex] / 18\n        };\n        for (var key in sigmasAndXis) {\n            if (sigmasAndXis.hasOwnProperty(key)) {\n                metrics[key] = sigmasAndXis[key][sizeIndex];\n            }\n        }\n    }\n    return fontMetricsBySizeIndex[sizeIndex];\n}\n// CONCATENATED MODULE: ./src/symbols.js\n\n// Some of these have a \"-token\" suffix since these are also used as `ParseNode`\n// types for raw text tokens, and we want to avoid conflicts with higher-level\n// `ParseNode` types. These `ParseNode`s are constructed within `Parser` by\n// looking up the `symbols` map.\n\n/**\n * This file holds a list of all no-argument functions and single-character\n * symbols (like 'a' or ';').\n *\n * For each of the symbols, there are three properties they can have:\n * - font (required): the font to be used for this symbol. Either \"main\" (the\n     normal font), or \"ams\" (the ams fonts).\n * - group (required): the ParseNode group type the symbol should have (i.e.\n     \"textord\", \"mathord\", etc).\n     See https://github.com/Khan/KaTeX/wiki/Examining-TeX#group-types\n * - replace: the character that this symbol or function should be\n *   replaced with (i.e. \"\\phi\" has a replace value of \"\\u03d5\", the phi\n *   character in the main font).\n *\n * The outermost map in the table indicates what mode the symbols should be\n * accepted in (e.g. \"math\" or \"text\").\n */\n\nvar ATOMS = {\n    \"bin\": 1,\n    \"close\": 1,\n    \"inner\": 1,\n    \"open\": 1,\n    \"punct\": 1,\n    \"rel\": 1\n};\nvar NON_ATOMS = {\n    \"accent-token\": 1,\n    \"mathord\": 1,\n    \"op-token\": 1,\n    \"spacing\": 1,\n    \"textord\": 1\n};\n\nvar symbols = {\n    \"math\": {},\n    \"text\": {}\n};\n/* harmony default export */ var src_symbols = (symbols);\n\n/** `acceptUnicodeChar = true` is only applicable if `replace` is set. */\nfunction defineSymbol(mode, font, group, replace, name, acceptUnicodeChar) {\n    symbols[mode][name] = { font: font, group: group, replace: replace };\n\n    if (acceptUnicodeChar && replace) {\n        symbols[mode][replace] = symbols[mode][name];\n    }\n}\n\n// Some abbreviations for commonly used strings.\n// This helps minify the code, and also spotting typos using jshint.\n\n// modes:\nvar symbols_math = \"math\";\nvar symbols_text = \"text\";\n\n// fonts:\nvar main = \"main\";\nvar ams = \"ams\";\n\n// groups:\nvar symbols_accent = \"accent-token\";\nvar bin = \"bin\";\nvar symbols_close = \"close\";\nvar symbols_inner = \"inner\";\nvar mathord = \"mathord\";\nvar op = \"op-token\";\nvar symbols_open = \"open\";\nvar punct = \"punct\";\nvar rel = \"rel\";\nvar spacing = \"spacing\";\nvar symbols_textord = \"textord\";\n\n// Now comes the symbol table\n\n// Relation Symbols\ndefineSymbol(symbols_math, main, rel, \"\\u2261\", \"\\\\equiv\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u227A\", \"\\\\prec\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u227B\", \"\\\\succ\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u223C\", \"\\\\sim\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u22A5\", \"\\\\perp\");\ndefineSymbol(symbols_math, main, rel, \"\\u2AAF\", \"\\\\preceq\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2AB0\", \"\\\\succeq\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2243\", \"\\\\simeq\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2223\", \"\\\\mid\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u226A\", \"\\\\ll\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u226B\", \"\\\\gg\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u224D\", \"\\\\asymp\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2225\", \"\\\\parallel\");\ndefineSymbol(symbols_math, main, rel, \"\\u22C8\", \"\\\\bowtie\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2323\", \"\\\\smile\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2291\", \"\\\\sqsubseteq\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2292\", \"\\\\sqsupseteq\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2250\", \"\\\\doteq\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2322\", \"\\\\frown\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u220B\", \"\\\\ni\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u221D\", \"\\\\propto\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u22A2\", \"\\\\vdash\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u22A3\", \"\\\\dashv\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u220B\", \"\\\\owns\");\n\n// Punctuation\ndefineSymbol(symbols_math, main, punct, \".\", \"\\\\ldotp\");\ndefineSymbol(symbols_math, main, punct, \"\\u22C5\", \"\\\\cdotp\");\n\n// Misc Symbols\ndefineSymbol(symbols_math, main, symbols_textord, \"#\", \"\\\\#\");\ndefineSymbol(symbols_text, main, symbols_textord, \"#\", \"\\\\#\");\ndefineSymbol(symbols_math, main, symbols_textord, \"&\", \"\\\\&\");\ndefineSymbol(symbols_text, main, symbols_textord, \"&\", \"\\\\&\");\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2135\", \"\\\\aleph\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2200\", \"\\\\forall\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u210F\", \"\\\\hbar\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2203\", \"\\\\exists\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2207\", \"\\\\nabla\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u266D\", \"\\\\flat\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2113\", \"\\\\ell\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u266E\", \"\\\\natural\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2663\", \"\\\\clubsuit\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2118\", \"\\\\wp\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u266F\", \"\\\\sharp\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2662\", \"\\\\diamondsuit\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u211C\", \"\\\\Re\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2661\", \"\\\\heartsuit\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2111\", \"\\\\Im\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2660\", \"\\\\spadesuit\", true);\ndefineSymbol(symbols_text, main, symbols_textord, \"\\xA7\", \"\\\\S\", true);\ndefineSymbol(symbols_text, main, symbols_textord, \"\\xB6\", \"\\\\P\", true);\n\n// Math and Text\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2020\", \"\\\\dag\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u2020\", \"\\\\dag\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u2020\", \"\\\\textdagger\");\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2021\", \"\\\\ddag\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u2021\", \"\\\\ddag\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u2021\", \"\\\\textdaggerdbl\");\n\n// Large Delimiters\ndefineSymbol(symbols_math, main, symbols_close, \"\\u23B1\", \"\\\\rmoustache\", true);\ndefineSymbol(symbols_math, main, symbols_open, \"\\u23B0\", \"\\\\lmoustache\", true);\ndefineSymbol(symbols_math, main, symbols_close, \"\\u27EF\", \"\\\\rgroup\", true);\ndefineSymbol(symbols_math, main, symbols_open, \"\\u27EE\", \"\\\\lgroup\", true);\n\n// Binary Operators\ndefineSymbol(symbols_math, main, bin, \"\\u2213\", \"\\\\mp\", true);\ndefineSymbol(symbols_math, main, bin, \"\\u2296\", \"\\\\ominus\", true);\ndefineSymbol(symbols_math, main, bin, \"\\u228E\", \"\\\\uplus\", true);\ndefineSymbol(symbols_math, main, bin, \"\\u2293\", \"\\\\sqcap\", true);\ndefineSymbol(symbols_math, main, bin, \"\\u2217\", \"\\\\ast\");\ndefineSymbol(symbols_math, main, bin, \"\\u2294\", \"\\\\sqcup\", true);\ndefineSymbol(symbols_math, main, bin, \"\\u25EF\", \"\\\\bigcirc\");\ndefineSymbol(symbols_math, main, bin, \"\\u2219\", \"\\\\bullet\");\ndefineSymbol(symbols_math, main, bin, \"\\u2021\", \"\\\\ddagger\");\ndefineSymbol(symbols_math, main, bin, \"\\u2240\", \"\\\\wr\", true);\ndefineSymbol(symbols_math, main, bin, \"\\u2A3F\", \"\\\\amalg\");\ndefineSymbol(symbols_math, main, bin, \"&\", \"\\\\And\"); // from amsmath\n\n// Arrow Symbols\ndefineSymbol(symbols_math, main, rel, \"\\u27F5\", \"\\\\longleftarrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u21D0\", \"\\\\Leftarrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u27F8\", \"\\\\Longleftarrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u27F6\", \"\\\\longrightarrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u21D2\", \"\\\\Rightarrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u27F9\", \"\\\\Longrightarrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2194\", \"\\\\leftrightarrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u27F7\", \"\\\\longleftrightarrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u21D4\", \"\\\\Leftrightarrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u27FA\", \"\\\\Longleftrightarrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u21A6\", \"\\\\mapsto\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u27FC\", \"\\\\longmapsto\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2197\", \"\\\\nearrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u21A9\", \"\\\\hookleftarrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u21AA\", \"\\\\hookrightarrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2198\", \"\\\\searrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u21BC\", \"\\\\leftharpoonup\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u21C0\", \"\\\\rightharpoonup\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2199\", \"\\\\swarrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u21BD\", \"\\\\leftharpoondown\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u21C1\", \"\\\\rightharpoondown\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2196\", \"\\\\nwarrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u21CC\", \"\\\\rightleftharpoons\", true);\n\n// AMS Negated Binary Relations\ndefineSymbol(symbols_math, ams, rel, \"\\u226E\", \"\\\\nless\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\uE010\", \"\\\\nleqslant\");\ndefineSymbol(symbols_math, ams, rel, \"\\uE011\", \"\\\\nleqq\");\ndefineSymbol(symbols_math, ams, rel, \"\\u2A87\", \"\\\\lneq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2268\", \"\\\\lneqq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\uE00C\", \"\\\\lvertneqq\");\ndefineSymbol(symbols_math, ams, rel, \"\\u22E6\", \"\\\\lnsim\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2A89\", \"\\\\lnapprox\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2280\", \"\\\\nprec\", true);\n// unicode-math maps \\u22e0 to \\npreccurlyeq. We'll use the AMS synonym.\ndefineSymbol(symbols_math, ams, rel, \"\\u22E0\", \"\\\\npreceq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22E8\", \"\\\\precnsim\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2AB9\", \"\\\\precnapprox\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2241\", \"\\\\nsim\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\uE006\", \"\\\\nshortmid\");\ndefineSymbol(symbols_math, ams, rel, \"\\u2224\", \"\\\\nmid\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22AC\", \"\\\\nvdash\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22AD\", \"\\\\nvDash\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22EA\", \"\\\\ntriangleleft\");\ndefineSymbol(symbols_math, ams, rel, \"\\u22EC\", \"\\\\ntrianglelefteq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u228A\", \"\\\\subsetneq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\uE01A\", \"\\\\varsubsetneq\");\ndefineSymbol(symbols_math, ams, rel, \"\\u2ACB\", \"\\\\subsetneqq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\uE017\", \"\\\\varsubsetneqq\");\ndefineSymbol(symbols_math, ams, rel, \"\\u226F\", \"\\\\ngtr\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\uE00F\", \"\\\\ngeqslant\");\ndefineSymbol(symbols_math, ams, rel, \"\\uE00E\", \"\\\\ngeqq\");\ndefineSymbol(symbols_math, ams, rel, \"\\u2A88\", \"\\\\gneq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2269\", \"\\\\gneqq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\uE00D\", \"\\\\gvertneqq\");\ndefineSymbol(symbols_math, ams, rel, \"\\u22E7\", \"\\\\gnsim\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2A8A\", \"\\\\gnapprox\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2281\", \"\\\\nsucc\", true);\n// unicode-math maps \\u22e1 to \\nsucccurlyeq. We'll use the AMS synonym.\ndefineSymbol(symbols_math, ams, rel, \"\\u22E1\", \"\\\\nsucceq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22E9\", \"\\\\succnsim\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2ABA\", \"\\\\succnapprox\", true);\n// unicode-math maps \\u2246 to \\simneqq. We'll use the AMS synonym.\ndefineSymbol(symbols_math, ams, rel, \"\\u2246\", \"\\\\ncong\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\uE007\", \"\\\\nshortparallel\");\ndefineSymbol(symbols_math, ams, rel, \"\\u2226\", \"\\\\nparallel\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22AF\", \"\\\\nVDash\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22EB\", \"\\\\ntriangleright\");\ndefineSymbol(symbols_math, ams, rel, \"\\u22ED\", \"\\\\ntrianglerighteq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\uE018\", \"\\\\nsupseteqq\");\ndefineSymbol(symbols_math, ams, rel, \"\\u228B\", \"\\\\supsetneq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\uE01B\", \"\\\\varsupsetneq\");\ndefineSymbol(symbols_math, ams, rel, \"\\u2ACC\", \"\\\\supsetneqq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\uE019\", \"\\\\varsupsetneqq\");\ndefineSymbol(symbols_math, ams, rel, \"\\u22AE\", \"\\\\nVdash\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2AB5\", \"\\\\precneqq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2AB6\", \"\\\\succneqq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\uE016\", \"\\\\nsubseteqq\");\ndefineSymbol(symbols_math, ams, bin, \"\\u22B4\", \"\\\\unlhd\");\ndefineSymbol(symbols_math, ams, bin, \"\\u22B5\", \"\\\\unrhd\");\n\n// AMS Negated Arrows\ndefineSymbol(symbols_math, ams, rel, \"\\u219A\", \"\\\\nleftarrow\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u219B\", \"\\\\nrightarrow\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21CD\", \"\\\\nLeftarrow\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21CF\", \"\\\\nRightarrow\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21AE\", \"\\\\nleftrightarrow\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21CE\", \"\\\\nLeftrightarrow\", true);\n\n// AMS Misc\ndefineSymbol(symbols_math, ams, rel, \"\\u25B3\", \"\\\\vartriangle\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u210F\", \"\\\\hslash\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u25BD\", \"\\\\triangledown\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u25CA\", \"\\\\lozenge\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u24C8\", \"\\\\circledS\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\xAE\", \"\\\\circledR\");\ndefineSymbol(symbols_text, ams, symbols_textord, \"\\xAE\", \"\\\\circledR\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u2221\", \"\\\\measuredangle\", true);\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u2204\", \"\\\\nexists\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u2127\", \"\\\\mho\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u2132\", \"\\\\Finv\", true);\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u2141\", \"\\\\Game\", true);\ndefineSymbol(symbols_math, ams, symbols_textord, \"k\", \"\\\\Bbbk\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u2035\", \"\\\\backprime\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u25B2\", \"\\\\blacktriangle\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u25BC\", \"\\\\blacktriangledown\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u25A0\", \"\\\\blacksquare\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u29EB\", \"\\\\blacklozenge\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u2605\", \"\\\\bigstar\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u2222\", \"\\\\sphericalangle\", true);\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u2201\", \"\\\\complement\", true);\n// unicode-math maps U+F0 (ð) to \\matheth. We map to AMS function \\eth\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\xF0\", \"\\\\eth\", true);\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u2571\", \"\\\\diagup\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u2572\", \"\\\\diagdown\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u25A1\", \"\\\\square\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u25A1\", \"\\\\Box\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u25CA\", \"\\\\Diamond\");\n// unicode-math maps U+A5 to \\mathyen. We map to AMS function \\yen\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\xA5\", \"\\\\yen\", true);\ndefineSymbol(symbols_text, ams, symbols_textord, \"\\xA5\", \"\\\\yen\", true);\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u2713\", \"\\\\checkmark\", true);\ndefineSymbol(symbols_text, ams, symbols_textord, \"\\u2713\", \"\\\\checkmark\");\n\n// AMS Hebrew\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u2136\", \"\\\\beth\", true);\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u2138\", \"\\\\daleth\", true);\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u2137\", \"\\\\gimel\", true);\n\n// AMS Greek\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u03DD\", \"\\\\digamma\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u03F0\", \"\\\\varkappa\");\n\n// AMS Delimiters\ndefineSymbol(symbols_math, ams, symbols_open, \"\\u250C\", \"\\\\ulcorner\", true);\ndefineSymbol(symbols_math, ams, symbols_close, \"\\u2510\", \"\\\\urcorner\", true);\ndefineSymbol(symbols_math, ams, symbols_open, \"\\u2514\", \"\\\\llcorner\", true);\ndefineSymbol(symbols_math, ams, symbols_close, \"\\u2518\", \"\\\\lrcorner\", true);\n\n// AMS Binary Relations\ndefineSymbol(symbols_math, ams, rel, \"\\u2266\", \"\\\\leqq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2A7D\", \"\\\\leqslant\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2A95\", \"\\\\eqslantless\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2272\", \"\\\\lesssim\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2A85\", \"\\\\lessapprox\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u224A\", \"\\\\approxeq\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u22D6\", \"\\\\lessdot\");\ndefineSymbol(symbols_math, ams, rel, \"\\u22D8\", \"\\\\lll\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2276\", \"\\\\lessgtr\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22DA\", \"\\\\lesseqgtr\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2A8B\", \"\\\\lesseqqgtr\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2251\", \"\\\\doteqdot\");\ndefineSymbol(symbols_math, ams, rel, \"\\u2253\", \"\\\\risingdotseq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2252\", \"\\\\fallingdotseq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u223D\", \"\\\\backsim\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22CD\", \"\\\\backsimeq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2AC5\", \"\\\\subseteqq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22D0\", \"\\\\Subset\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u228F\", \"\\\\sqsubset\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u227C\", \"\\\\preccurlyeq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22DE\", \"\\\\curlyeqprec\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u227E\", \"\\\\precsim\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2AB7\", \"\\\\precapprox\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22B2\", \"\\\\vartriangleleft\");\ndefineSymbol(symbols_math, ams, rel, \"\\u22B4\", \"\\\\trianglelefteq\");\ndefineSymbol(symbols_math, ams, rel, \"\\u22A8\", \"\\\\vDash\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22AA\", \"\\\\Vvdash\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2323\", \"\\\\smallsmile\");\ndefineSymbol(symbols_math, ams, rel, \"\\u2322\", \"\\\\smallfrown\");\ndefineSymbol(symbols_math, ams, rel, \"\\u224F\", \"\\\\bumpeq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u224E\", \"\\\\Bumpeq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2267\", \"\\\\geqq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2A7E\", \"\\\\geqslant\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2A96\", \"\\\\eqslantgtr\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2273\", \"\\\\gtrsim\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2A86\", \"\\\\gtrapprox\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u22D7\", \"\\\\gtrdot\");\ndefineSymbol(symbols_math, ams, rel, \"\\u22D9\", \"\\\\ggg\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2277\", \"\\\\gtrless\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22DB\", \"\\\\gtreqless\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2A8C\", \"\\\\gtreqqless\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2256\", \"\\\\eqcirc\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2257\", \"\\\\circeq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u225C\", \"\\\\triangleq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u223C\", \"\\\\thicksim\");\ndefineSymbol(symbols_math, ams, rel, \"\\u2248\", \"\\\\thickapprox\");\ndefineSymbol(symbols_math, ams, rel, \"\\u2AC6\", \"\\\\supseteqq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22D1\", \"\\\\Supset\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2290\", \"\\\\sqsupset\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u227D\", \"\\\\succcurlyeq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22DF\", \"\\\\curlyeqsucc\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u227F\", \"\\\\succsim\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2AB8\", \"\\\\succapprox\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22B3\", \"\\\\vartriangleright\");\ndefineSymbol(symbols_math, ams, rel, \"\\u22B5\", \"\\\\trianglerighteq\");\ndefineSymbol(symbols_math, ams, rel, \"\\u22A9\", \"\\\\Vdash\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2223\", \"\\\\shortmid\");\ndefineSymbol(symbols_math, ams, rel, \"\\u2225\", \"\\\\shortparallel\");\ndefineSymbol(symbols_math, ams, rel, \"\\u226C\", \"\\\\between\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22D4\", \"\\\\pitchfork\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u221D\", \"\\\\varpropto\");\ndefineSymbol(symbols_math, ams, rel, \"\\u25C0\", \"\\\\blacktriangleleft\");\n// unicode-math says that \\therefore is a mathord atom.\n// We kept the amssymb atom type, which is rel.\ndefineSymbol(symbols_math, ams, rel, \"\\u2234\", \"\\\\therefore\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u220D\", \"\\\\backepsilon\");\ndefineSymbol(symbols_math, ams, rel, \"\\u25B6\", \"\\\\blacktriangleright\");\n// unicode-math says that \\because is a mathord atom.\n// We kept the amssymb atom type, which is rel.\ndefineSymbol(symbols_math, ams, rel, \"\\u2235\", \"\\\\because\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22D8\", \"\\\\llless\");\ndefineSymbol(symbols_math, ams, rel, \"\\u22D9\", \"\\\\gggtr\");\ndefineSymbol(symbols_math, ams, bin, \"\\u22B2\", \"\\\\lhd\");\ndefineSymbol(symbols_math, ams, bin, \"\\u22B3\", \"\\\\rhd\");\ndefineSymbol(symbols_math, ams, rel, \"\\u2242\", \"\\\\eqsim\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u22C8\", \"\\\\Join\");\ndefineSymbol(symbols_math, ams, rel, \"\\u2251\", \"\\\\Doteq\", true);\n\n// AMS Binary Operators\ndefineSymbol(symbols_math, ams, bin, \"\\u2214\", \"\\\\dotplus\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u2216\", \"\\\\smallsetminus\");\ndefineSymbol(symbols_math, ams, bin, \"\\u22D2\", \"\\\\Cap\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u22D3\", \"\\\\Cup\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u2A5E\", \"\\\\doublebarwedge\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u229F\", \"\\\\boxminus\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u229E\", \"\\\\boxplus\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u22C7\", \"\\\\divideontimes\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u22C9\", \"\\\\ltimes\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u22CA\", \"\\\\rtimes\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u22CB\", \"\\\\leftthreetimes\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u22CC\", \"\\\\rightthreetimes\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u22CF\", \"\\\\curlywedge\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u22CE\", \"\\\\curlyvee\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u229D\", \"\\\\circleddash\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u229B\", \"\\\\circledast\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u22C5\", \"\\\\centerdot\");\ndefineSymbol(symbols_math, ams, bin, \"\\u22BA\", \"\\\\intercal\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u22D2\", \"\\\\doublecap\");\ndefineSymbol(symbols_math, ams, bin, \"\\u22D3\", \"\\\\doublecup\");\ndefineSymbol(symbols_math, ams, bin, \"\\u22A0\", \"\\\\boxtimes\", true);\n\n// AMS Arrows\n// Note: unicode-math maps \\u21e2 to their own function \\rightdasharrow.\n// We'll map it to AMS function \\dashrightarrow. It produces the same atom.\ndefineSymbol(symbols_math, ams, rel, \"\\u21E2\", \"\\\\dashrightarrow\", true);\n// unicode-math maps \\u21e0 to \\leftdasharrow. We'll use the AMS synonym.\ndefineSymbol(symbols_math, ams, rel, \"\\u21E0\", \"\\\\dashleftarrow\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21C7\", \"\\\\leftleftarrows\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21C6\", \"\\\\leftrightarrows\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21DA\", \"\\\\Lleftarrow\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u219E\", \"\\\\twoheadleftarrow\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21A2\", \"\\\\leftarrowtail\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21AB\", \"\\\\looparrowleft\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21CB\", \"\\\\leftrightharpoons\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21B6\", \"\\\\curvearrowleft\", true);\n// unicode-math maps \\u21ba to \\acwopencirclearrow. We'll use the AMS synonym.\ndefineSymbol(symbols_math, ams, rel, \"\\u21BA\", \"\\\\circlearrowleft\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21B0\", \"\\\\Lsh\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21C8\", \"\\\\upuparrows\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21BF\", \"\\\\upharpoonleft\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21C3\", \"\\\\downharpoonleft\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22B8\", \"\\\\multimap\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21AD\", \"\\\\leftrightsquigarrow\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21C9\", \"\\\\rightrightarrows\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21C4\", \"\\\\rightleftarrows\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21A0\", \"\\\\twoheadrightarrow\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21A3\", \"\\\\rightarrowtail\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21AC\", \"\\\\looparrowright\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21B7\", \"\\\\curvearrowright\", true);\n// unicode-math maps \\u21bb to \\cwopencirclearrow. We'll use the AMS synonym.\ndefineSymbol(symbols_math, ams, rel, \"\\u21BB\", \"\\\\circlearrowright\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21B1\", \"\\\\Rsh\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21CA\", \"\\\\downdownarrows\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21BE\", \"\\\\upharpoonright\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21C2\", \"\\\\downharpoonright\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21DD\", \"\\\\rightsquigarrow\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21DD\", \"\\\\leadsto\");\ndefineSymbol(symbols_math, ams, rel, \"\\u21DB\", \"\\\\Rrightarrow\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21BE\", \"\\\\restriction\");\n\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2018\", \"`\");\ndefineSymbol(symbols_math, main, symbols_textord, \"$\", \"\\\\$\");\ndefineSymbol(symbols_text, main, symbols_textord, \"$\", \"\\\\$\");\ndefineSymbol(symbols_text, main, symbols_textord, \"$\", \"\\\\textdollar\");\ndefineSymbol(symbols_math, main, symbols_textord, \"%\", \"\\\\%\");\ndefineSymbol(symbols_text, main, symbols_textord, \"%\", \"\\\\%\");\ndefineSymbol(symbols_math, main, symbols_textord, \"_\", \"\\\\_\");\ndefineSymbol(symbols_text, main, symbols_textord, \"_\", \"\\\\_\");\ndefineSymbol(symbols_text, main, symbols_textord, \"_\", \"\\\\textunderscore\");\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2220\", \"\\\\angle\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u221E\", \"\\\\infty\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2032\", \"\\\\prime\");\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u25B3\", \"\\\\triangle\");\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u0393\", \"\\\\Gamma\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u0394\", \"\\\\Delta\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u0398\", \"\\\\Theta\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u039B\", \"\\\\Lambda\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u039E\", \"\\\\Xi\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u03A0\", \"\\\\Pi\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u03A3\", \"\\\\Sigma\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u03A5\", \"\\\\Upsilon\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u03A6\", \"\\\\Phi\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u03A8\", \"\\\\Psi\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u03A9\", \"\\\\Omega\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"A\", \"\\u0391\");\ndefineSymbol(symbols_math, main, symbols_textord, \"B\", \"\\u0392\");\ndefineSymbol(symbols_math, main, symbols_textord, \"E\", \"\\u0395\");\ndefineSymbol(symbols_math, main, symbols_textord, \"Z\", \"\\u0396\");\ndefineSymbol(symbols_math, main, symbols_textord, \"H\", \"\\u0397\");\ndefineSymbol(symbols_math, main, symbols_textord, \"I\", \"\\u0399\");\ndefineSymbol(symbols_math, main, symbols_textord, \"K\", \"\\u039A\");\ndefineSymbol(symbols_math, main, symbols_textord, \"M\", \"\\u039C\");\ndefineSymbol(symbols_math, main, symbols_textord, \"N\", \"\\u039D\");\ndefineSymbol(symbols_math, main, symbols_textord, \"O\", \"\\u039F\");\ndefineSymbol(symbols_math, main, symbols_textord, \"P\", \"\\u03A1\");\ndefineSymbol(symbols_math, main, symbols_textord, \"T\", \"\\u03A4\");\ndefineSymbol(symbols_math, main, symbols_textord, \"X\", \"\\u03A7\");\ndefineSymbol(symbols_math, main, symbols_textord, \"\\xAC\", \"\\\\neg\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\xAC\", \"\\\\lnot\");\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u22A4\", \"\\\\top\");\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u22A5\", \"\\\\bot\");\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2205\", \"\\\\emptyset\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u2205\", \"\\\\varnothing\");\ndefineSymbol(symbols_math, main, mathord, \"\\u03B1\", \"\\\\alpha\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03B2\", \"\\\\beta\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03B3\", \"\\\\gamma\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03B4\", \"\\\\delta\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03F5\", \"\\\\epsilon\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03B6\", \"\\\\zeta\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03B7\", \"\\\\eta\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03B8\", \"\\\\theta\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03B9\", \"\\\\iota\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03BA\", \"\\\\kappa\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03BB\", \"\\\\lambda\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03BC\", \"\\\\mu\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03BD\", \"\\\\nu\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03BE\", \"\\\\xi\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03BF\", \"\\\\omicron\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03C0\", \"\\\\pi\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03C1\", \"\\\\rho\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03C3\", \"\\\\sigma\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03C4\", \"\\\\tau\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03C5\", \"\\\\upsilon\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03D5\", \"\\\\phi\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03C7\", \"\\\\chi\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03C8\", \"\\\\psi\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03C9\", \"\\\\omega\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03B5\", \"\\\\varepsilon\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03D1\", \"\\\\vartheta\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03D6\", \"\\\\varpi\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03F1\", \"\\\\varrho\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03C2\", \"\\\\varsigma\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03C6\", \"\\\\varphi\", true);\ndefineSymbol(symbols_math, main, bin, \"\\u2217\", \"*\");\ndefineSymbol(symbols_math, main, bin, \"+\", \"+\");\ndefineSymbol(symbols_math, main, bin, \"\\u2212\", \"-\");\ndefineSymbol(symbols_math, main, bin, \"\\u22C5\", \"\\\\cdot\", true);\ndefineSymbol(symbols_math, main, bin, \"\\u2218\", \"\\\\circ\");\ndefineSymbol(symbols_math, main, bin, \"\\xF7\", \"\\\\div\", true);\ndefineSymbol(symbols_math, main, bin, \"\\xB1\", \"\\\\pm\", true);\ndefineSymbol(symbols_math, main, bin, \"\\xD7\", \"\\\\times\", true);\ndefineSymbol(symbols_math, main, bin, \"\\u2229\", \"\\\\cap\", true);\ndefineSymbol(symbols_math, main, bin, \"\\u222A\", \"\\\\cup\", true);\ndefineSymbol(symbols_math, main, bin, \"\\u2216\", \"\\\\setminus\");\ndefineSymbol(symbols_math, main, bin, \"\\u2227\", \"\\\\land\");\ndefineSymbol(symbols_math, main, bin, \"\\u2228\", \"\\\\lor\");\ndefineSymbol(symbols_math, main, bin, \"\\u2227\", \"\\\\wedge\", true);\ndefineSymbol(symbols_math, main, bin, \"\\u2228\", \"\\\\vee\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u221A\", \"\\\\surd\");\ndefineSymbol(symbols_math, main, symbols_open, \"(\", \"(\");\ndefineSymbol(symbols_math, main, symbols_open, \"[\", \"[\");\ndefineSymbol(symbols_math, main, symbols_open, \"\\u27E8\", \"\\\\langle\", true);\ndefineSymbol(symbols_math, main, symbols_open, \"\\u2223\", \"\\\\lvert\");\ndefineSymbol(symbols_math, main, symbols_open, \"\\u2225\", \"\\\\lVert\");\ndefineSymbol(symbols_math, main, symbols_close, \")\", \")\");\ndefineSymbol(symbols_math, main, symbols_close, \"]\", \"]\");\ndefineSymbol(symbols_math, main, symbols_close, \"?\", \"?\");\ndefineSymbol(symbols_math, main, symbols_close, \"!\", \"!\");\ndefineSymbol(symbols_math, main, symbols_close, \"\\u27E9\", \"\\\\rangle\", true);\ndefineSymbol(symbols_math, main, symbols_close, \"\\u2223\", \"\\\\rvert\");\ndefineSymbol(symbols_math, main, symbols_close, \"\\u2225\", \"\\\\rVert\");\ndefineSymbol(symbols_math, main, rel, \"=\", \"=\");\ndefineSymbol(symbols_math, main, rel, \"<\", \"<\");\ndefineSymbol(symbols_math, main, rel, \">\", \">\");\ndefineSymbol(symbols_math, main, rel, \":\", \":\");\ndefineSymbol(symbols_math, main, rel, \"\\u2248\", \"\\\\approx\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2245\", \"\\\\cong\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2265\", \"\\\\ge\");\ndefineSymbol(symbols_math, main, rel, \"\\u2265\", \"\\\\geq\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2190\", \"\\\\gets\");\ndefineSymbol(symbols_math, main, rel, \">\", \"\\\\gt\");\ndefineSymbol(symbols_math, main, rel, \"\\u2208\", \"\\\\in\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u0338\", \"\\\\@not\");\ndefineSymbol(symbols_math, main, rel, \"\\u2282\", \"\\\\subset\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2283\", \"\\\\supset\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2286\", \"\\\\subseteq\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2287\", \"\\\\supseteq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2288\", \"\\\\nsubseteq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2289\", \"\\\\nsupseteq\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u22A8\", \"\\\\models\");\ndefineSymbol(symbols_math, main, rel, \"\\u2190\", \"\\\\leftarrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2264\", \"\\\\le\");\ndefineSymbol(symbols_math, main, rel, \"\\u2264\", \"\\\\leq\", true);\ndefineSymbol(symbols_math, main, rel, \"<\", \"\\\\lt\");\ndefineSymbol(symbols_math, main, rel, \"\\u2192\", \"\\\\rightarrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2192\", \"\\\\to\");\ndefineSymbol(symbols_math, ams, rel, \"\\u2271\", \"\\\\ngeq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2270\", \"\\\\nleq\", true);\ndefineSymbol(symbols_math, main, spacing, \"\\xA0\", \"\\\\ \");\ndefineSymbol(symbols_math, main, spacing, \"\\xA0\", \"~\");\ndefineSymbol(symbols_math, main, spacing, \"\\xA0\", \"\\\\space\");\n// Ref: LaTeX Source 2e: \\DeclareRobustCommand{\\nobreakspace}{%\ndefineSymbol(symbols_math, main, spacing, \"\\xA0\", \"\\\\nobreakspace\");\ndefineSymbol(symbols_text, main, spacing, \"\\xA0\", \"\\\\ \");\ndefineSymbol(symbols_text, main, spacing, \"\\xA0\", \"~\");\ndefineSymbol(symbols_text, main, spacing, \"\\xA0\", \"\\\\space\");\ndefineSymbol(symbols_text, main, spacing, \"\\xA0\", \"\\\\nobreakspace\");\ndefineSymbol(symbols_math, main, spacing, null, \"\\\\nobreak\");\ndefineSymbol(symbols_math, main, spacing, null, \"\\\\allowbreak\");\ndefineSymbol(symbols_math, main, punct, \",\", \",\");\ndefineSymbol(symbols_math, main, punct, \";\", \";\");\ndefineSymbol(symbols_math, ams, bin, \"\\u22BC\", \"\\\\barwedge\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u22BB\", \"\\\\veebar\", true);\ndefineSymbol(symbols_math, main, bin, \"\\u2299\", \"\\\\odot\", true);\ndefineSymbol(symbols_math, main, bin, \"\\u2295\", \"\\\\oplus\", true);\ndefineSymbol(symbols_math, main, bin, \"\\u2297\", \"\\\\otimes\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2202\", \"\\\\partial\", true);\ndefineSymbol(symbols_math, main, bin, \"\\u2298\", \"\\\\oslash\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u229A\", \"\\\\circledcirc\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u22A1\", \"\\\\boxdot\", true);\ndefineSymbol(symbols_math, main, bin, \"\\u25B3\", \"\\\\bigtriangleup\");\ndefineSymbol(symbols_math, main, bin, \"\\u25BD\", \"\\\\bigtriangledown\");\ndefineSymbol(symbols_math, main, bin, \"\\u2020\", \"\\\\dagger\");\ndefineSymbol(symbols_math, main, bin, \"\\u22C4\", \"\\\\diamond\");\ndefineSymbol(symbols_math, main, bin, \"\\u22C6\", \"\\\\star\");\ndefineSymbol(symbols_math, main, bin, \"\\u25C3\", \"\\\\triangleleft\");\ndefineSymbol(symbols_math, main, bin, \"\\u25B9\", \"\\\\triangleright\");\ndefineSymbol(symbols_math, main, symbols_open, \"{\", \"\\\\{\");\ndefineSymbol(symbols_text, main, symbols_textord, \"{\", \"\\\\{\");\ndefineSymbol(symbols_text, main, symbols_textord, \"{\", \"\\\\textbraceleft\");\ndefineSymbol(symbols_math, main, symbols_close, \"}\", \"\\\\}\");\ndefineSymbol(symbols_text, main, symbols_textord, \"}\", \"\\\\}\");\ndefineSymbol(symbols_text, main, symbols_textord, \"}\", \"\\\\textbraceright\");\ndefineSymbol(symbols_math, main, symbols_open, \"{\", \"\\\\lbrace\");\ndefineSymbol(symbols_math, main, symbols_close, \"}\", \"\\\\rbrace\");\ndefineSymbol(symbols_math, main, symbols_open, \"[\", \"\\\\lbrack\");\ndefineSymbol(symbols_text, main, symbols_textord, \"[\", \"\\\\lbrack\");\ndefineSymbol(symbols_math, main, symbols_close, \"]\", \"\\\\rbrack\");\ndefineSymbol(symbols_text, main, symbols_textord, \"]\", \"\\\\rbrack\");\ndefineSymbol(symbols_text, main, symbols_textord, \"<\", \"\\\\textless\"); // in T1 fontenc\ndefineSymbol(symbols_text, main, symbols_textord, \">\", \"\\\\textgreater\"); // in T1 fontenc\ndefineSymbol(symbols_math, main, symbols_open, \"\\u230A\", \"\\\\lfloor\", true);\ndefineSymbol(symbols_math, main, symbols_close, \"\\u230B\", \"\\\\rfloor\", true);\ndefineSymbol(symbols_math, main, symbols_open, \"\\u2308\", \"\\\\lceil\", true);\ndefineSymbol(symbols_math, main, symbols_close, \"\\u2309\", \"\\\\rceil\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\\\\", \"\\\\backslash\");\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2223\", \"|\");\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2223\", \"\\\\vert\");\ndefineSymbol(symbols_text, main, symbols_textord, \"|\", \"\\\\textbar\"); // in T1 fontenc\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2225\", \"\\\\|\");\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2225\", \"\\\\Vert\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u2225\", \"\\\\textbardbl\");\ndefineSymbol(symbols_text, main, symbols_textord, \"~\", \"\\\\textasciitilde\");\ndefineSymbol(symbols_math, main, rel, \"\\u2191\", \"\\\\uparrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u21D1\", \"\\\\Uparrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2193\", \"\\\\downarrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u21D3\", \"\\\\Downarrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2195\", \"\\\\updownarrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u21D5\", \"\\\\Updownarrow\", true);\ndefineSymbol(symbols_math, main, op, \"\\u2210\", \"\\\\coprod\");\ndefineSymbol(symbols_math, main, op, \"\\u22C1\", \"\\\\bigvee\");\ndefineSymbol(symbols_math, main, op, \"\\u22C0\", \"\\\\bigwedge\");\ndefineSymbol(symbols_math, main, op, \"\\u2A04\", \"\\\\biguplus\");\ndefineSymbol(symbols_math, main, op, \"\\u22C2\", \"\\\\bigcap\");\ndefineSymbol(symbols_math, main, op, \"\\u22C3\", \"\\\\bigcup\");\ndefineSymbol(symbols_math, main, op, \"\\u222B\", \"\\\\int\");\ndefineSymbol(symbols_math, main, op, \"\\u222B\", \"\\\\intop\");\ndefineSymbol(symbols_math, main, op, \"\\u222C\", \"\\\\iint\");\ndefineSymbol(symbols_math, main, op, \"\\u222D\", \"\\\\iiint\");\ndefineSymbol(symbols_math, main, op, \"\\u220F\", \"\\\\prod\");\ndefineSymbol(symbols_math, main, op, \"\\u2211\", \"\\\\sum\");\ndefineSymbol(symbols_math, main, op, \"\\u2A02\", \"\\\\bigotimes\");\ndefineSymbol(symbols_math, main, op, \"\\u2A01\", \"\\\\bigoplus\");\ndefineSymbol(symbols_math, main, op, \"\\u2A00\", \"\\\\bigodot\");\ndefineSymbol(symbols_math, main, op, \"\\u222E\", \"\\\\oint\");\ndefineSymbol(symbols_math, main, op, \"\\u222F\", \"\\\\oiint\");\ndefineSymbol(symbols_math, main, op, \"\\u2230\", \"\\\\oiiint\");\ndefineSymbol(symbols_math, main, op, \"\\u2A06\", \"\\\\bigsqcup\");\ndefineSymbol(symbols_math, main, op, \"\\u222B\", \"\\\\smallint\");\ndefineSymbol(symbols_text, main, symbols_inner, \"\\u2026\", \"\\\\textellipsis\");\ndefineSymbol(symbols_math, main, symbols_inner, \"\\u2026\", \"\\\\mathellipsis\");\ndefineSymbol(symbols_text, main, symbols_inner, \"\\u2026\", \"\\\\ldots\", true);\ndefineSymbol(symbols_math, main, symbols_inner, \"\\u2026\", \"\\\\ldots\", true);\ndefineSymbol(symbols_math, main, symbols_inner, \"\\u22EF\", \"\\\\@cdots\", true);\ndefineSymbol(symbols_math, main, symbols_inner, \"\\u22F1\", \"\\\\ddots\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u22EE\", \"\\\\varvdots\"); // \\vdots is a macro\ndefineSymbol(symbols_math, main, symbols_accent, \"\\u02CA\", \"\\\\acute\");\ndefineSymbol(symbols_math, main, symbols_accent, \"\\u02CB\", \"\\\\grave\");\ndefineSymbol(symbols_math, main, symbols_accent, \"\\xA8\", \"\\\\ddot\");\ndefineSymbol(symbols_math, main, symbols_accent, \"~\", \"\\\\tilde\");\ndefineSymbol(symbols_math, main, symbols_accent, \"\\u02C9\", \"\\\\bar\");\ndefineSymbol(symbols_math, main, symbols_accent, \"\\u02D8\", \"\\\\breve\");\ndefineSymbol(symbols_math, main, symbols_accent, \"\\u02C7\", \"\\\\check\");\ndefineSymbol(symbols_math, main, symbols_accent, \"^\", \"\\\\hat\");\ndefineSymbol(symbols_math, main, symbols_accent, \"\\u20D7\", \"\\\\vec\");\ndefineSymbol(symbols_math, main, symbols_accent, \"\\u02D9\", \"\\\\dot\");\ndefineSymbol(symbols_math, main, symbols_accent, \"\\u02DA\", \"\\\\mathring\");\ndefineSymbol(symbols_math, main, mathord, \"\\u0131\", \"\\\\imath\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u0237\", \"\\\\jmath\", true);\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u0131\", \"\\\\i\", true);\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u0237\", \"\\\\j\", true);\ndefineSymbol(symbols_text, main, symbols_textord, \"\\xDF\", \"\\\\ss\", true);\ndefineSymbol(symbols_text, main, symbols_textord, \"\\xE6\", \"\\\\ae\", true);\ndefineSymbol(symbols_text, main, symbols_textord, \"\\xE6\", \"\\\\ae\", true);\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u0153\", \"\\\\oe\", true);\ndefineSymbol(symbols_text, main, symbols_textord, \"\\xF8\", \"\\\\o\", true);\ndefineSymbol(symbols_text, main, symbols_textord, \"\\xC6\", \"\\\\AE\", true);\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u0152\", \"\\\\OE\", true);\ndefineSymbol(symbols_text, main, symbols_textord, \"\\xD8\", \"\\\\O\", true);\ndefineSymbol(symbols_text, main, symbols_accent, \"\\u02CA\", \"\\\\'\"); // acute\ndefineSymbol(symbols_text, main, symbols_accent, \"\\u02CB\", \"\\\\`\"); // grave\ndefineSymbol(symbols_text, main, symbols_accent, \"\\u02C6\", \"\\\\^\"); // circumflex\ndefineSymbol(symbols_text, main, symbols_accent, \"\\u02DC\", \"\\\\~\"); // tilde\ndefineSymbol(symbols_text, main, symbols_accent, \"\\u02C9\", \"\\\\=\"); // macron\ndefineSymbol(symbols_text, main, symbols_accent, \"\\u02D8\", \"\\\\u\"); // breve\ndefineSymbol(symbols_text, main, symbols_accent, \"\\u02D9\", \"\\\\.\"); // dot above\ndefineSymbol(symbols_text, main, symbols_accent, \"\\u02DA\", \"\\\\r\"); // ring above\ndefineSymbol(symbols_text, main, symbols_accent, \"\\u02C7\", \"\\\\v\"); // caron\ndefineSymbol(symbols_text, main, symbols_accent, \"\\xA8\", '\\\\\"'); // diaresis\ndefineSymbol(symbols_text, main, symbols_accent, \"\\u02DD\", \"\\\\H\"); // double acute\ndefineSymbol(symbols_text, main, symbols_accent, \"\\u25EF\", \"\\\\textcircled\"); // \\bigcirc glyph\n\n// These ligatures are detected and created in Parser.js's `formLigatures`.\nvar ligatures = {\n    \"--\": true,\n    \"---\": true,\n    \"``\": true,\n    \"''\": true\n};\n\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u2013\", \"--\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u2013\", \"\\\\textendash\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u2014\", \"---\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u2014\", \"\\\\textemdash\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u2018\", \"`\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u2018\", \"\\\\textquoteleft\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u2019\", \"'\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u2019\", \"\\\\textquoteright\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u201C\", \"``\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u201C\", \"\\\\textquotedblleft\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u201D\", \"''\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u201D\", \"\\\\textquotedblright\");\n//  \\degree from gensymb package\ndefineSymbol(symbols_math, main, symbols_textord, \"\\xB0\", \"\\\\degree\", true);\ndefineSymbol(symbols_text, main, symbols_textord, \"\\xB0\", \"\\\\degree\");\n// \\textdegree from inputenc package\ndefineSymbol(symbols_text, main, symbols_textord, \"\\xB0\", \"\\\\textdegree\", true);\n// TODO: In LaTeX, \\pounds can generate a different character in text and math\n// mode, but among our fonts, only Main-Italic defines this character \"163\".\ndefineSymbol(symbols_math, main, mathord, \"\\xA3\", \"\\\\pounds\");\ndefineSymbol(symbols_math, main, mathord, \"\\xA3\", \"\\\\mathsterling\", true);\ndefineSymbol(symbols_text, main, mathord, \"\\xA3\", \"\\\\pounds\");\ndefineSymbol(symbols_text, main, mathord, \"\\xA3\", \"\\\\textsterling\", true);\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u2720\", \"\\\\maltese\");\ndefineSymbol(symbols_text, ams, symbols_textord, \"\\u2720\", \"\\\\maltese\");\n\ndefineSymbol(symbols_text, main, spacing, \"\\xA0\", \"\\\\ \");\ndefineSymbol(symbols_text, main, spacing, \"\\xA0\", \" \");\ndefineSymbol(symbols_text, main, spacing, \"\\xA0\", \"~\");\n\n// There are lots of symbols which are the same, so we add them in afterwards.\n// All of these are textords in math mode\nvar mathTextSymbols = \"0123456789/@.\\\"\";\nfor (var symbols_i = 0; symbols_i < mathTextSymbols.length; symbols_i++) {\n    var symbols_ch = mathTextSymbols.charAt(symbols_i);\n    defineSymbol(symbols_math, main, symbols_textord, symbols_ch, symbols_ch);\n}\n\n// All of these are textords in text mode\nvar textSymbols = \"0123456789!@*()-=+[]<>|\\\";:?/.,\";\nfor (var src_symbols_i = 0; src_symbols_i < textSymbols.length; src_symbols_i++) {\n    var _ch = textSymbols.charAt(src_symbols_i);\n    defineSymbol(symbols_text, main, symbols_textord, _ch, _ch);\n}\n\n// All of these are textords in text mode, and mathords in math mode\nvar letters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\nfor (var symbols_i2 = 0; symbols_i2 < letters.length; symbols_i2++) {\n    var _ch2 = letters.charAt(symbols_i2);\n    defineSymbol(symbols_math, main, mathord, _ch2, _ch2);\n    defineSymbol(symbols_text, main, symbols_textord, _ch2, _ch2);\n}\n\n// The next loop loads wide (surrogate pair) characters.\n// We support some letters in the Unicode range U+1D400 to U+1D7FF,\n// Mathematical Alphanumeric Symbols.\n// Some editors do not deal well with wide characters. So don't write the\n// string into this file. Instead, create the string from the surrogate pair.\nvar symbols_wideChar = \"\";\nfor (var _i3 = 0; _i3 < letters.length; _i3++) {\n    var _ch3 = letters.charAt(_i3);\n\n    // The hex numbers in the next line are a surrogate pair.\n    // 0xD835 is the high surrogate for all letters in the range we support.\n    // 0xDC00 is the low surrogate for bold A.\n    symbols_wideChar = String.fromCharCode(0xD835, 0xDC00 + _i3); // A-Z a-z bold\n    defineSymbol(symbols_math, main, mathord, _ch3, symbols_wideChar);\n    defineSymbol(symbols_text, main, symbols_textord, _ch3, symbols_wideChar);\n\n    symbols_wideChar = String.fromCharCode(0xD835, 0xDC34 + _i3); // A-Z a-z italic\n    defineSymbol(symbols_math, main, mathord, _ch3, symbols_wideChar);\n    defineSymbol(symbols_text, main, symbols_textord, _ch3, symbols_wideChar);\n\n    symbols_wideChar = String.fromCharCode(0xD835, 0xDC68 + _i3); // A-Z a-z bold italic\n    defineSymbol(symbols_math, main, mathord, _ch3, symbols_wideChar);\n    defineSymbol(symbols_text, main, symbols_textord, _ch3, symbols_wideChar);\n\n    symbols_wideChar = String.fromCharCode(0xD835, 0xDD04 + _i3); // A-Z a-z Fractur\n    defineSymbol(symbols_math, main, mathord, _ch3, symbols_wideChar);\n    defineSymbol(symbols_text, main, symbols_textord, _ch3, symbols_wideChar);\n\n    symbols_wideChar = String.fromCharCode(0xD835, 0xDDA0 + _i3); // A-Z a-z sans-serif\n    defineSymbol(symbols_math, main, mathord, _ch3, symbols_wideChar);\n    defineSymbol(symbols_text, main, symbols_textord, _ch3, symbols_wideChar);\n\n    symbols_wideChar = String.fromCharCode(0xD835, 0xDDD4 + _i3); // A-Z a-z sans bold\n    defineSymbol(symbols_math, main, mathord, _ch3, symbols_wideChar);\n    defineSymbol(symbols_text, main, symbols_textord, _ch3, symbols_wideChar);\n\n    symbols_wideChar = String.fromCharCode(0xD835, 0xDE08 + _i3); // A-Z a-z sans italic\n    defineSymbol(symbols_math, main, mathord, _ch3, symbols_wideChar);\n    defineSymbol(symbols_text, main, symbols_textord, _ch3, symbols_wideChar);\n\n    symbols_wideChar = String.fromCharCode(0xD835, 0xDE70 + _i3); // A-Z a-z monospace\n    defineSymbol(symbols_math, main, mathord, _ch3, symbols_wideChar);\n    defineSymbol(symbols_text, main, symbols_textord, _ch3, symbols_wideChar);\n\n    if (_i3 < 26) {\n        // KaTeX fonts have only capital letters for blackboard bold and script.\n        // See exception for k below.\n        symbols_wideChar = String.fromCharCode(0xD835, 0xDD38 + _i3); // A-Z double struck\n        defineSymbol(symbols_math, main, mathord, _ch3, symbols_wideChar);\n        defineSymbol(symbols_text, main, symbols_textord, _ch3, symbols_wideChar);\n\n        symbols_wideChar = String.fromCharCode(0xD835, 0xDC9C + _i3); // A-Z script\n        defineSymbol(symbols_math, main, mathord, _ch3, symbols_wideChar);\n        defineSymbol(symbols_text, main, symbols_textord, _ch3, symbols_wideChar);\n    }\n\n    // TODO: Add bold script when it is supported by a KaTeX font.\n}\n// \"k\" is the only double struck lower case letter in the KaTeX fonts.\nsymbols_wideChar = String.fromCharCode(0xD835, 0xDD5C); // k double struck\ndefineSymbol(symbols_math, main, mathord, \"k\", symbols_wideChar);\ndefineSymbol(symbols_text, main, symbols_textord, \"k\", symbols_wideChar);\n\n// Next, some wide character numerals\nfor (var _i4 = 0; _i4 < 10; _i4++) {\n    var _ch4 = _i4.toString();\n\n    symbols_wideChar = String.fromCharCode(0xD835, 0xDFCE + _i4); // 0-9 bold\n    defineSymbol(symbols_math, main, mathord, _ch4, symbols_wideChar);\n    defineSymbol(symbols_text, main, symbols_textord, _ch4, symbols_wideChar);\n\n    symbols_wideChar = String.fromCharCode(0xD835, 0xDFE2 + _i4); // 0-9 sans serif\n    defineSymbol(symbols_math, main, mathord, _ch4, symbols_wideChar);\n    defineSymbol(symbols_text, main, symbols_textord, _ch4, symbols_wideChar);\n\n    symbols_wideChar = String.fromCharCode(0xD835, 0xDFEC + _i4); // 0-9 bold sans\n    defineSymbol(symbols_math, main, mathord, _ch4, symbols_wideChar);\n    defineSymbol(symbols_text, main, symbols_textord, _ch4, symbols_wideChar);\n\n    symbols_wideChar = String.fromCharCode(0xD835, 0xDFF6 + _i4); // 0-9 monospace\n    defineSymbol(symbols_math, main, mathord, _ch4, symbols_wideChar);\n    defineSymbol(symbols_text, main, symbols_textord, _ch4, symbols_wideChar);\n}\n\n// We add these Latin-1 letters as symbols for backwards-compatibility,\n// but they are not actually in the font, nor are they supported by the\n// Unicode accent mechanism, so they fall back to Times font and look ugly.\n// TODO(edemaine): Fix this.\nvar extraLatin = \"ÇÐÞçþ\";\nfor (var _i5 = 0; _i5 < extraLatin.length; _i5++) {\n    var _ch5 = extraLatin.charAt(_i5);\n    defineSymbol(symbols_math, main, mathord, _ch5, _ch5);\n    defineSymbol(symbols_text, main, symbols_textord, _ch5, _ch5);\n}\ndefineSymbol(symbols_text, main, symbols_textord, \"ð\", \"ð\");\n\n// Unicode versions of existing characters\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u2013\", \"–\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u2014\", \"—\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u2018\", \"‘\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u2019\", \"’\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u201C\", \"“\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u201D\", \"”\");\n// CONCATENATED MODULE: ./src/wide-character.js\n\n\n\n/**\n * Data below is from https://www.unicode.org/charts/PDF/U1D400.pdf\n * That document sorts characters into groups by font type, say bold or italic.\n *\n * In the arrays below, each subarray consists three elements:\n *      * The CSS class of that group when in math mode.\n *      * The CSS class of that group when in text mode.\n *      * The font name, so that KaTeX can get font metrics.\n */\n\n/**\n * This file provides support for Unicode range U+1D400 to U+1D7FF,\n * Mathematical Alphanumeric Symbols.\n *\n * Function wideCharacterFont takes a wide character as input and returns\n * the font information necessary to render it properly.\n */\n\nvar wideLatinLetterData = [[\"mathbf\", \"textbf\", \"Main-Bold\"], // A-Z bold upright\n[\"mathbf\", \"textbf\", \"Main-Bold\"], // a-z bold upright\n\n[\"mathit\", \"textit\", \"Math-Italic\"], // A-Z italic\n[\"mathit\", \"textit\", \"Math-Italic\"], // a-z italic\n\n[\"boldsymbol\", \"boldsymbol\", \"Main-BoldItalic\"], // A-Z bold italic\n[\"boldsymbol\", \"boldsymbol\", \"Main-BoldItalic\"], // a-z bold italic\n\n// Map fancy A-Z letters to script, not calligraphic.\n// This aligns with unicode-math and math fonts (except Cambria Math).\n[\"mathscr\", \"textscr\", \"Script-Regular\"], // A-Z script\n[\"\", \"\", \"\"], // a-z script.  No font\n\n[\"\", \"\", \"\"], // A-Z bold script. No font\n[\"\", \"\", \"\"], // a-z bold script. No font\n\n[\"mathfrak\", \"textfrak\", \"Fraktur-Regular\"], // A-Z Fraktur\n[\"mathfrak\", \"textfrak\", \"Fraktur-Regular\"], // a-z Fraktur\n\n[\"mathbb\", \"textbb\", \"AMS-Regular\"], // A-Z double-struck\n[\"mathbb\", \"textbb\", \"AMS-Regular\"], // k double-struck\n\n[\"\", \"\", \"\"], // A-Z bold Fraktur No font metrics\n[\"\", \"\", \"\"], // a-z bold Fraktur.   No font.\n\n[\"mathsf\", \"textsf\", \"SansSerif-Regular\"], // A-Z sans-serif\n[\"mathsf\", \"textsf\", \"SansSerif-Regular\"], // a-z sans-serif\n\n[\"mathboldsf\", \"textboldsf\", \"SansSerif-Bold\"], // A-Z bold sans-serif\n[\"mathboldsf\", \"textboldsf\", \"SansSerif-Bold\"], // a-z bold sans-serif\n\n[\"mathitsf\", \"textitsf\", \"SansSerif-Italic\"], // A-Z italic sans-serif\n[\"mathitsf\", \"textitsf\", \"SansSerif-Italic\"], // a-z italic sans-serif\n\n[\"\", \"\", \"\"], // A-Z bold italic sans. No font\n[\"\", \"\", \"\"], // a-z bold italic sans. No font\n\n[\"mathtt\", \"texttt\", \"Typewriter-Regular\"], // A-Z monospace\n[\"mathtt\", \"texttt\", \"Typewriter-Regular\"]];\n\nvar wideNumeralData = [[\"mathbf\", \"textbf\", \"Main-Bold\"], // 0-9 bold\n[\"\", \"\", \"\"], // 0-9 double-struck. No KaTeX font.\n[\"mathsf\", \"textsf\", \"SansSerif-Regular\"], // 0-9 sans-serif\n[\"mathboldsf\", \"textboldsf\", \"SansSerif-Bold\"], // 0-9 bold sans-serif\n[\"mathtt\", \"texttt\", \"Typewriter-Regular\"]];\n\nvar wide_character_wideCharacterFont = function wideCharacterFont(wideChar, mode) {\n\n    // IE doesn't support codePointAt(). So work with the surrogate pair.\n    var H = wideChar.charCodeAt(0); // high surrogate\n    var L = wideChar.charCodeAt(1); // low surrogate\n    var codePoint = (H - 0xD800) * 0x400 + (L - 0xDC00) + 0x10000;\n\n    var j = mode === \"math\" ? 0 : 1; // column index for CSS class.\n\n    if (0x1D400 <= codePoint && codePoint < 0x1D6A4) {\n        // wideLatinLetterData contains exactly 26 chars on each row.\n        // So we can calculate the relevant row. No traverse necessary.\n        var i = Math.floor((codePoint - 0x1D400) / 26);\n        return [wideLatinLetterData[i][2], wideLatinLetterData[i][j]];\n    } else if (0x1D7CE <= codePoint && codePoint <= 0x1D7FF) {\n        // Numerals, ten per row.\n        var _i = Math.floor((codePoint - 0x1D7CE) / 10);\n        return [wideNumeralData[_i][2], wideNumeralData[_i][j]];\n    } else if (codePoint === 0x1D6A5 || codePoint === 0x1D6A6) {\n        // dotless i or j\n        return [wideLatinLetterData[0][2], wideLatinLetterData[0][j]];\n    } else if (0x1D6A6 < codePoint && codePoint < 0x1D7CE) {\n        // Greek letters. Not supported, yet.\n        return [\"\", \"\"];\n    } else {\n        // We don't support any wide characters outside 1D400–1D7FF.\n        throw new src_ParseError(\"Unsupported character: \" + wideChar);\n    }\n};\n// CONCATENATED MODULE: ./src/Options.js\n\n\n/**\n * This file contains information about the options that the Parser carries\n * around with it while parsing. Data is held in an `Options` object, and when\n * recursing, a new `Options` object can be created with the `.with*` and\n * `.reset` functions.\n */\n\n\n\n\nvar sizeStyleMap = [\n// Each element contains [textsize, scriptsize, scriptscriptsize].\n// The size mappings are taken from TeX with \\normalsize=10pt.\n[1, 1, 1], // size1: [5, 5, 5]              \\tiny\n[2, 1, 1], // size2: [6, 5, 5]\n[3, 1, 1], // size3: [7, 5, 5]              \\scriptsize\n[4, 2, 1], // size4: [8, 6, 5]              \\footnotesize\n[5, 2, 1], // size5: [9, 6, 5]              \\small\n[6, 3, 1], // size6: [10, 7, 5]             \\normalsize\n[7, 4, 2], // size7: [12, 8, 6]             \\large\n[8, 6, 3], // size8: [14.4, 10, 7]          \\Large\n[9, 7, 6], // size9: [17.28, 12, 10]        \\LARGE\n[10, 8, 7], // size10: [20.74, 14.4, 12]     \\huge\n[11, 10, 9]];\n\nvar sizeMultipliers = [\n// fontMetrics.js:getGlobalMetrics also uses size indexes, so if\n// you change size indexes, change that function.\n0.5, 0.6, 0.7, 0.8, 0.9, 1.0, 1.2, 1.44, 1.728, 2.074, 2.488];\n\nvar sizeAtStyle = function sizeAtStyle(size, style) {\n    return style.size < 2 ? size : sizeStyleMap[size - 1][style.size - 1];\n};\n\n/**\n * This is the main options class. It contains the current style, size, color,\n * and font.\n *\n * Options objects should not be modified. To create a new Options with\n * different properties, call a `.having*` method.\n */\nvar Options_Options = function () {\n    // A font family applies to a group of fonts (i.e. SansSerif), while a font\n    // represents a specific font (i.e. SansSerif Bold).\n    // See: https://tex.stackexchange.com/questions/22350/difference-between-textrm-and-mathrm\n    function Options(data) {\n        classCallCheck_default()(this, Options);\n\n        this.style = data.style;\n        this.color = data.color;\n        this.size = data.size || Options.BASESIZE;\n        this.textSize = data.textSize || this.size;\n        this.phantom = !!data.phantom;\n        this.font = data.font || \"\";\n        this.fontFamily = data.fontFamily || \"\";\n        this.fontWeight = data.fontWeight || '';\n        this.fontShape = data.fontShape || '';\n        this.sizeMultiplier = sizeMultipliers[this.size - 1];\n        this.maxSize = data.maxSize;\n        this._fontMetrics = undefined;\n    }\n\n    /**\n     * Returns a new options object with the same properties as \"this\".  Properties\n     * from \"extension\" will be copied to the new options object.\n     */\n\n\n    /**\n     * The base size index.\n     */\n\n\n    Options.prototype.extend = function extend(extension) {\n        var data = {\n            style: this.style,\n            size: this.size,\n            textSize: this.textSize,\n            color: this.color,\n            phantom: this.phantom,\n            font: this.font,\n            fontFamily: this.fontFamily,\n            fontWeight: this.fontWeight,\n            fontShape: this.fontShape,\n            maxSize: this.maxSize\n        };\n\n        for (var key in extension) {\n            if (extension.hasOwnProperty(key)) {\n                data[key] = extension[key];\n            }\n        }\n\n        return new Options(data);\n    };\n\n    /**\n     * Return an options object with the given style. If `this.style === style`,\n     * returns `this`.\n     */\n\n\n    Options.prototype.havingStyle = function havingStyle(style) {\n        if (this.style === style) {\n            return this;\n        } else {\n            return this.extend({\n                style: style,\n                size: sizeAtStyle(this.textSize, style)\n            });\n        }\n    };\n\n    /**\n     * Return an options object with a cramped version of the current style. If\n     * the current style is cramped, returns `this`.\n     */\n\n\n    Options.prototype.havingCrampedStyle = function havingCrampedStyle() {\n        return this.havingStyle(this.style.cramp());\n    };\n\n    /**\n     * Return an options object with the given size and in at least `\\textstyle`.\n     * Returns `this` if appropriate.\n     */\n\n\n    Options.prototype.havingSize = function havingSize(size) {\n        if (this.size === size && this.textSize === size) {\n            return this;\n        } else {\n            return this.extend({\n                style: this.style.text(),\n                size: size,\n                textSize: size,\n                sizeMultiplier: sizeMultipliers[size - 1]\n            });\n        }\n    };\n\n    /**\n     * Like `this.havingSize(BASESIZE).havingStyle(style)`. If `style` is omitted,\n     * changes to at least `\\textstyle`.\n     */\n\n\n    Options.prototype.havingBaseStyle = function havingBaseStyle(style) {\n        style = style || this.style.text();\n        var wantSize = sizeAtStyle(Options.BASESIZE, style);\n        if (this.size === wantSize && this.textSize === Options.BASESIZE && this.style === style) {\n            return this;\n        } else {\n            return this.extend({\n                style: style,\n                size: wantSize\n            });\n        }\n    };\n\n    /**\n     * Remove the effect of sizing changes such as \\Huge.\n     * Keep the effect of the current style, such as \\scriptstyle.\n     */\n\n\n    Options.prototype.havingBaseSizing = function havingBaseSizing() {\n        var size = void 0;\n        switch (this.style.id) {\n            case 4:\n            case 5:\n                size = 3; // normalsize in scriptstyle\n                break;\n            case 6:\n            case 7:\n                size = 1; // normalsize in scriptscriptstyle\n                break;\n            default:\n                size = 6; // normalsize in textstyle or displaystyle\n        }\n        return this.extend({\n            style: this.style.text(),\n            size: size\n        });\n    };\n\n    /**\n     * Create a new options object with the given color.\n     */\n\n\n    Options.prototype.withColor = function withColor(color) {\n        return this.extend({\n            color: color\n        });\n    };\n\n    /**\n     * Create a new options object with \"phantom\" set to true.\n     */\n\n\n    Options.prototype.withPhantom = function withPhantom() {\n        return this.extend({\n            phantom: true\n        });\n    };\n\n    /**\n     * Creates a new options object with the given math font or old text font.\n     * @type {[type]}\n     */\n\n\n    Options.prototype.withFont = function withFont(font) {\n        return this.extend({\n            font: font\n        });\n    };\n\n    /**\n     * Create a new options objects with the given fontFamily.\n     */\n\n\n    Options.prototype.withTextFontFamily = function withTextFontFamily(fontFamily) {\n        return this.extend({\n            fontFamily: fontFamily,\n            font: \"\"\n        });\n    };\n\n    /**\n     * Creates a new options object with the given font weight\n     */\n\n\n    Options.prototype.withTextFontWeight = function withTextFontWeight(fontWeight) {\n        return this.extend({\n            fontWeight: fontWeight,\n            font: \"\"\n        });\n    };\n\n    /**\n     * Creates a new options object with the given font weight\n     */\n\n\n    Options.prototype.withTextFontShape = function withTextFontShape(fontShape) {\n        return this.extend({\n            fontShape: fontShape,\n            font: \"\"\n        });\n    };\n\n    /**\n     * Return the CSS sizing classes required to switch from enclosing options\n     * `oldOptions` to `this`. Returns an array of classes.\n     */\n\n\n    Options.prototype.sizingClasses = function sizingClasses(oldOptions) {\n        if (oldOptions.size !== this.size) {\n            return [\"sizing\", \"reset-size\" + oldOptions.size, \"size\" + this.size];\n        } else {\n            return [];\n        }\n    };\n\n    /**\n     * Return the CSS sizing classes required to switch to the base size. Like\n     * `this.havingSize(BASESIZE).sizingClasses(this)`.\n     */\n\n\n    Options.prototype.baseSizingClasses = function baseSizingClasses() {\n        if (this.size !== Options.BASESIZE) {\n            return [\"sizing\", \"reset-size\" + this.size, \"size\" + Options.BASESIZE];\n        } else {\n            return [];\n        }\n    };\n\n    /**\n     * Return the font metrics for this size.\n     */\n\n\n    Options.prototype.fontMetrics = function fontMetrics() {\n        if (!this._fontMetrics) {\n            this._fontMetrics = getGlobalMetrics(this.size);\n        }\n        return this._fontMetrics;\n    };\n\n    /**\n     * A map of color names to CSS colors.\n     * TODO(emily): Remove this when we have real macros\n     */\n\n\n    /**\n     * Gets the CSS color of the current options object, accounting for the\n     * `colorMap`.\n     */\n    Options.prototype.getColor = function getColor() {\n        if (this.phantom) {\n            return \"transparent\";\n        } else if (this.color != null && Options.colorMap.hasOwnProperty(this.color)) {\n            return Options.colorMap[this.color];\n        } else {\n            return this.color;\n        }\n    };\n\n    return Options;\n}();\n\nOptions_Options.BASESIZE = 6;\nOptions_Options.colorMap = {\n    \"katex-blue\": \"#6495ed\",\n    \"katex-orange\": \"#ffa500\",\n    \"katex-pink\": \"#ff00af\",\n    \"katex-red\": \"#df0030\",\n    \"katex-green\": \"#28ae7b\",\n    \"katex-gray\": \"gray\",\n    \"katex-purple\": \"#9d38bd\",\n    \"katex-blueA\": \"#ccfaff\",\n    \"katex-blueB\": \"#80f6ff\",\n    \"katex-blueC\": \"#63d9ea\",\n    \"katex-blueD\": \"#11accd\",\n    \"katex-blueE\": \"#0c7f99\",\n    \"katex-tealA\": \"#94fff5\",\n    \"katex-tealB\": \"#26edd5\",\n    \"katex-tealC\": \"#01d1c1\",\n    \"katex-tealD\": \"#01a995\",\n    \"katex-tealE\": \"#208170\",\n    \"katex-greenA\": \"#b6ffb0\",\n    \"katex-greenB\": \"#8af281\",\n    \"katex-greenC\": \"#74cf70\",\n    \"katex-greenD\": \"#1fab54\",\n    \"katex-greenE\": \"#0d923f\",\n    \"katex-goldA\": \"#ffd0a9\",\n    \"katex-goldB\": \"#ffbb71\",\n    \"katex-goldC\": \"#ff9c39\",\n    \"katex-goldD\": \"#e07d10\",\n    \"katex-goldE\": \"#a75a05\",\n    \"katex-redA\": \"#fca9a9\",\n    \"katex-redB\": \"#ff8482\",\n    \"katex-redC\": \"#f9685d\",\n    \"katex-redD\": \"#e84d39\",\n    \"katex-redE\": \"#bc2612\",\n    \"katex-maroonA\": \"#ffbde0\",\n    \"katex-maroonB\": \"#ff92c6\",\n    \"katex-maroonC\": \"#ed5fa6\",\n    \"katex-maroonD\": \"#ca337c\",\n    \"katex-maroonE\": \"#9e034e\",\n    \"katex-purpleA\": \"#ddd7ff\",\n    \"katex-purpleB\": \"#c6b9fc\",\n    \"katex-purpleC\": \"#aa87ff\",\n    \"katex-purpleD\": \"#7854ab\",\n    \"katex-purpleE\": \"#543b78\",\n    \"katex-mintA\": \"#f5f9e8\",\n    \"katex-mintB\": \"#edf2df\",\n    \"katex-mintC\": \"#e0e5cc\",\n    \"katex-grayA\": \"#f6f7f7\",\n    \"katex-grayB\": \"#f0f1f2\",\n    \"katex-grayC\": \"#e3e5e6\",\n    \"katex-grayD\": \"#d6d8da\",\n    \"katex-grayE\": \"#babec2\",\n    \"katex-grayF\": \"#888d93\",\n    \"katex-grayG\": \"#626569\",\n    \"katex-grayH\": \"#3b3e40\",\n    \"katex-grayI\": \"#21242c\",\n    \"katex-kaBlue\": \"#314453\",\n    \"katex-kaGreen\": \"#71B307\"\n};\n\n\n/* harmony default export */ var src_Options = (Options_Options);\n// CONCATENATED MODULE: ./src/units.js\n\n\n/**\n * This file does conversion between units.  In particular, it provides\n * calculateSize to convert other units into ems.\n */\n\n\n\n\n// This table gives the number of TeX pts in one of each *absolute* TeX unit.\n// Thus, multiplying a length by this number converts the length from units\n// into pts.  Dividing the result by ptPerEm gives the number of ems\n// *assuming* a font size of ptPerEm (normal size, normal style).\nvar ptPerUnit = {\n    // https://en.wikibooks.org/wiki/LaTeX/Lengths and\n    // https://tex.stackexchange.com/a/8263\n    \"pt\": 1, // TeX point\n    \"mm\": 7227 / 2540, // millimeter\n    \"cm\": 7227 / 254, // centimeter\n    \"in\": 72.27, // inch\n    \"bp\": 803 / 800, // big (PostScript) points\n    \"pc\": 12, // pica\n    \"dd\": 1238 / 1157, // didot\n    \"cc\": 14856 / 1157, // cicero (12 didot)\n    \"nd\": 685 / 642, // new didot\n    \"nc\": 1370 / 107, // new cicero (12 new didot)\n    \"sp\": 1 / 65536, // scaled point (TeX's internal smallest unit)\n    // https://tex.stackexchange.com/a/41371\n    \"px\": 803 / 800 // \\pdfpxdimen defaults to 1 bp in pdfTeX and LuaTeX\n};\n\n// Dictionary of relative units, for fast validity testing.\nvar relativeUnit = {\n    \"ex\": true,\n    \"em\": true,\n    \"mu\": true\n};\n\n/**\n * Determine whether the specified unit (either a string defining the unit\n * or a \"size\" parse node containing a unit field) is valid.\n */\nvar validUnit = function validUnit(unit) {\n    if (typeof unit !== \"string\") {\n        unit = unit.unit;\n    }\n    return unit in ptPerUnit || unit in relativeUnit || unit === \"ex\";\n};\n\n/*\n * Convert a \"size\" parse node (with numeric \"number\" and string \"unit\" fields,\n * as parsed by functions.js argType \"size\") into a CSS em value for the\n * current style/scale.  `options` gives the current options.\n */\nvar units_calculateSize = function calculateSize(sizeValue, options) {\n    var scale = void 0;\n    if (sizeValue.unit in ptPerUnit) {\n        // Absolute units\n        scale = ptPerUnit[sizeValue.unit] // Convert unit to pt\n        / options.fontMetrics().ptPerEm // Convert pt to CSS em\n        / options.sizeMultiplier; // Unscale to make absolute units\n    } else if (sizeValue.unit === \"mu\") {\n        // `mu` units scale with scriptstyle/scriptscriptstyle.\n        scale = options.fontMetrics().cssEmPerMu;\n    } else {\n        // Other relative units always refer to the *textstyle* font\n        // in the current size.\n        var unitOptions = void 0;\n        if (options.style.isTight()) {\n            // isTight() means current style is script/scriptscript.\n            unitOptions = options.havingStyle(options.style.text());\n        } else {\n            unitOptions = options;\n        }\n        // TODO: In TeX these units are relative to the quad of the current\n        // *text* font, e.g. cmr10. KaTeX instead uses values from the\n        // comparably-sized *Computer Modern symbol* font. At 10pt, these\n        // match. At 7pt and 5pt, they differ: cmr7=1.138894, cmsy7=1.170641;\n        // cmr5=1.361133, cmsy5=1.472241. Consider $\\scriptsize a\\kern1emb$.\n        // TeX \\showlists shows a kern of 1.13889 * fontsize;\n        // KaTeX shows a kern of 1.171 * fontsize.\n        if (sizeValue.unit === \"ex\") {\n            scale = unitOptions.fontMetrics().xHeight;\n        } else if (sizeValue.unit === \"em\") {\n            scale = unitOptions.fontMetrics().quad;\n        } else {\n            throw new src_ParseError(\"Invalid unit: '\" + sizeValue.unit + \"'\");\n        }\n        if (unitOptions !== options) {\n            scale *= unitOptions.sizeMultiplier / options.sizeMultiplier;\n        }\n    }\n    return Math.min(sizeValue.number * scale, options.maxSize);\n};\n// CONCATENATED MODULE: ./src/buildCommon.js\n\n/* eslint no-console:0 */\n/**\n * This module contains general functions that can be used for building\n * different kinds of domTree nodes in a consistent manner.\n */\n\n\n\n\n\n\n\n\n\n// The following have to be loaded from Main-Italic font, using class mainit\nvar mainitLetters = [\"\\\\imath\", \"ı\", // dotless i\n\"\\\\jmath\", \"ȷ\", // dotless j\n\"\\\\pounds\", \"\\\\mathsterling\", \"\\\\textsterling\", \"£\"];\n\n/**\n * Looks up the given symbol in fontMetrics, after applying any symbol\n * replacements defined in symbol.js\n */\nvar buildCommon_lookupSymbol = function lookupSymbol(value,\n// TODO(#963): Use a union type for this.\nfontName, mode) {\n    // Replace the value with its replaced value from symbol.js\n    if (src_symbols[mode][value] && src_symbols[mode][value].replace) {\n        value = src_symbols[mode][value].replace;\n    }\n    return {\n        value: value,\n        metrics: getCharacterMetrics(value, fontName, mode)\n    };\n};\n\n/**\n * Makes a symbolNode after translation via the list of symbols in symbols.js.\n * Correctly pulls out metrics for the character, and optionally takes a list of\n * classes to be attached to the node.\n *\n * TODO: make argument order closer to makeSpan\n * TODO: add a separate argument for math class (e.g. `mop`, `mbin`), which\n * should if present come first in `classes`.\n * TODO(#953): Make `options` mandatory and always pass it in.\n */\nvar buildCommon_makeSymbol = function makeSymbol(value, fontName, mode, options, classes) {\n    var lookup = buildCommon_lookupSymbol(value, fontName, mode);\n    var metrics = lookup.metrics;\n    value = lookup.value;\n\n    var symbolNode = void 0;\n    if (metrics) {\n        var italic = metrics.italic;\n        if (mode === \"text\") {\n            italic = 0;\n        }\n        symbolNode = new domTree_SymbolNode(value, metrics.height, metrics.depth, italic, metrics.skew, metrics.width, classes);\n    } else {\n        // TODO(emily): Figure out a good way to only print this in development\n        typeof console !== \"undefined\" && console.warn(\"No character metrics for '\" + value + \"' in style '\" + fontName + \"'\");\n        symbolNode = new domTree_SymbolNode(value, 0, 0, 0, 0, 0, classes);\n    }\n\n    if (options) {\n        symbolNode.maxFontSize = options.sizeMultiplier;\n        if (options.style.isTight()) {\n            symbolNode.classes.push(\"mtight\");\n        }\n        var color = options.getColor();\n        if (color) {\n            symbolNode.style.color = color;\n        }\n    }\n\n    return symbolNode;\n};\n\n/**\n * Makes a symbol in Main-Regular or AMS-Regular.\n * Used for rel, bin, open, close, inner, and punct.\n *\n * TODO(#953): Make `options` mandatory and always pass it in.\n */\nvar buildCommon_mathsym = function mathsym(value, mode, options) {\n    var classes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n\n    // Decide what font to render the symbol in by its entry in the symbols\n    // table.\n    // Have a special case for when the value = \\ because the \\ is used as a\n    // textord in unsupported command errors but cannot be parsed as a regular\n    // text ordinal and is therefore not present as a symbol in the symbols\n    // table for text, as well as a special case for boldsymbol because it\n    // can be used for bold + and -\n    if (options && options.font && options.font === \"boldsymbol\" && buildCommon_lookupSymbol(value, \"Main-Bold\", mode).metrics) {\n        return buildCommon_makeSymbol(value, \"Main-Bold\", mode, options, classes.concat([\"mathbf\"]));\n    } else if (value === \"\\\\\" || src_symbols[mode][value].font === \"main\") {\n        return buildCommon_makeSymbol(value, \"Main-Regular\", mode, options, classes);\n    } else {\n        return buildCommon_makeSymbol(value, \"AMS-Regular\", mode, options, classes.concat([\"amsrm\"]));\n    }\n};\n\n/**\n * Makes a symbol in the default font for mathords and textords.\n */\nvar buildCommon_mathDefault = function mathDefault(value, mode, options, classes, type) {\n    if (type === \"mathord\") {\n        var fontLookup = buildCommon_mathit(value, mode, options, classes);\n        return buildCommon_makeSymbol(value, fontLookup.fontName, mode, options, classes.concat([fontLookup.fontClass]));\n    } else if (type === \"textord\") {\n        var font = src_symbols[mode][value] && src_symbols[mode][value].font;\n        if (font === \"ams\") {\n            var _fontName = retrieveTextFontName(\"amsrm\", options.fontWeight, options.fontShape);\n            return buildCommon_makeSymbol(value, _fontName, mode, options, classes.concat(\"amsrm\", options.fontWeight, options.fontShape));\n        } else if (font === \"main\" || !font) {\n            var _fontName2 = retrieveTextFontName(\"textrm\", options.fontWeight, options.fontShape);\n            return buildCommon_makeSymbol(value, _fontName2, mode, options, classes.concat(options.fontWeight, options.fontShape));\n        } else {\n            // fonts added by plugins\n            var _fontName3 = retrieveTextFontName(font, options.fontWeight, options.fontShape);\n            // We add font name as a css class\n            return buildCommon_makeSymbol(value, _fontName3, mode, options, classes.concat(_fontName3, options.fontWeight, options.fontShape));\n        }\n    } else {\n        throw new Error(\"unexpected type: \" + type + \" in mathDefault\");\n    }\n};\n\n/**\n * Determines which of the two font names (Main-Italic and Math-Italic) and\n * corresponding style tags (mainit or mathit) to use for font \"mathit\",\n * depending on the symbol.  Use this function instead of fontMap for font\n * \"mathit\".\n */\nvar buildCommon_mathit = function mathit(value, mode, options, classes) {\n    if (/[0-9]/.test(value.charAt(0)) ||\n    // glyphs for \\imath and \\jmath do not exist in Math-Italic so we\n    // need to use Main-Italic instead\n    utils.contains(mainitLetters, value)) {\n        return {\n            fontName: \"Main-Italic\",\n            fontClass: \"mainit\"\n        };\n    } else {\n        return {\n            fontName: \"Math-Italic\",\n            fontClass: \"mathit\"\n        };\n    }\n};\n\n/**\n * Determines which of the two font names (Main-Bold and Math-BoldItalic) and\n * corresponding style tags (mathbf or boldsymbol) to use for font \"boldsymbol\",\n * depending on the symbol.  Use this function instead of fontMap for font\n * \"boldsymbol\".\n */\nvar boldsymbol = function boldsymbol(value, mode, options, classes) {\n    if (buildCommon_lookupSymbol(value, \"Math-BoldItalic\", mode).metrics) {\n        return {\n            fontName: \"Math-BoldItalic\",\n            fontClass: \"boldsymbol\"\n        };\n    } else {\n        // Some glyphs do not exist in Math-BoldItalic so we need to use\n        // Main-Bold instead.\n        return {\n            fontName: \"Main-Bold\",\n            fontClass: \"mathbf\"\n        };\n    }\n};\n\n/**\n * Makes either a mathord or textord in the correct font and color.\n */\nvar buildCommon_makeOrd = function makeOrd(group, options, type) {\n    var mode = group.mode;\n    var text = group.text;\n\n    var classes = [\"mord\"];\n\n    // Math mode or Old font (i.e. \\rm)\n    var isFont = mode === \"math\" || mode === \"text\" && options.font;\n    var fontOrFamily = isFont ? options.font : options.fontFamily;\n    if (text.charCodeAt(0) === 0xD835) {\n        // surrogate pairs get special treatment\n        var _wideCharacterFont = wide_character_wideCharacterFont(text, mode),\n            wideFontName = _wideCharacterFont[0],\n            wideFontClass = _wideCharacterFont[1];\n\n        return buildCommon_makeSymbol(text, wideFontName, mode, options, classes.concat(wideFontClass));\n    } else if (fontOrFamily) {\n        var _fontName4 = void 0;\n        var fontClasses = void 0;\n        if (fontOrFamily === \"boldsymbol\") {\n            var fontData = boldsymbol(text, mode, options, classes);\n            _fontName4 = fontData.fontName;\n            fontClasses = [fontData.fontClass];\n        } else if (fontOrFamily === \"mathit\" || utils.contains(mainitLetters, text)) {\n            var _fontData = buildCommon_mathit(text, mode, options, classes);\n            _fontName4 = _fontData.fontName;\n            fontClasses = [_fontData.fontClass];\n        } else if (isFont) {\n            _fontName4 = fontMap[fontOrFamily].fontName;\n            fontClasses = [fontOrFamily];\n        } else {\n            _fontName4 = retrieveTextFontName(fontOrFamily, options.fontWeight, options.fontShape);\n            fontClasses = [fontOrFamily, options.fontWeight, options.fontShape];\n        }\n\n        if (buildCommon_lookupSymbol(text, _fontName4, mode).metrics) {\n            return buildCommon_makeSymbol(text, _fontName4, mode, options, classes.concat(fontClasses));\n        } else if (ligatures.hasOwnProperty(text) && _fontName4.substr(0, 10) === \"Typewriter\") {\n            // Deconstruct ligatures in monospace fonts (\\texttt, \\tt).\n            var parts = [];\n            for (var i = 0; i < text.length; i++) {\n                parts.push(buildCommon_makeSymbol(text[i], _fontName4, mode, options, classes.concat(fontClasses)));\n            }\n            return buildCommon_makeFragment(parts);\n        } else {\n            return buildCommon_mathDefault(text, mode, options, classes, type);\n        }\n    } else {\n        return buildCommon_mathDefault(text, mode, options, classes, type);\n    }\n};\n\n/**\n * Combine as many characters as possible in the given array of characters\n * via their tryCombine method.\n */\nvar tryCombineChars = function tryCombineChars(chars) {\n    for (var i = 0; i < chars.length - 1; i++) {\n        if (chars[i].tryCombine(chars[i + 1])) {\n            chars.splice(i + 1, 1);\n            i--;\n        }\n    }\n    return chars;\n};\n\n/**\n * Calculate the height, depth, and maxFontSize of an element based on its\n * children.\n */\nvar sizeElementFromChildren = function sizeElementFromChildren(elem) {\n    var height = 0;\n    var depth = 0;\n    var maxFontSize = 0;\n\n    for (var i = 0; i < elem.children.length; i++) {\n        var child = elem.children[i];\n        if (child.height > height) {\n            height = child.height;\n        }\n        if (child.depth > depth) {\n            depth = child.depth;\n        }\n        if (child.maxFontSize > maxFontSize) {\n            maxFontSize = child.maxFontSize;\n        }\n    }\n\n    elem.height = height;\n    elem.depth = depth;\n    elem.maxFontSize = maxFontSize;\n};\n\n/**\n * Makes a span with the given list of classes, list of children, and options.\n *\n * TODO(#953): Ensure that `options` is always provided (currently some call\n * sites don't pass it) and make the type below mandatory.\n * TODO: add a separate argument for math class (e.g. `mop`, `mbin`), which\n * should if present come first in `classes`.\n */\nvar buildCommon_makeSpan = function makeSpan(classes, children, options, style) {\n    var span = new domTree_Span(classes, children, options, style);\n\n    sizeElementFromChildren(span);\n\n    return span;\n};\n\n// SVG one is simpler -- doesn't require height, depth, max-font setting.\n// This is also a separate method for typesafety.\nvar buildCommon_makeSvgSpan = function makeSvgSpan(classes, children, options, style) {\n    return new domTree_Span(classes, children, options, style);\n};\n\nvar makeLineSpan = function makeLineSpan(className, options, thickness) {\n    var line = buildCommon_makeSpan([className], [], options);\n    line.height = thickness || options.fontMetrics().defaultRuleThickness;\n    line.style.borderBottomWidth = line.height + \"em\";\n    line.maxFontSize = 1.0;\n    return line;\n};\n\n/**\n * Makes an anchor with the given href, list of classes, list of children,\n * and options.\n */\nvar buildCommon_makeAnchor = function makeAnchor(href, classes, children, options) {\n    var anchor = new domTree_Anchor(href, classes, children, options);\n\n    sizeElementFromChildren(anchor);\n\n    return anchor;\n};\n\n/**\n * Makes a document fragment with the given list of children.\n */\nvar buildCommon_makeFragment = function makeFragment(children) {\n    var fragment = new tree_DocumentFragment(children);\n\n    sizeElementFromChildren(fragment);\n\n    return fragment;\n};\n\n// These are exact object types to catch typos in the names of the optional fields.\n\n\n// A list of child or kern nodes to be stacked on top of each other (i.e. the\n// first element will be at the bottom, and the last at the top).\n\n\n// Computes the updated `children` list and the overall depth.\n//\n// This helper function for makeVList makes it easier to enforce type safety by\n// allowing early exits (returns) in the logic.\nvar getVListChildrenAndDepth = function getVListChildrenAndDepth(params) {\n    if (params.positionType === \"individualShift\") {\n        var oldChildren = params.children;\n        var _children = [oldChildren[0]];\n\n        // Add in kerns to the list of params.children to get each element to be\n        // shifted to the correct specified shift\n        var _depth = -oldChildren[0].shift - oldChildren[0].elem.depth;\n        var currPos = _depth;\n        for (var i = 1; i < oldChildren.length; i++) {\n            var diff = -oldChildren[i].shift - currPos - oldChildren[i].elem.depth;\n            var _size = diff - (oldChildren[i - 1].elem.height + oldChildren[i - 1].elem.depth);\n\n            currPos = currPos + diff;\n\n            _children.push({ type: \"kern\", size: _size });\n            _children.push(oldChildren[i]);\n        }\n\n        return { children: _children, depth: _depth };\n    }\n\n    var depth = void 0;\n    if (params.positionType === \"top\") {\n        // We always start at the bottom, so calculate the bottom by adding up\n        // all the sizes\n        var bottom = params.positionData;\n        for (var _i = 0; _i < params.children.length; _i++) {\n            var child = params.children[_i];\n            bottom -= child.type === \"kern\" ? child.size : child.elem.height + child.elem.depth;\n        }\n        depth = bottom;\n    } else if (params.positionType === \"bottom\") {\n        depth = -params.positionData;\n    } else {\n        var firstChild = params.children[0];\n        if (firstChild.type !== \"elem\") {\n            throw new Error('First child must have type \"elem\".');\n        }\n        if (params.positionType === \"shift\") {\n            depth = -firstChild.elem.depth - params.positionData;\n        } else if (params.positionType === \"firstBaseline\") {\n            depth = -firstChild.elem.depth;\n        } else {\n            throw new Error(\"Invalid positionType \" + params.positionType + \".\");\n        }\n    }\n    return { children: params.children, depth: depth };\n};\n\n/**\n * Makes a vertical list by stacking elements and kerns on top of each other.\n * Allows for many different ways of specifying the positioning method.\n *\n * See VListParam documentation above.\n */\nvar buildCommon_makeVList = function makeVList(params, options) {\n    var _getVListChildrenAndD = getVListChildrenAndDepth(params),\n        children = _getVListChildrenAndD.children,\n        depth = _getVListChildrenAndD.depth;\n\n    // Create a strut that is taller than any list item. The strut is added to\n    // each item, where it will determine the item's baseline. Since it has\n    // `overflow:hidden`, the strut's top edge will sit on the item's line box's\n    // top edge and the strut's bottom edge will sit on the item's baseline,\n    // with no additional line-height spacing. This allows the item baseline to\n    // be positioned precisely without worrying about font ascent and\n    // line-height.\n\n\n    var pstrutSize = 0;\n    for (var i = 0; i < children.length; i++) {\n        var child = children[i];\n        if (child.type === \"elem\") {\n            var _elem = child.elem;\n            pstrutSize = Math.max(pstrutSize, _elem.maxFontSize, _elem.height);\n        }\n    }\n    pstrutSize += 2;\n    var pstrut = buildCommon_makeSpan([\"pstrut\"], []);\n    pstrut.style.height = pstrutSize + \"em\";\n\n    // Create a new list of actual children at the correct offsets\n    var realChildren = [];\n    var minPos = depth;\n    var maxPos = depth;\n    var currPos = depth;\n    for (var _i2 = 0; _i2 < children.length; _i2++) {\n        var _child = children[_i2];\n        if (_child.type === \"kern\") {\n            currPos += _child.size;\n        } else {\n            var _elem2 = _child.elem;\n            var classes = _child.wrapperClasses || [];\n            var style = _child.wrapperStyle || {};\n\n            var childWrap = buildCommon_makeSpan(classes, [pstrut, _elem2], undefined, style);\n            childWrap.style.top = -pstrutSize - currPos - _elem2.depth + \"em\";\n            if (_child.marginLeft) {\n                childWrap.style.marginLeft = _child.marginLeft;\n            }\n            if (_child.marginRight) {\n                childWrap.style.marginRight = _child.marginRight;\n            }\n\n            realChildren.push(childWrap);\n            currPos += _elem2.height + _elem2.depth;\n        }\n        minPos = Math.min(minPos, currPos);\n        maxPos = Math.max(maxPos, currPos);\n    }\n\n    // The vlist contents go in a table-cell with `vertical-align:bottom`.\n    // This cell's bottom edge will determine the containing table's baseline\n    // without overly expanding the containing line-box.\n    var vlist = buildCommon_makeSpan([\"vlist\"], realChildren);\n    vlist.style.height = maxPos + \"em\";\n\n    // A second row is used if necessary to represent the vlist's depth.\n    var rows = void 0;\n    if (minPos < 0) {\n        // We will define depth in an empty span with display: table-cell.\n        // It should render with the height that we define. But Chrome, in\n        // contenteditable mode only, treats that span as if it contains some\n        // text content. And that min-height over-rides our desired height.\n        // So we put another empty span inside the depth strut span.\n        var emptySpan = buildCommon_makeSpan([], []);\n        var depthStrut = buildCommon_makeSpan([\"vlist\"], [emptySpan]);\n        depthStrut.style.height = -minPos + \"em\";\n\n        // Safari wants the first row to have inline content; otherwise it\n        // puts the bottom of the *second* row on the baseline.\n        var topStrut = buildCommon_makeSpan([\"vlist-s\"], [new domTree_SymbolNode(\"\\u200B\")]);\n\n        rows = [buildCommon_makeSpan([\"vlist-r\"], [vlist, topStrut]), buildCommon_makeSpan([\"vlist-r\"], [depthStrut])];\n    } else {\n        rows = [buildCommon_makeSpan([\"vlist-r\"], [vlist])];\n    }\n\n    var vtable = buildCommon_makeSpan([\"vlist-t\"], rows);\n    if (rows.length === 2) {\n        vtable.classes.push(\"vlist-t2\");\n    }\n    vtable.height = maxPos;\n    vtable.depth = -minPos;\n    return vtable;\n};\n\n// Converts verb group into body string, dealing with \\verb* form\nvar makeVerb = function makeVerb(group, options) {\n    var text = group.body;\n    if (group.star) {\n        text = text.replace(/ /g, \"\\u2423\"); // Open Box\n    } else {\n        text = text.replace(/ /g, '\\xA0'); // No-Break Space\n        // (so that, in particular, spaces don't coalesce)\n    }\n    return text;\n};\n\n// Glue is a concept from TeX which is a flexible space between elements in\n// either a vertical or horizontal list. In KaTeX, at least for now, it's\n// static space between elements in a horizontal layout.\nvar buildCommon_makeGlue = function makeGlue(measurement, options) {\n    // Make an empty span for the space\n    var rule = buildCommon_makeSpan([\"mspace\"], [], options);\n    var size = units_calculateSize(measurement, options);\n    rule.style.marginRight = size + \"em\";\n    return rule;\n};\n\n// Takes font options, and returns the appropriate fontLookup name\nvar retrieveTextFontName = function retrieveTextFontName(fontFamily, fontWeight, fontShape) {\n    var baseFontName = \"\";\n    switch (fontFamily) {\n        case \"amsrm\":\n            baseFontName = \"AMS\";\n            break;\n        case \"textrm\":\n            baseFontName = \"Main\";\n            break;\n        case \"textsf\":\n            baseFontName = \"SansSerif\";\n            break;\n        case \"texttt\":\n            baseFontName = \"Typewriter\";\n            break;\n        default:\n            baseFontName = fontFamily; // use fonts added by a plugin\n    }\n\n    var fontStylesName = void 0;\n    if (fontWeight === \"textbf\" && fontShape === \"textit\") {\n        fontStylesName = \"BoldItalic\";\n    } else if (fontWeight === \"textbf\") {\n        fontStylesName = \"Bold\";\n    } else if (fontWeight === \"textit\") {\n        fontStylesName = \"Italic\";\n    } else {\n        fontStylesName = \"Regular\";\n    }\n\n    return baseFontName + \"-\" + fontStylesName;\n};\n\n// A map of CSS-based spacing functions to their CSS class.\nvar cssSpace = {\n    \"\\\\nobreak\": \"nobreak\",\n    \"\\\\allowbreak\": \"allowbreak\"\n};\n\n// A lookup table to determine whether a spacing function/symbol should be\n// treated like a regular space character.  If a symbol or command is a key\n// in this table, then it should be a regular space character.  Furthermore,\n// the associated value may have a `className` specifying an extra CSS class\n// to add to the created `span`.\nvar regularSpace = {\n    \" \": {},\n    \"\\\\ \": {},\n    \"~\": {\n        className: \"nobreak\"\n    },\n    \"\\\\space\": {},\n    \"\\\\nobreakspace\": {\n        className: \"nobreak\"\n    }\n};\n\n/**\n * Maps TeX font commands to objects containing:\n * - variant: string used for \"mathvariant\" attribute in buildMathML.js\n * - fontName: the \"style\" parameter to fontMetrics.getCharacterMetrics\n */\n// A map between tex font commands an MathML mathvariant attribute values\nvar fontMap = {\n    // styles\n    \"mathbf\": {\n        variant: \"bold\",\n        fontName: \"Main-Bold\"\n    },\n    \"mathrm\": {\n        variant: \"normal\",\n        fontName: \"Main-Regular\"\n    },\n    \"textit\": {\n        variant: \"italic\",\n        fontName: \"Main-Italic\"\n    },\n\n    // \"mathit\" and \"boldsymbol\" are missing because they require the use of two\n    // fonts: Main-Italic and Math-Italic for \"mathit\", and Math-BoldItalic and\n    // Main-Bold for \"boldsymbol\".  This is handled by a special case in makeOrd\n    // which ends up calling mathit and boldsymbol.\n\n    // families\n    \"mathbb\": {\n        variant: \"double-struck\",\n        fontName: \"AMS-Regular\"\n    },\n    \"mathcal\": {\n        variant: \"script\",\n        fontName: \"Caligraphic-Regular\"\n    },\n    \"mathfrak\": {\n        variant: \"fraktur\",\n        fontName: \"Fraktur-Regular\"\n    },\n    \"mathscr\": {\n        variant: \"script\",\n        fontName: \"Script-Regular\"\n    },\n    \"mathsf\": {\n        variant: \"sans-serif\",\n        fontName: \"SansSerif-Regular\"\n    },\n    \"mathtt\": {\n        variant: \"monospace\",\n        fontName: \"Typewriter-Regular\"\n    }\n};\n\nvar svgData = {\n    //   path, width, height\n    vec: [\"vec\", 0.471, 0.714], // values from the font glyph\n    oiintSize1: [\"oiintSize1\", 0.957, 0.499], // oval to overlay the integrand\n    oiintSize2: [\"oiintSize2\", 1.472, 0.659],\n    oiiintSize1: [\"oiiintSize1\", 1.304, 0.499],\n    oiiintSize2: [\"oiiintSize2\", 1.98, 0.659]\n};\n\nvar buildCommon_staticSvg = function staticSvg(value, options) {\n    // Create a span with inline SVG for the element.\n    var _svgData$value = svgData[value],\n        pathName = _svgData$value[0],\n        width = _svgData$value[1],\n        height = _svgData$value[2];\n\n    var path = new domTree_PathNode(pathName);\n    var svgNode = new domTree_SvgNode([path], {\n        \"width\": width + \"em\",\n        \"height\": height + \"em\",\n        // Override CSS rule `.katex svg { width: 100% }`\n        \"style\": \"width:\" + width + \"em\",\n        \"viewBox\": \"0 0 \" + 1000 * width + \" \" + 1000 * height,\n        \"preserveAspectRatio\": \"xMinYMin\"\n    });\n    var span = buildCommon_makeSvgSpan([\"overlay\"], [svgNode], options);\n    span.height = height;\n    span.style.height = height + \"em\";\n    span.style.width = width + \"em\";\n    return span;\n};\n\n/* harmony default export */ var buildCommon = ({\n    fontMap: fontMap,\n    makeSymbol: buildCommon_makeSymbol,\n    mathsym: buildCommon_mathsym,\n    makeSpan: buildCommon_makeSpan,\n    makeSvgSpan: buildCommon_makeSvgSpan,\n    makeLineSpan: makeLineSpan,\n    makeAnchor: buildCommon_makeAnchor,\n    makeFragment: buildCommon_makeFragment,\n    makeVList: buildCommon_makeVList,\n    makeOrd: buildCommon_makeOrd,\n    makeVerb: makeVerb,\n    makeGlue: buildCommon_makeGlue,\n    staticSvg: buildCommon_staticSvg,\n    svgData: svgData,\n    tryCombineChars: tryCombineChars,\n    cssSpace: cssSpace,\n    regularSpace: regularSpace\n});\n// CONCATENATED MODULE: ./src/parseNode.js\n\n\n// ParseNode's corresponding to Symbol `Group`s in symbols.js.\n\n\n// Union of all possible `ParseNode<>` types.\n\n\n// Map from `NodeType` to the corresponding `ParseNode`.\n\n\n/**\n * Asserts that the node is of the given type and returns it with stricter\n * typing. Throws if the node's type does not match.\n */\nfunction assertNodeType(node, type) {\n    var typedNode = checkNodeType(node, type);\n    if (!typedNode) {\n        throw new Error(\"Expected node of type \" + type + \", but got \" + (node ? \"node of type \" + node.type : String(node)));\n    }\n    // $FlowFixMe: Unsure why.\n    return typedNode;\n}\n\n/**\n * Returns the node more strictly typed iff it is of the given type. Otherwise,\n * returns null.\n */\nfunction checkNodeType(node, type) {\n    if (node && node.type === type) {\n        // The definition of ParseNode<TYPE> doesn't communicate to flow that\n        // `type: TYPE` (as that's not explicitly mentioned anywhere), though that\n        // happens to be true for all our value types.\n        // $FlowFixMe\n        return node;\n    }\n    return null;\n}\n\n/**\n * Asserts that the node is of the given type and returns it with stricter\n * typing. Throws if the node's type does not match.\n */\nfunction assertAtomFamily(node, family) {\n    var typedNode = checkAtomFamily(node, family);\n    if (!typedNode) {\n        throw new Error(\"Expected node of type \\\"atom\\\" and family \\\"\" + family + \"\\\", but got \" + (node ? node.type === \"atom\" ? \"atom of family \" + node.family : \"node of type \" + node.type : String(node)));\n    }\n    return typedNode;\n}\n\n/**\n * Returns the node more strictly typed iff it is of the given type. Otherwise,\n * returns null.\n */\nfunction checkAtomFamily(node, family) {\n    return node && node.type === \"atom\" && node.family === family ? node : null;\n}\n\n/**\n * Returns the node more strictly typed iff it is of the given type. Otherwise,\n * returns null.\n */\nfunction assertSymbolNodeType(node) {\n    var typedNode = checkSymbolNodeType(node);\n    if (!typedNode) {\n        throw new Error(\"Expected node of symbol group type, but got \" + (node ? \"node of type \" + node.type : String(node)));\n    }\n    return typedNode;\n}\n\n/**\n * Returns the node more strictly typed iff it is of the given type. Otherwise,\n * returns null.\n */\nfunction checkSymbolNodeType(node) {\n    if (node && (node.type === \"atom\" || NON_ATOMS.hasOwnProperty(node.type))) {\n        // $FlowFixMe\n        return node;\n    }\n    return null;\n}\n// CONCATENATED MODULE: ./src/spacingData.js\n\n\nvar thinspace = {\n    number: 3,\n    unit: \"mu\"\n};\n/**\n * Describes spaces between different classes of atoms.\n */\n\nvar mediumspace = {\n    number: 4,\n    unit: \"mu\"\n};\nvar thickspace = {\n    number: 5,\n    unit: \"mu\"\n};\n\n// Making the type below exact with all optional fields doesn't work due to\n// - https://github.com/facebook/flow/issues/4582\n// - https://github.com/facebook/flow/issues/5688\n// However, since *all* fields are optional, $Shape<> works as suggested in 5688\n// above.\n\n\n// Spacing relationships for display and text styles\nvar spacings = {\n    mord: {\n        mop: thinspace,\n        mbin: mediumspace,\n        mrel: thickspace,\n        minner: thinspace\n    },\n    mop: {\n        mord: thinspace,\n        mop: thinspace,\n        mrel: thickspace,\n        minner: thinspace\n    },\n    mbin: {\n        mord: mediumspace,\n        mop: mediumspace,\n        mopen: mediumspace,\n        minner: mediumspace\n    },\n    mrel: {\n        mord: thickspace,\n        mop: thickspace,\n        mopen: thickspace,\n        minner: thickspace\n    },\n    mopen: {},\n    mclose: {\n        mop: thinspace,\n        mbin: mediumspace,\n        mrel: thickspace,\n        minner: thinspace\n    },\n    mpunct: {\n        mord: thinspace,\n        mop: thinspace,\n        mrel: thickspace,\n        mopen: thinspace,\n        mclose: thinspace,\n        mpunct: thinspace,\n        minner: thinspace\n    },\n    minner: {\n        mord: thinspace,\n        mop: thinspace,\n        mbin: mediumspace,\n        mrel: thickspace,\n        mopen: thinspace,\n        mpunct: thinspace,\n        minner: thinspace\n    }\n};\n\n// Spacing relationships for script and scriptscript styles\nvar tightSpacings = {\n    mord: {\n        mop: thinspace\n    },\n    mop: {\n        mord: thinspace,\n        mop: thinspace\n    },\n    mbin: {},\n    mrel: {},\n    mopen: {},\n    mclose: {\n        mop: thinspace\n    },\n    mpunct: {},\n    minner: {\n        mop: thinspace\n    }\n};\n// CONCATENATED MODULE: ./src/defineFunction.js\n\n\n/** Context provided to function handlers for error messages. */\n\n\n// More general version of `HtmlBuilder` for nodes (e.g. \\sum, accent types)\n// whose presence impacts super/subscripting. In this case, ParseNode<\"supsub\">\n// delegates its HTML building to the HtmlBuilder corresponding to these nodes.\n\n\n/**\n * Final function spec for use at parse time.\n * This is almost identical to `FunctionPropSpec`, except it\n * 1. includes the function handler, and\n * 2. requires all arguments except argTypes.\n * It is generated by `defineFunction()` below.\n */\n\n\n/**\n * All registered functions.\n * `functions.js` just exports this same dictionary again and makes it public.\n * `Parser.js` requires this dictionary.\n */\nvar _functions = {};\n\n/**\n * All HTML builders. Should be only used in the `define*` and the `build*ML`\n * functions.\n */\nvar _htmlGroupBuilders = {};\n\n/**\n * All MathML builders. Should be only used in the `define*` and the `build*ML`\n * functions.\n */\nvar _mathmlGroupBuilders = {};\n\nfunction defineFunction(_ref) {\n    var type = _ref.type,\n        nodeType = _ref.nodeType,\n        names = _ref.names,\n        props = _ref.props,\n        handler = _ref.handler,\n        htmlBuilder = _ref.htmlBuilder,\n        mathmlBuilder = _ref.mathmlBuilder;\n\n    // Set default values of functions\n    var data = {\n        type: type,\n        numArgs: props.numArgs,\n        argTypes: props.argTypes,\n        greediness: props.greediness === undefined ? 1 : props.greediness,\n        allowedInText: !!props.allowedInText,\n        allowedInMath: props.allowedInMath === undefined ? true : props.allowedInMath,\n        numOptionalArgs: props.numOptionalArgs || 0,\n        infix: !!props.infix,\n        consumeMode: props.consumeMode,\n        handler: handler\n    };\n    for (var i = 0; i < names.length; ++i) {\n        // TODO: The value type of _functions should be a type union of all\n        // possible `FunctionSpec<>` possibilities instead of `FunctionSpec<*>`,\n        // which is an existential type.\n        // $FlowFixMe\n        _functions[names[i]] = data;\n    }\n    if (type) {\n        if (htmlBuilder) {\n            _htmlGroupBuilders[type] = htmlBuilder;\n        }\n        if (mathmlBuilder) {\n            _mathmlGroupBuilders[type] = mathmlBuilder;\n        }\n    }\n}\n\n/**\n * Use this to register only the HTML and MathML builders for a function (e.g.\n * if the function's ParseNode is generated in Parser.js rather than via a\n * stand-alone handler provided to `defineFunction`).\n */\nfunction defineFunctionBuilders(_ref2) {\n    var type = _ref2.type,\n        htmlBuilder = _ref2.htmlBuilder,\n        mathmlBuilder = _ref2.mathmlBuilder;\n\n    defineFunction({\n        type: type,\n        names: [],\n        props: { numArgs: 0 },\n        handler: function handler() {\n            throw new Error('Should never be called.');\n        },\n\n        htmlBuilder: htmlBuilder,\n        mathmlBuilder: mathmlBuilder\n    });\n}\n\n// Since the corresponding buildHTML/buildMathML function expects a\n// list of elements, we normalize for different kinds of arguments\nvar defineFunction_ordargument = function ordargument(arg) {\n    var node = checkNodeType(arg, \"ordgroup\");\n    return node ? node.body : [arg];\n};\n// CONCATENATED MODULE: ./src/buildHTML.js\n\n/**\n * This file does the main work of building a domTree structure from a parse\n * tree. The entry point is the `buildHTML` function, which takes a parse tree.\n * Then, the buildExpression, buildGroup, and various groupBuilders functions\n * are called, to produce a final HTML tree.\n */\n\n\n\n\n\n\n\n\n\n\n\nvar buildHTML_makeSpan = buildCommon.makeSpan;\n\n// Binary atoms (first class `mbin`) change into ordinary atoms (`mord`)\n// depending on their surroundings. See TeXbook pg. 442-446, Rules 5 and 6,\n// and the text before Rule 19.\nvar buildHTML_isBinLeftCanceller = function isBinLeftCanceller(node, isRealGroup) {\n    // TODO: This code assumes that a node's math class is the first element\n    // of its `classes` array. A later cleanup should ensure this, for\n    // instance by changing the signature of `makeSpan`.\n    if (node) {\n        return utils.contains([\"mbin\", \"mopen\", \"mrel\", \"mop\", \"mpunct\"], getTypeOfDomTree(node, \"right\"));\n    } else {\n        return isRealGroup;\n    }\n};\n\nvar buildHTML_isBinRightCanceller = function isBinRightCanceller(node, isRealGroup) {\n    if (node) {\n        return utils.contains([\"mrel\", \"mclose\", \"mpunct\"], getTypeOfDomTree(node, \"left\"));\n    } else {\n        return isRealGroup;\n    }\n};\n\nvar buildHTML_styleMap = {\n    \"display\": src_Style.DISPLAY,\n    \"text\": src_Style.TEXT,\n    \"script\": src_Style.SCRIPT,\n    \"scriptscript\": src_Style.SCRIPTSCRIPT\n};\n\nvar DomEnum = {\n    mord: \"mord\",\n    mop: \"mop\",\n    mbin: \"mbin\",\n    mrel: \"mrel\",\n    mopen: \"mopen\",\n    mclose: \"mclose\",\n    mpunct: \"mpunct\",\n    minner: \"minner\"\n};\n\n\n/**\n * Take a list of nodes, build them in order, and return a list of the built\n * nodes. documentFragments are flattened into their contents, so the\n * returned list contains no fragments. `isRealGroup` is true if `expression`\n * is a real group (no atoms will be added on either side), as opposed to\n * a partial group (e.g. one created by \\color). `surrounding` is an array\n * consisting type of nodes that will be added to the left and right.\n */\nvar buildHTML_buildExpression = function buildExpression(expression, options, isRealGroup) {\n    var surrounding = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [null, null];\n\n    // Parse expressions into `groups`.\n    var rawGroups = [];\n    for (var i = 0; i < expression.length; i++) {\n        var output = buildHTML_buildGroup(expression[i], options);\n        if (output instanceof tree_DocumentFragment) {\n            var children = output.children;\n            rawGroups.push.apply(rawGroups, children);\n        } else {\n            rawGroups.push(output);\n        }\n    }\n    // At this point `rawGroups` consists entirely of `symbolNode`s and `span`s.\n\n    // Ignore explicit spaces (e.g., \\;, \\,) when determining what implicit\n    // spacing should go between atoms of different classes, and add dummy\n    // spans for determining spacings between surrounding atoms.\n    var nonSpaces = [surrounding[0] ? buildHTML_makeSpan([surrounding[0]], [], options) : null].concat(rawGroups.filter(function (group) {\n        return group && group.classes[0] !== \"mspace\";\n    }), [surrounding[1] ? buildHTML_makeSpan([surrounding[1]], [], options) : null]);\n\n    // Before determining what spaces to insert, perform bin cancellation.\n    // Binary operators change to ordinary symbols in some contexts.\n    for (var _i = 1; _i < nonSpaces.length - 1; _i++) {\n        var nonSpacesI = assert(nonSpaces[_i]);\n        var left = buildHTML_getOutermostNode(nonSpacesI, \"left\");\n        if (left.classes[0] === \"mbin\" && buildHTML_isBinLeftCanceller(nonSpaces[_i - 1], isRealGroup)) {\n            left.classes[0] = \"mord\";\n        }\n\n        var right = buildHTML_getOutermostNode(nonSpacesI, \"right\");\n        if (right.classes[0] === \"mbin\" && buildHTML_isBinRightCanceller(nonSpaces[_i + 1], isRealGroup)) {\n            right.classes[0] = \"mord\";\n        }\n    }\n\n    var groups = [];\n    var j = 0;\n    for (var _i2 = 0; _i2 < rawGroups.length; _i2++) {\n        groups.push(rawGroups[_i2]);\n\n        // For any group that is not a space, get the next non-space.  Then\n        // lookup what implicit space should be placed between those atoms and\n        // add it to groups.\n        if (rawGroups[_i2].classes[0] !== \"mspace\" && j < nonSpaces.length - 1) {\n            // if current non-space node is left dummy span, add a glue before\n            // first real non-space node\n            if (j === 0) {\n                groups.pop();\n                _i2--;\n            }\n\n            // Get the type of the current non-space node.  If it's a document\n            // fragment, get the type of the rightmost node in the fragment.\n            var _left = getTypeOfDomTree(nonSpaces[j], \"right\");\n\n            // Get the type of the next non-space node.  If it's a document\n            // fragment, get the type of the leftmost node in the fragment.\n            var _right = getTypeOfDomTree(nonSpaces[j + 1], \"left\");\n\n            // We use buildExpression inside of sizingGroup, but it returns a\n            // document fragment of elements.  sizingGroup sets `isRealGroup`\n            // to false to avoid processing spans multiple times.\n            if (_left && _right && isRealGroup) {\n                var nonSpacesJp1 = assert(nonSpaces[j + 1]);\n                var space = isLeftTight(nonSpacesJp1) ? tightSpacings[_left][_right] : spacings[_left][_right];\n\n                if (space) {\n                    var glueOptions = options;\n\n                    if (expression.length === 1) {\n                        var node = checkNodeType(expression[0], \"sizing\") || checkNodeType(expression[0], \"styling\");\n                        if (!node) {\n                            // No match.\n                        } else if (node.type === \"sizing\") {\n                            glueOptions = options.havingSize(node.size);\n                        } else if (node.type === \"styling\") {\n                            glueOptions = options.havingStyle(buildHTML_styleMap[node.style]);\n                        }\n                    }\n\n                    groups.push(buildCommon.makeGlue(space, glueOptions));\n                }\n            }\n            j++;\n        }\n    }\n\n    return groups;\n};\n\n// Return the outermost node of a domTree.\nvar buildHTML_getOutermostNode = function getOutermostNode(node, side) {\n    if (node instanceof tree_DocumentFragment || node instanceof domTree_Anchor) {\n        var children = node.children;\n        if (children.length) {\n            if (side === \"right\") {\n                return getOutermostNode(children[children.length - 1], \"right\");\n            } else if (side === \"left\") {\n                return getOutermostNode(children[0], \"right\");\n            }\n        }\n    }\n    return node;\n};\n\n// Return math atom class (mclass) of a domTree.\nvar getTypeOfDomTree = function getTypeOfDomTree(node, side) {\n    if (!node) {\n        return null;\n    }\n\n    node = buildHTML_getOutermostNode(node, side);\n    // This makes a lot of assumptions as to where the type of atom\n    // appears.  We should do a better job of enforcing this.\n    return DomEnum[node.classes[0]] || null;\n};\n\n// If `node` is an atom return whether it's been assigned the mtight class.\n// If `node` is a document fragment, return the value of isLeftTight() for the\n// leftmost node in the fragment.\n// 'mtight' indicates that the node is script or scriptscript style.\nvar isLeftTight = function isLeftTight(node) {\n    node = buildHTML_getOutermostNode(node, \"left\");\n    return node.hasClass(\"mtight\");\n};\n\nvar makeNullDelimiter = function makeNullDelimiter(options, classes) {\n    var moreClasses = [\"nulldelimiter\"].concat(options.baseSizingClasses());\n    return buildHTML_makeSpan(classes.concat(moreClasses));\n};\n\n/**\n * buildGroup is the function that takes a group and calls the correct groupType\n * function for it. It also handles the interaction of size and style changes\n * between parents and children.\n */\nvar buildHTML_buildGroup = function buildGroup(group, options, baseOptions) {\n    if (!group) {\n        return buildHTML_makeSpan();\n    }\n\n    if (_htmlGroupBuilders[group.type]) {\n        // Call the groupBuilders function\n        var groupNode = _htmlGroupBuilders[group.type](group, options);\n\n        // If the size changed between the parent and the current group, account\n        // for that size difference.\n        if (baseOptions && options.size !== baseOptions.size) {\n            groupNode = buildHTML_makeSpan(options.sizingClasses(baseOptions), [groupNode], options);\n\n            var multiplier = options.sizeMultiplier / baseOptions.sizeMultiplier;\n\n            groupNode.height *= multiplier;\n            groupNode.depth *= multiplier;\n        }\n\n        return groupNode;\n    } else {\n        throw new src_ParseError(\"Got group of unknown type: '\" + group.type + \"'\");\n    }\n};\n\n/**\n * Combine an array of HTML DOM nodes (e.g., the output of `buildExpression`)\n * into an unbreakable HTML node of class .base, with proper struts to\n * guarantee correct vertical extent.  `buildHTML` calls this repeatedly to\n * make up the entire expression as a sequence of unbreakable units.\n */\nfunction buildHTMLUnbreakable(children, options) {\n    // Compute height and depth of this chunk.\n    var body = buildHTML_makeSpan([\"base\"], children, options);\n\n    // Add strut, which ensures that the top of the HTML element falls at\n    // the height of the expression, and the bottom of the HTML element\n    // falls at the depth of the expression.\n    // We used to have separate top and bottom struts, where the bottom strut\n    // would like to use `vertical-align: top`, but in IE 9 this lowers the\n    // baseline of the box to the bottom of this strut (instead of staying in\n    // the normal place) so we use an absolute value for vertical-align instead.\n    var strut = buildHTML_makeSpan([\"strut\"]);\n    strut.style.height = body.height + body.depth + \"em\";\n    strut.style.verticalAlign = -body.depth + \"em\";\n    body.children.unshift(strut);\n\n    return body;\n}\n\n/**\n * Take an entire parse tree, and build it into an appropriate set of HTML\n * nodes.\n */\nfunction buildHTML(tree, options) {\n    // Strip off outer tag wrapper for processing below.\n    var tag = null;\n    if (tree.length === 1 && tree[0].type === \"tag\") {\n        tag = tree[0].tag;\n        tree = tree[0].body;\n    }\n\n    // Build the expression contained in the tree\n    var expression = buildHTML_buildExpression(tree, options, true);\n\n    var children = [];\n\n    // Create one base node for each chunk between potential line breaks.\n    // The TeXBook [p.173] says \"A formula will be broken only after a\n    // relation symbol like $=$ or $<$ or $\\rightarrow$, or after a binary\n    // operation symbol like $+$ or $-$ or $\\times$, where the relation or\n    // binary operation is on the ``outer level'' of the formula (i.e., not\n    // enclosed in {...} and not part of an \\over construction).\"\n\n    var parts = [];\n    for (var i = 0; i < expression.length; i++) {\n        parts.push(expression[i]);\n        if (expression[i].hasClass(\"mbin\") || expression[i].hasClass(\"mrel\") || expression[i].hasClass(\"allowbreak\")) {\n            // Put any post-operator glue on same line as operator.\n            // Watch for \\nobreak along the way.\n            var nobreak = false;\n            while (i < expression.length - 1 && expression[i + 1].hasClass(\"mspace\")) {\n                i++;\n                parts.push(expression[i]);\n                if (expression[i].hasClass(\"nobreak\")) {\n                    nobreak = true;\n                }\n            }\n            // Don't allow break if \\nobreak among the post-operator glue.\n            if (!nobreak) {\n                children.push(buildHTMLUnbreakable(parts, options));\n                parts = [];\n            }\n        } else if (expression[i].hasClass(\"newline\")) {\n            // Write the line except the newline\n            parts.pop();\n            if (parts.length > 0) {\n                children.push(buildHTMLUnbreakable(parts, options));\n                parts = [];\n            }\n            // Put the newline at the top level\n            children.push(expression[i]);\n        }\n    }\n    if (parts.length > 0) {\n        children.push(buildHTMLUnbreakable(parts, options));\n    }\n\n    // Now, if there was a tag, build it too and append it as a final child.\n    var tagChild = void 0;\n    if (tag) {\n        tagChild = buildHTMLUnbreakable(buildHTML_buildExpression(tag, options, true));\n        tagChild.classes = [\"tag\"];\n        children.push(tagChild);\n    }\n\n    var htmlNode = buildHTML_makeSpan([\"katex-html\"], children);\n    htmlNode.setAttribute(\"aria-hidden\", \"true\");\n\n    // Adjust the strut of the tag to be the maximum height of all children\n    // (the height of the enclosing htmlNode) for proper vertical alignment.\n    if (tagChild) {\n        var strut = tagChild.children[0];\n        strut.style.height = htmlNode.height + htmlNode.depth + \"em\";\n        strut.style.verticalAlign = -htmlNode.depth + \"em\";\n    }\n\n    return htmlNode;\n}\n// CONCATENATED MODULE: ./src/mathMLTree.js\n\n\n/**\n * These objects store data about MathML nodes. This is the MathML equivalent\n * of the types in domTree.js. Since MathML handles its own rendering, and\n * since we're mainly using MathML to improve accessibility, we don't manage\n * any of the styling state that the plain DOM nodes do.\n *\n * The `toNode` and `toMarkup` functions work simlarly to how they do in\n * domTree.js, creating namespaced DOM nodes and HTML text markup respectively.\n */\n\n\n\n\n/**\n * MathML node types used in KaTeX. For a complete list of MathML nodes, see\n * https://developer.mozilla.org/en-US/docs/Web/MathML/Element.\n */\n\nfunction newDocumentFragment(children) {\n    return new tree_DocumentFragment(children);\n}\n\n/**\n * This node represents a general purpose MathML node of any type. The\n * constructor requires the type of node to create (for example, `\"mo\"` or\n * `\"mspace\"`, corresponding to `<mo>` and `<mspace>` tags).\n */\nvar mathMLTree_MathNode = function () {\n    function MathNode(type, children) {\n        classCallCheck_default()(this, MathNode);\n\n        this.type = type;\n        this.attributes = {};\n        this.children = children || [];\n    }\n\n    /**\n     * Sets an attribute on a MathML node. MathML depends on attributes to convey a\n     * semantic content, so this is used heavily.\n     */\n\n\n    MathNode.prototype.setAttribute = function setAttribute(name, value) {\n        this.attributes[name] = value;\n    };\n\n    /**\n     * Gets an attribute on a MathML node.\n     */\n\n\n    MathNode.prototype.getAttribute = function getAttribute(name) {\n        return this.attributes[name];\n    };\n\n    /**\n     * Converts the math node into a MathML-namespaced DOM element.\n     */\n\n\n    MathNode.prototype.toNode = function toNode() {\n        var node = document.createElementNS(\"http://www.w3.org/1998/Math/MathML\", this.type);\n\n        for (var attr in this.attributes) {\n            if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n                node.setAttribute(attr, this.attributes[attr]);\n            }\n        }\n\n        for (var i = 0; i < this.children.length; i++) {\n            node.appendChild(this.children[i].toNode());\n        }\n\n        return node;\n    };\n\n    /**\n     * Converts the math node into an HTML markup string.\n     */\n\n\n    MathNode.prototype.toMarkup = function toMarkup() {\n        var markup = \"<\" + this.type;\n\n        // Add the attributes\n        for (var attr in this.attributes) {\n            if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n                markup += \" \" + attr + \"=\\\"\";\n                markup += utils.escape(this.attributes[attr]);\n                markup += \"\\\"\";\n            }\n        }\n\n        markup += \">\";\n\n        for (var i = 0; i < this.children.length; i++) {\n            markup += this.children[i].toMarkup();\n        }\n\n        markup += \"</\" + this.type + \">\";\n\n        return markup;\n    };\n\n    /**\n     * Converts the math node into a string, similar to innerText, but escaped.\n     */\n\n\n    MathNode.prototype.toText = function toText() {\n        return this.children.map(function (child) {\n            return child.toText();\n        }).join(\"\");\n    };\n\n    return MathNode;\n}();\n\n/**\n * This node represents a piece of text.\n */\nvar mathMLTree_TextNode = function () {\n    function TextNode(text) {\n        var needsEscape = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n        classCallCheck_default()(this, TextNode);\n\n        this.text = text;\n        this.needsEscape = needsEscape;\n    }\n\n    /**\n     * Converts the text node into a DOM text node.\n     */\n\n\n    TextNode.prototype.toNode = function toNode() {\n        return document.createTextNode(this.toText());\n    };\n\n    /**\n     * Converts the text node into escaped HTML markup\n     * (representing the text itself).\n     */\n\n\n    TextNode.prototype.toMarkup = function toMarkup() {\n        return this.toText();\n    };\n\n    /**\n     * Converts the text node into an escaped string\n     * (representing the text iteself).\n     */\n\n\n    TextNode.prototype.toText = function toText() {\n        return this.needsEscape ? utils.escape(this.text) : this.text;\n    };\n\n    return TextNode;\n}();\n\n/**\n * This node represents a space, but may render as <mspace.../> or as text,\n * depending on the width.\n */\n\nvar mathMLTree_SpaceNode = function () {\n\n    /**\n     * Create a Space node with width given in CSS ems.\n     */\n    function SpaceNode(width) {\n        classCallCheck_default()(this, SpaceNode);\n\n        this.width = width;\n        // See https://www.w3.org/TR/2000/WD-MathML2-20000328/chapter6.html\n        // for a table of space-like characters.  We consistently use the\n        // &LongNames; because Unicode does not have single characters for\n        // &ThickSpace; (\\u2005\\u200a) and all negative spaces.\n        if (width >= 0.05555 && width <= 0.05556) {\n            this.character = \"&VeryThinSpace;\"; // \\u200a\n        } else if (width >= 0.1666 && width <= 0.1667) {\n            this.character = \"&ThinSpace;\"; // \\u2009\n        } else if (width >= 0.2222 && width <= 0.2223) {\n            this.character = \"&MediumSpace;\"; // \\u2005\n        } else if (width >= 0.2777 && width <= 0.2778) {\n            this.character = \"&ThickSpace;\"; // \\u2005\\u200a\n        } else if (width >= -0.05556 && width <= -0.05555) {\n            this.character = \"&NegativeVeryThinSpace;\";\n        } else if (width >= -0.1667 && width <= -0.1666) {\n            this.character = \"&NegativeThinSpace;\";\n        } else if (width >= -0.2223 && width <= -0.2222) {\n            this.character = \"&NegativeMediumSpace;\";\n        } else if (width >= -0.2778 && width <= -0.2777) {\n            this.character = \"&NegativeThickSpace;\";\n        } else {\n            this.character = null;\n        }\n    }\n\n    /**\n     * Converts the math node into a MathML-namespaced DOM element.\n     */\n\n\n    SpaceNode.prototype.toNode = function toNode() {\n        if (this.character) {\n            return document.createTextNode(this.character);\n        } else {\n            var node = document.createElementNS(\"http://www.w3.org/1998/Math/MathML\", \"mspace\");\n            node.setAttribute(\"width\", this.width + \"em\");\n            return node;\n        }\n    };\n\n    /**\n     * Converts the math node into an HTML markup string.\n     */\n\n\n    SpaceNode.prototype.toMarkup = function toMarkup() {\n        if (this.character) {\n            return \"<mtext>\" + this.character + \"</mtext>\";\n        } else {\n            return \"<mspace width=\\\"\" + this.width + \"em\\\"/>\";\n        }\n    };\n\n    /**\n     * Converts the math node into a string, similar to innerText.\n     */\n\n\n    SpaceNode.prototype.toText = function toText() {\n        if (this.character) {\n            return this.character;\n        } else {\n            return \" \";\n        }\n    };\n\n    return SpaceNode;\n}();\n\n/* harmony default export */ var mathMLTree = ({\n    MathNode: mathMLTree_MathNode,\n    TextNode: mathMLTree_TextNode,\n    SpaceNode: mathMLTree_SpaceNode,\n    newDocumentFragment: newDocumentFragment\n});\n// CONCATENATED MODULE: ./src/buildMathML.js\n\n/**\n * This file converts a parse tree into a cooresponding MathML tree. The main\n * entry point is the `buildMathML` function, which takes a parse tree from the\n * parser.\n */\n\n\n\n\n\n\n\n\n\n\n/**\n * Takes a symbol and converts it into a MathML text node after performing\n * optional replacement from symbols.js.\n */\nvar buildMathML_makeText = function makeText(text, mode, options) {\n    if (src_symbols[mode][text] && src_symbols[mode][text].replace && text.charCodeAt(0) !== 0xD835 && !(ligatures.hasOwnProperty(text) && options && (options.fontFamily && options.fontFamily.substr(4, 2) === \"tt\" || options.font && options.font.substr(4, 2) === \"tt\"))) {\n        text = src_symbols[mode][text].replace;\n    }\n\n    return new mathMLTree.TextNode(text);\n};\n\n/**\n * Wrap the given array of nodes in an <mrow> node if needed, i.e.,\n * unless the array has length 1.  Always returns a single node.\n */\nvar buildMathML_makeRow = function makeRow(body) {\n    if (body.length === 1) {\n        return body[0];\n    } else {\n        return new mathMLTree.MathNode(\"mrow\", body);\n    }\n};\n\n/**\n * Returns the math variant as a string or null if none is required.\n */\nvar buildMathML_getVariant = function getVariant(group, options) {\n    // Handle \\text... font specifiers as best we can.\n    // MathML has a limited list of allowable mathvariant specifiers; see\n    // https://www.w3.org/TR/MathML3/chapter3.html#presm.commatt\n    if (options.fontFamily === \"texttt\") {\n        return \"monospace\";\n    } else if (options.fontFamily === \"textsf\") {\n        if (options.fontShape === \"textit\" && options.fontWeight === \"textbf\") {\n            return \"sans-serif-bold-italic\";\n        } else if (options.fontShape === \"textit\") {\n            return \"sans-serif-italic\";\n        } else if (options.fontWeight === \"textbf\") {\n            return \"bold-sans-serif\";\n        } else {\n            return \"sans-serif\";\n        }\n    } else if (options.fontShape === \"textit\" && options.fontWeight === \"textbf\") {\n        return \"bold-italic\";\n    } else if (options.fontShape === \"textit\") {\n        return \"italic\";\n    } else if (options.fontWeight === \"textbf\") {\n        return \"bold\";\n    }\n\n    var font = options.font;\n    if (!font) {\n        return null;\n    }\n\n    var mode = group.mode;\n    if (font === \"mathit\") {\n        return \"italic\";\n    } else if (font === \"boldsymbol\") {\n        return \"bold-italic\";\n    }\n\n    var text = group.text;\n    if (utils.contains([\"\\\\imath\", \"\\\\jmath\"], text)) {\n        return null;\n    }\n\n    if (src_symbols[mode][text] && src_symbols[mode][text].replace) {\n        text = src_symbols[mode][text].replace;\n    }\n\n    var fontName = buildCommon.fontMap[font].fontName;\n    if (getCharacterMetrics(text, fontName, mode)) {\n        return buildCommon.fontMap[font].variant;\n    }\n\n    return null;\n};\n\n/**\n * Takes a list of nodes, builds them, and returns a list of the generated\n * MathML nodes.  Also combine consecutive <mtext> outputs into a single\n * <mtext> tag.\n */\nvar buildMathML_buildExpression = function buildExpression(expression, options) {\n    var groups = [];\n    var lastGroup = void 0;\n    for (var i = 0; i < expression.length; i++) {\n        var group = buildMathML_buildGroup(expression[i], options);\n        if (group instanceof mathMLTree_MathNode && lastGroup instanceof mathMLTree_MathNode) {\n            // Concatenate adjacent <mtext>s\n            if (group.type === 'mtext' && lastGroup.type === 'mtext' && group.getAttribute('mathvariant') === lastGroup.getAttribute('mathvariant')) {\n                var _lastGroup$children;\n\n                (_lastGroup$children = lastGroup.children).push.apply(_lastGroup$children, group.children);\n                continue;\n                // Concatenate adjacent <mn>s\n            } else if (group.type === 'mn' && lastGroup.type === 'mn') {\n                var _lastGroup$children2;\n\n                (_lastGroup$children2 = lastGroup.children).push.apply(_lastGroup$children2, group.children);\n                continue;\n                // Concatenate <mn>...</mn> followed by <mi>.</mi>\n            } else if (group.type === 'mi' && group.children.length === 1 && lastGroup.type === 'mn') {\n                var child = group.children[0];\n                if (child instanceof mathMLTree_TextNode && child.text === '.') {\n                    var _lastGroup$children3;\n\n                    (_lastGroup$children3 = lastGroup.children).push.apply(_lastGroup$children3, group.children);\n                    continue;\n                }\n            }\n        }\n        groups.push(group);\n        lastGroup = group;\n    }\n\n    // TODO(kevinb): combine \\\\not with mrels and mords\n\n    return groups;\n};\n\n/**\n * Equivalent to buildExpression, but wraps the elements in an <mrow>\n * if there's more than one.  Returns a single node instead of an array.\n */\nvar buildExpressionRow = function buildExpressionRow(expression, options) {\n    return buildMathML_makeRow(buildMathML_buildExpression(expression, options));\n};\n\n/**\n * Takes a group from the parser and calls the appropriate groupBuilders function\n * on it to produce a MathML node.\n */\nvar buildMathML_buildGroup = function buildGroup(group, options) {\n    if (!group) {\n        return new mathMLTree.MathNode(\"mrow\");\n    }\n\n    if (_mathmlGroupBuilders[group.type]) {\n        // Call the groupBuilders function\n        var result = _mathmlGroupBuilders[group.type](group, options);\n        return result;\n    } else {\n        throw new src_ParseError(\"Got group of unknown type: '\" + group.type + \"'\");\n    }\n};\n\n/**\n * Takes a full parse tree and settings and builds a MathML representation of\n * it. In particular, we put the elements from building the parse tree into a\n * <semantics> tag so we can also include that TeX source as an annotation.\n *\n * Note that we actually return a domTree element with a `<math>` inside it so\n * we can do appropriate styling.\n */\nfunction buildMathML(tree, texExpression, options) {\n    var expression = buildMathML_buildExpression(tree, options);\n\n    // Wrap up the expression in an mrow so it is presented in the semantics\n    // tag correctly, unless it's a single <mrow> or <mtable>.\n    var wrapper = void 0;\n    if (expression.length === 1 && expression[0] instanceof mathMLTree_MathNode && utils.contains([\"mrow\", \"mtable\"], expression[0].type)) {\n        wrapper = expression[0];\n    } else {\n        wrapper = new mathMLTree.MathNode(\"mrow\", expression);\n    }\n\n    // Build a TeX annotation of the source\n    var annotation = new mathMLTree.MathNode(\"annotation\", [new mathMLTree.TextNode(texExpression)]);\n\n    annotation.setAttribute(\"encoding\", \"application/x-tex\");\n\n    var semantics = new mathMLTree.MathNode(\"semantics\", [wrapper, annotation]);\n\n    var math = new mathMLTree.MathNode(\"math\", [semantics]);\n\n    // You can't style <math> nodes, so we wrap the node in a span.\n    // NOTE: The span class is not typed to have <math> nodes as children, and\n    // we don't want to make the children type more generic since the children\n    // of span are expected to have more fields in `buildHtml` contexts.\n    // $FlowFixMe\n    return buildCommon.makeSpan([\"katex-mathml\"], [math]);\n}\n// CONCATENATED MODULE: ./src/buildTree.js\n\n\n\n\n\n\n\nvar buildTree_optionsFromSettings = function optionsFromSettings(settings) {\n    return new src_Options({\n        style: settings.displayMode ? src_Style.DISPLAY : src_Style.TEXT,\n        maxSize: settings.maxSize\n    });\n};\n\nvar buildTree_buildTree = function buildTree(tree, expression, settings) {\n    var options = buildTree_optionsFromSettings(settings);\n    var mathMLNode = buildMathML(tree, expression, options);\n    var htmlNode = buildHTML(tree, options);\n\n    var katexNode = buildCommon.makeSpan([\"katex\"], [mathMLNode, htmlNode]);\n\n    if (settings.displayMode) {\n        return buildCommon.makeSpan([\"katex-display\"], [katexNode]);\n    } else {\n        return katexNode;\n    }\n};\n\nvar buildTree_buildHTMLTree = function buildHTMLTree(tree, expression, settings) {\n    var options = buildTree_optionsFromSettings(settings);\n    var htmlNode = buildHTML(tree, options);\n    var katexNode = buildCommon.makeSpan([\"katex\"], [htmlNode]);\n    if (settings.displayMode) {\n        return buildCommon.makeSpan([\"katex-display\"], [katexNode]);\n    } else {\n        return katexNode;\n    }\n};\n\n/* harmony default export */ var src_buildTree = (buildTree_buildTree);\n// CONCATENATED MODULE: ./src/stretchy.js\n\n/**\n * This file provides support to buildMathML.js and buildHTML.js\n * for stretchy wide elements rendered from SVG files\n * and other CSS trickery.\n */\n\n\n\n\n\n\nvar stretchyCodePoint = {\n    widehat: \"^\",\n    widecheck: \"ˇ\",\n    widetilde: \"~\",\n    utilde: \"~\",\n    overleftarrow: \"\\u2190\",\n    underleftarrow: \"\\u2190\",\n    xleftarrow: \"\\u2190\",\n    overrightarrow: \"\\u2192\",\n    underrightarrow: \"\\u2192\",\n    xrightarrow: \"\\u2192\",\n    underbrace: \"\\u23B5\",\n    overbrace: \"\\u23DE\",\n    overleftrightarrow: \"\\u2194\",\n    underleftrightarrow: \"\\u2194\",\n    xleftrightarrow: \"\\u2194\",\n    Overrightarrow: \"\\u21D2\",\n    xRightarrow: \"\\u21D2\",\n    overleftharpoon: \"\\u21BC\",\n    xleftharpoonup: \"\\u21BC\",\n    overrightharpoon: \"\\u21C0\",\n    xrightharpoonup: \"\\u21C0\",\n    xLeftarrow: \"\\u21D0\",\n    xLeftrightarrow: \"\\u21D4\",\n    xhookleftarrow: \"\\u21A9\",\n    xhookrightarrow: \"\\u21AA\",\n    xmapsto: \"\\u21A6\",\n    xrightharpoondown: \"\\u21C1\",\n    xleftharpoondown: \"\\u21BD\",\n    xrightleftharpoons: \"\\u21CC\",\n    xleftrightharpoons: \"\\u21CB\",\n    xtwoheadleftarrow: \"\\u219E\",\n    xtwoheadrightarrow: \"\\u21A0\",\n    xlongequal: \"=\",\n    xtofrom: \"\\u21C4\",\n    xrightleftarrows: \"\\u21C4\",\n    xrightequilibrium: \"\\u21CC\", // Not a perfect match.\n    xleftequilibrium: \"\\u21CB\" // None better available.\n};\n\nvar stretchy_mathMLnode = function mathMLnode(label) {\n    var node = new mathMLTree.MathNode(\"mo\", [new mathMLTree.TextNode(stretchyCodePoint[label.substr(1)])]);\n    node.setAttribute(\"stretchy\", \"true\");\n    return node;\n};\n\n// Many of the KaTeX SVG images have been adapted from glyphs in KaTeX fonts.\n// Copyright (c) 2009-2010, Design Science, Inc. (<www.mathjax.org>)\n// Copyright (c) 2014-2017 Khan Academy (<www.khanacademy.org>)\n// Licensed under the SIL Open Font License, Version 1.1.\n// See \\nhttp://scripts.sil.org/OFL\n\n// Very Long SVGs\n//    Many of the KaTeX stretchy wide elements use a long SVG image and an\n//    overflow: hidden tactic to achieve a stretchy image while avoiding\n//    distortion of arrowheads or brace corners.\n\n//    The SVG typically contains a very long (400 em) arrow.\n\n//    The SVG is in a container span that has overflow: hidden, so the span\n//    acts like a window that exposes only part of the  SVG.\n\n//    The SVG always has a longer, thinner aspect ratio than the container span.\n//    After the SVG fills 100% of the height of the container span,\n//    there is a long arrow shaft left over. That left-over shaft is not shown.\n//    Instead, it is sliced off because the span's CSS has overflow: hidden.\n\n//    Thus, the reader sees an arrow that matches the subject matter width\n//    without distortion.\n\n//    Some functions, such as \\cancel, need to vary their aspect ratio. These\n//    functions do not get the overflow SVG treatment.\n\n// Second Brush Stroke\n//    Low resolution monitors struggle to display images in fine detail.\n//    So browsers apply anti-aliasing. A long straight arrow shaft therefore\n//    will sometimes appear as if it has a blurred edge.\n\n//    To mitigate this, these SVG files contain a second \"brush-stroke\" on the\n//    arrow shafts. That is, a second long thin rectangular SVG path has been\n//    written directly on top of each arrow shaft. This reinforcement causes\n//    some of the screen pixels to display as black instead of the anti-aliased\n//    gray pixel that a  single path would generate. So we get arrow shafts\n//    whose edges appear to be sharper.\n\n// In the katexImagesData object just below, the dimensions all\n// correspond to path geometry inside the relevant SVG.\n// For example, \\overrightarrow uses the same arrowhead as glyph U+2192\n// from the KaTeX Main font. The scaling factor is 1000.\n// That is, inside the font, that arrowhead is 522 units tall, which\n// corresponds to 0.522 em inside the document.\n\nvar katexImagesData = {\n    //   path(s), minWidth, height, align\n    overrightarrow: [[\"rightarrow\"], 0.888, 522, \"xMaxYMin\"],\n    overleftarrow: [[\"leftarrow\"], 0.888, 522, \"xMinYMin\"],\n    underrightarrow: [[\"rightarrow\"], 0.888, 522, \"xMaxYMin\"],\n    underleftarrow: [[\"leftarrow\"], 0.888, 522, \"xMinYMin\"],\n    xrightarrow: [[\"rightarrow\"], 1.469, 522, \"xMaxYMin\"],\n    xleftarrow: [[\"leftarrow\"], 1.469, 522, \"xMinYMin\"],\n    Overrightarrow: [[\"doublerightarrow\"], 0.888, 560, \"xMaxYMin\"],\n    xRightarrow: [[\"doublerightarrow\"], 1.526, 560, \"xMaxYMin\"],\n    xLeftarrow: [[\"doubleleftarrow\"], 1.526, 560, \"xMinYMin\"],\n    overleftharpoon: [[\"leftharpoon\"], 0.888, 522, \"xMinYMin\"],\n    xleftharpoonup: [[\"leftharpoon\"], 0.888, 522, \"xMinYMin\"],\n    xleftharpoondown: [[\"leftharpoondown\"], 0.888, 522, \"xMinYMin\"],\n    overrightharpoon: [[\"rightharpoon\"], 0.888, 522, \"xMaxYMin\"],\n    xrightharpoonup: [[\"rightharpoon\"], 0.888, 522, \"xMaxYMin\"],\n    xrightharpoondown: [[\"rightharpoondown\"], 0.888, 522, \"xMaxYMin\"],\n    xlongequal: [[\"longequal\"], 0.888, 334, \"xMinYMin\"],\n    xtwoheadleftarrow: [[\"twoheadleftarrow\"], 0.888, 334, \"xMinYMin\"],\n    xtwoheadrightarrow: [[\"twoheadrightarrow\"], 0.888, 334, \"xMaxYMin\"],\n\n    overleftrightarrow: [[\"leftarrow\", \"rightarrow\"], 0.888, 522],\n    overbrace: [[\"leftbrace\", \"midbrace\", \"rightbrace\"], 1.6, 548],\n    underbrace: [[\"leftbraceunder\", \"midbraceunder\", \"rightbraceunder\"], 1.6, 548],\n    underleftrightarrow: [[\"leftarrow\", \"rightarrow\"], 0.888, 522],\n    xleftrightarrow: [[\"leftarrow\", \"rightarrow\"], 1.75, 522],\n    xLeftrightarrow: [[\"doubleleftarrow\", \"doublerightarrow\"], 1.75, 560],\n    xrightleftharpoons: [[\"leftharpoondownplus\", \"rightharpoonplus\"], 1.75, 716],\n    xleftrightharpoons: [[\"leftharpoonplus\", \"rightharpoondownplus\"], 1.75, 716],\n    xhookleftarrow: [[\"leftarrow\", \"righthook\"], 1.08, 522],\n    xhookrightarrow: [[\"lefthook\", \"rightarrow\"], 1.08, 522],\n    overlinesegment: [[\"leftlinesegment\", \"rightlinesegment\"], 0.888, 522],\n    underlinesegment: [[\"leftlinesegment\", \"rightlinesegment\"], 0.888, 522],\n    overgroup: [[\"leftgroup\", \"rightgroup\"], 0.888, 342],\n    undergroup: [[\"leftgroupunder\", \"rightgroupunder\"], 0.888, 342],\n    xmapsto: [[\"leftmapsto\", \"rightarrow\"], 1.5, 522],\n    xtofrom: [[\"leftToFrom\", \"rightToFrom\"], 1.75, 528],\n\n    // The next three arrows are from the mhchem package.\n    // In mhchem.sty, min-length is 2.0em. But these arrows might appear in the\n    // document as \\xrightarrow or \\xrightleftharpoons. Those have\n    // min-length = 1.75em, so we set min-length on these next three to match.\n    xrightleftarrows: [[\"baraboveleftarrow\", \"rightarrowabovebar\"], 1.75, 901],\n    xrightequilibrium: [[\"baraboveshortleftharpoon\", \"rightharpoonaboveshortbar\"], 1.75, 716],\n    xleftequilibrium: [[\"shortbaraboveleftharpoon\", \"shortrightharpoonabovebar\"], 1.75, 716]\n};\n\nvar groupLength = function groupLength(arg) {\n    if (arg.type === \"ordgroup\") {\n        return arg.body.length;\n    } else {\n        return 1;\n    }\n};\n\nvar stretchy_svgSpan = function svgSpan(group, options) {\n    // Create a span with inline SVG for the element.\n    function buildSvgSpan_() {\n        var viewBoxWidth = 400000; // default\n        var label = group.label.substr(1);\n        if (utils.contains([\"widehat\", \"widecheck\", \"widetilde\", \"utilde\"], label)) {\n            // Each type in the `if` statement corresponds to one of the ParseNode\n            // types below. This narrowing is required to access `grp.base`.\n            var grp = group;\n            // There are four SVG images available for each function.\n            // Choose a taller image when there are more characters.\n            var numChars = groupLength(grp.base);\n            var viewBoxHeight = void 0;\n            var pathName = void 0;\n            var _height = void 0;\n\n            if (numChars > 5) {\n                if (label === \"widehat\" || label === \"widecheck\") {\n                    viewBoxHeight = 420;\n                    viewBoxWidth = 2364;\n                    _height = 0.42;\n                    pathName = label + \"4\";\n                } else {\n                    viewBoxHeight = 312;\n                    viewBoxWidth = 2340;\n                    _height = 0.34;\n                    pathName = \"tilde4\";\n                }\n            } else {\n                var imgIndex = [1, 1, 2, 2, 3, 3][numChars];\n                if (label === \"widehat\" || label === \"widecheck\") {\n                    viewBoxWidth = [0, 1062, 2364, 2364, 2364][imgIndex];\n                    viewBoxHeight = [0, 239, 300, 360, 420][imgIndex];\n                    _height = [0, 0.24, 0.3, 0.3, 0.36, 0.42][imgIndex];\n                    pathName = label + imgIndex;\n                } else {\n                    viewBoxWidth = [0, 600, 1033, 2339, 2340][imgIndex];\n                    viewBoxHeight = [0, 260, 286, 306, 312][imgIndex];\n                    _height = [0, 0.26, 0.286, 0.3, 0.306, 0.34][imgIndex];\n                    pathName = \"tilde\" + imgIndex;\n                }\n            }\n            var path = new domTree_PathNode(pathName);\n            var svgNode = new domTree_SvgNode([path], {\n                \"width\": \"100%\",\n                \"height\": _height + \"em\",\n                \"viewBox\": \"0 0 \" + viewBoxWidth + \" \" + viewBoxHeight,\n                \"preserveAspectRatio\": \"none\"\n            });\n            return {\n                span: buildCommon.makeSvgSpan([], [svgNode], options),\n                minWidth: 0,\n                height: _height\n            };\n        } else {\n            var spans = [];\n\n            var data = katexImagesData[label];\n            var paths = data[0],\n                _minWidth = data[1],\n                _viewBoxHeight = data[2];\n\n            var _height2 = _viewBoxHeight / 1000;\n\n            var numSvgChildren = paths.length;\n            var widthClasses = void 0;\n            var aligns = void 0;\n            if (numSvgChildren === 1) {\n                // $FlowFixMe: All these cases must be of the 4-tuple type.\n                var align1 = data[3];\n                widthClasses = [\"hide-tail\"];\n                aligns = [align1];\n            } else if (numSvgChildren === 2) {\n                widthClasses = [\"halfarrow-left\", \"halfarrow-right\"];\n                aligns = [\"xMinYMin\", \"xMaxYMin\"];\n            } else if (numSvgChildren === 3) {\n                widthClasses = [\"brace-left\", \"brace-center\", \"brace-right\"];\n                aligns = [\"xMinYMin\", \"xMidYMin\", \"xMaxYMin\"];\n            } else {\n                throw new Error(\"Correct katexImagesData or update code here to support\\n                    \" + numSvgChildren + \" children.\");\n            }\n\n            for (var i = 0; i < numSvgChildren; i++) {\n                var _path = new domTree_PathNode(paths[i]);\n\n                var _svgNode = new domTree_SvgNode([_path], {\n                    \"width\": \"400em\",\n                    \"height\": _height2 + \"em\",\n                    \"viewBox\": \"0 0 \" + viewBoxWidth + \" \" + _viewBoxHeight,\n                    \"preserveAspectRatio\": aligns[i] + \" slice\"\n                });\n\n                var _span = buildCommon.makeSvgSpan([widthClasses[i]], [_svgNode], options);\n                if (numSvgChildren === 1) {\n                    return { span: _span, minWidth: _minWidth, height: _height2 };\n                } else {\n                    _span.style.height = _height2 + \"em\";\n                    spans.push(_span);\n                }\n            }\n\n            return {\n                span: buildCommon.makeSpan([\"stretchy\"], spans, options),\n                minWidth: _minWidth,\n                height: _height2\n            };\n        }\n    } // buildSvgSpan_()\n\n    var _buildSvgSpan_ = buildSvgSpan_(),\n        span = _buildSvgSpan_.span,\n        minWidth = _buildSvgSpan_.minWidth,\n        height = _buildSvgSpan_.height;\n\n    // Note that we are returning span.depth = 0.\n    // Any adjustments relative to the baseline must be done in buildHTML.\n\n\n    span.height = height;\n    span.style.height = height + \"em\";\n    if (minWidth > 0) {\n        span.style.minWidth = minWidth + \"em\";\n    }\n\n    return span;\n};\n\nvar stretchy_encloseSpan = function encloseSpan(inner, label, pad, options) {\n    // Return an image span for \\cancel, \\bcancel, \\xcancel, or \\fbox\n    var img = void 0;\n    var totalHeight = inner.height + inner.depth + 2 * pad;\n\n    if (/fbox|color/.test(label)) {\n        img = buildCommon.makeSpan([\"stretchy\", label], [], options);\n\n        if (label === \"fbox\") {\n            var color = options.color && options.getColor();\n            if (color) {\n                img.style.borderColor = color;\n            }\n        }\n    } else {\n        // \\cancel, \\bcancel, or \\xcancel\n        // Since \\cancel's SVG is inline and it omits the viewBox attribute,\n        // its stroke-width will not vary with span area.\n\n        var lines = [];\n        if (/^[bx]cancel$/.test(label)) {\n            lines.push(new domTree_LineNode({\n                \"x1\": \"0\",\n                \"y1\": \"0\",\n                \"x2\": \"100%\",\n                \"y2\": \"100%\",\n                \"stroke-width\": \"0.046em\"\n            }));\n        }\n\n        if (/^x?cancel$/.test(label)) {\n            lines.push(new domTree_LineNode({\n                \"x1\": \"0\",\n                \"y1\": \"100%\",\n                \"x2\": \"100%\",\n                \"y2\": \"0\",\n                \"stroke-width\": \"0.046em\"\n            }));\n        }\n\n        var svgNode = new domTree_SvgNode(lines, {\n            \"width\": \"100%\",\n            \"height\": totalHeight + \"em\"\n        });\n\n        img = buildCommon.makeSvgSpan([], [svgNode], options);\n    }\n\n    img.height = totalHeight;\n    img.style.height = totalHeight + \"em\";\n\n    return img;\n};\n\n/* harmony default export */ var stretchy = ({\n    encloseSpan: stretchy_encloseSpan,\n    mathMLnode: stretchy_mathMLnode,\n    svgSpan: stretchy_svgSpan\n});\n// CONCATENATED MODULE: ./src/functions/accent.js\n\n\n\n\n\n\n\n\n\n\n\n// NOTE: Unlike most `htmlBuilder`s, this one handles not only \"accent\", but\n// also \"supsub\" since an accent can affect super/subscripting.\nvar accent_htmlBuilder = function htmlBuilder(grp, options) {\n    // Accents are handled in the TeXbook pg. 443, rule 12.\n    var base = void 0;\n    var group = void 0;\n\n    var supSub = checkNodeType(grp, \"supsub\");\n    var supSubGroup = void 0;\n    if (supSub) {\n        // If our base is a character box, and we have superscripts and\n        // subscripts, the supsub will defer to us. In particular, we want\n        // to attach the superscripts and subscripts to the inner body (so\n        // that the position of the superscripts and subscripts won't be\n        // affected by the height of the accent). We accomplish this by\n        // sticking the base of the accent into the base of the supsub, and\n        // rendering that, while keeping track of where the accent is.\n\n        // The real accent group is the base of the supsub group\n        group = assertNodeType(supSub.base, \"accent\");\n        // The character box is the base of the accent group\n        base = group.base;\n        // Stick the character box into the base of the supsub group\n        supSub.base = base;\n\n        // Rerender the supsub group with its new base, and store that\n        // result.\n        supSubGroup = assertSpan(buildHTML_buildGroup(supSub, options));\n\n        // reset original base\n        supSub.base = group;\n    } else {\n        group = assertNodeType(grp, \"accent\");\n        base = group.base;\n    }\n\n    // Build the base group\n    var body = buildHTML_buildGroup(base, options.havingCrampedStyle());\n\n    // Does the accent need to shift for the skew of a character?\n    var mustShift = group.isShifty && utils.isCharacterBox(base);\n\n    // Calculate the skew of the accent. This is based on the line \"If the\n    // nucleus is not a single character, let s = 0; otherwise set s to the\n    // kern amount for the nucleus followed by the \\skewchar of its font.\"\n    // Note that our skew metrics are just the kern between each character\n    // and the skewchar.\n    var skew = 0;\n    if (mustShift) {\n        // If the base is a character box, then we want the skew of the\n        // innermost character. To do that, we find the innermost character:\n        var baseChar = utils.getBaseElem(base);\n        // Then, we render its group to get the symbol inside it\n        var baseGroup = buildHTML_buildGroup(baseChar, options.havingCrampedStyle());\n        // Finally, we pull the skew off of the symbol.\n        skew = assertSymbolDomNode(baseGroup).skew;\n        // Note that we now throw away baseGroup, because the layers we\n        // removed with getBaseElem might contain things like \\color which\n        // we can't get rid of.\n        // TODO(emily): Find a better way to get the skew\n    }\n\n    // calculate the amount of space between the body and the accent\n    var clearance = Math.min(body.height, options.fontMetrics().xHeight);\n\n    // Build the accent\n    var accentBody = void 0;\n    if (!group.isStretchy) {\n        var accent = void 0;\n        var width = void 0;\n        if (group.label === \"\\\\vec\") {\n            // Before version 0.9, \\vec used the combining font glyph U+20D7.\n            // But browsers, especially Safari, are not consistent in how they\n            // render combining characters when not preceded by a character.\n            // So now we use an SVG.\n            // If Safari reforms, we should consider reverting to the glyph.\n            accent = buildCommon.staticSvg(\"vec\", options);\n            width = buildCommon.svgData.vec[1];\n        } else {\n            accent = buildCommon.makeSymbol(group.label, \"Main-Regular\", group.mode, options);\n            // Remove the italic correction of the accent, because it only serves to\n            // shift the accent over to a place we don't want.\n            accent.italic = 0;\n            width = accent.width;\n        }\n\n        accentBody = buildCommon.makeSpan([\"accent-body\"], [accent]);\n\n        // \"Full\" accents expand the width of the resulting symbol to be\n        // at least the width of the accent, and overlap directly onto the\n        // character without any vertical offset.\n        var accentFull = group.label === \"\\\\textcircled\";\n        if (accentFull) {\n            accentBody.classes.push('accent-full');\n            clearance = body.height;\n        }\n\n        // Shift the accent over by the skew.\n        var left = skew;\n\n        // CSS defines `.katex .accent .accent-body:not(.accent-full) { width: 0 }`\n        // so that the accent doesn't contribute to the bounding box.\n        // We need to shift the character by its width (effectively half\n        // its width) to compensate.\n        if (!accentFull) {\n            left -= width / 2;\n        }\n\n        accentBody.style.left = left + \"em\";\n\n        // \\textcircled uses the \\bigcirc glyph, so it needs some\n        // vertical adjustment to match LaTeX.\n        if (group.label === \"\\\\textcircled\") {\n            accentBody.style.top = \".2em\";\n        }\n\n        accentBody = buildCommon.makeVList({\n            positionType: \"firstBaseline\",\n            children: [{ type: \"elem\", elem: body }, { type: \"kern\", size: -clearance }, { type: \"elem\", elem: accentBody }]\n        }, options);\n    } else {\n        accentBody = stretchy.svgSpan(group, options);\n\n        accentBody = buildCommon.makeVList({\n            positionType: \"firstBaseline\",\n            children: [{ type: \"elem\", elem: body }, {\n                type: \"elem\",\n                elem: accentBody,\n                wrapperClasses: [\"svg-align\"],\n                wrapperStyle: skew > 0 ? {\n                    width: \"calc(100% - \" + 2 * skew + \"em)\",\n                    marginLeft: 2 * skew + \"em\"\n                } : undefined\n            }]\n        }, options);\n    }\n\n    var accentWrap = buildCommon.makeSpan([\"mord\", \"accent\"], [accentBody], options);\n\n    if (supSubGroup) {\n        // Here, we replace the \"base\" child of the supsub with our newly\n        // generated accent.\n        supSubGroup.children[0] = accentWrap;\n\n        // Since we don't rerun the height calculation after replacing the\n        // accent, we manually recalculate height.\n        supSubGroup.height = Math.max(accentWrap.height, supSubGroup.height);\n\n        // Accents should always be ords, even when their innards are not.\n        supSubGroup.classes[0] = \"mord\";\n\n        return supSubGroup;\n    } else {\n        return accentWrap;\n    }\n};\n\nvar accent_mathmlBuilder = function mathmlBuilder(group, options) {\n    var accentNode = group.isStretchy ? stretchy.mathMLnode(group.label) : new mathMLTree.MathNode(\"mo\", [buildMathML_makeText(group.label, group.mode)]);\n\n    var node = new mathMLTree.MathNode(\"mover\", [buildMathML_buildGroup(group.base, options), accentNode]);\n\n    node.setAttribute(\"accent\", \"true\");\n\n    return node;\n};\n\nvar NON_STRETCHY_ACCENT_REGEX = new RegExp([\"\\\\acute\", \"\\\\grave\", \"\\\\ddot\", \"\\\\tilde\", \"\\\\bar\", \"\\\\breve\", \"\\\\check\", \"\\\\hat\", \"\\\\vec\", \"\\\\dot\", \"\\\\mathring\"].map(function (accent) {\n    return \"\\\\\" + accent;\n}).join(\"|\"));\n\n// Accents\ndefineFunction({\n    type: \"accent\",\n    names: [\"\\\\acute\", \"\\\\grave\", \"\\\\ddot\", \"\\\\tilde\", \"\\\\bar\", \"\\\\breve\", \"\\\\check\", \"\\\\hat\", \"\\\\vec\", \"\\\\dot\", \"\\\\mathring\", \"\\\\widecheck\", \"\\\\widehat\", \"\\\\widetilde\", \"\\\\overrightarrow\", \"\\\\overleftarrow\", \"\\\\Overrightarrow\", \"\\\\overleftrightarrow\", \"\\\\overgroup\", \"\\\\overlinesegment\", \"\\\\overleftharpoon\", \"\\\\overrightharpoon\"],\n    props: {\n        numArgs: 1\n    },\n    handler: function handler(context, args) {\n        var base = args[0];\n\n        var isStretchy = !NON_STRETCHY_ACCENT_REGEX.test(context.funcName);\n        var isShifty = !isStretchy || context.funcName === \"\\\\widehat\" || context.funcName === \"\\\\widetilde\" || context.funcName === \"\\\\widecheck\";\n\n        return {\n            type: \"accent\",\n            mode: context.parser.mode,\n            label: context.funcName,\n            isStretchy: isStretchy,\n            isShifty: isShifty,\n            base: base\n        };\n    },\n    htmlBuilder: accent_htmlBuilder,\n    mathmlBuilder: accent_mathmlBuilder\n});\n\n// Text-mode accents\ndefineFunction({\n    type: \"accent\",\n    names: [\"\\\\'\", \"\\\\`\", \"\\\\^\", \"\\\\~\", \"\\\\=\", \"\\\\u\", \"\\\\.\", '\\\\\"', \"\\\\r\", \"\\\\H\", \"\\\\v\", \"\\\\textcircled\"],\n    props: {\n        numArgs: 1,\n        allowedInText: true,\n        allowedInMath: false\n    },\n    handler: function handler(context, args) {\n        var base = args[0];\n\n        return {\n            type: \"accent\",\n            mode: context.parser.mode,\n            label: context.funcName,\n            isStretchy: false,\n            isShifty: true,\n            base: base\n        };\n    },\n    htmlBuilder: accent_htmlBuilder,\n    mathmlBuilder: accent_mathmlBuilder\n});\n// CONCATENATED MODULE: ./src/functions/accentunder.js\n\n// Horizontal overlap functions\n\n\n\n\n\n\n\n\ndefineFunction({\n    type: \"accentUnder\",\n    names: [\"\\\\underleftarrow\", \"\\\\underrightarrow\", \"\\\\underleftrightarrow\", \"\\\\undergroup\", \"\\\\underlinesegment\", \"\\\\utilde\"],\n    props: {\n        numArgs: 1\n    },\n    handler: function handler(_ref, args) {\n        var parser = _ref.parser,\n            funcName = _ref.funcName;\n\n        var base = args[0];\n        return {\n            type: \"accentUnder\",\n            mode: parser.mode,\n            label: funcName,\n            base: base\n        };\n    },\n    htmlBuilder: function htmlBuilder(group, options) {\n        // Treat under accents much like underlines.\n        var innerGroup = buildHTML_buildGroup(group.base, options);\n\n        var accentBody = stretchy.svgSpan(group, options);\n        var kern = group.label === \"\\\\utilde\" ? 0.12 : 0;\n\n        // Generate the vlist, with the appropriate kerns\n        var vlist = buildCommon.makeVList({\n            positionType: \"bottom\",\n            positionData: accentBody.height + kern,\n            children: [{ type: \"elem\", elem: accentBody, wrapperClasses: [\"svg-align\"] }, { type: \"kern\", size: kern }, { type: \"elem\", elem: innerGroup }]\n        }, options);\n\n        return buildCommon.makeSpan([\"mord\", \"accentunder\"], [vlist], options);\n    },\n    mathmlBuilder: function mathmlBuilder(group, options) {\n        var accentNode = stretchy.mathMLnode(group.label);\n        var node = new mathMLTree.MathNode(\"munder\", [buildMathML_buildGroup(group.base, options), accentNode]);\n        node.setAttribute(\"accentunder\", \"true\");\n        return node;\n    }\n});\n// CONCATENATED MODULE: ./src/functions/arrow.js\n\n\n\n\n\n\n\n\n// Stretchy arrows with an optional argument\ndefineFunction({\n    type: \"xArrow\",\n    names: [\"\\\\xleftarrow\", \"\\\\xrightarrow\", \"\\\\xLeftarrow\", \"\\\\xRightarrow\", \"\\\\xleftrightarrow\", \"\\\\xLeftrightarrow\", \"\\\\xhookleftarrow\", \"\\\\xhookrightarrow\", \"\\\\xmapsto\", \"\\\\xrightharpoondown\", \"\\\\xrightharpoonup\", \"\\\\xleftharpoondown\", \"\\\\xleftharpoonup\", \"\\\\xrightleftharpoons\", \"\\\\xleftrightharpoons\", \"\\\\xlongequal\", \"\\\\xtwoheadrightarrow\", \"\\\\xtwoheadleftarrow\", \"\\\\xtofrom\",\n    // The next 3 functions are here to support the mhchem extension.\n    // Direct use of these functions is discouraged and may break someday.\n    \"\\\\xrightleftarrows\", \"\\\\xrightequilibrium\", \"\\\\xleftequilibrium\"],\n    props: {\n        numArgs: 1,\n        numOptionalArgs: 1\n    },\n    handler: function handler(_ref, args, optArgs) {\n        var parser = _ref.parser,\n            funcName = _ref.funcName;\n\n        return {\n            type: \"xArrow\",\n            mode: parser.mode,\n            label: funcName,\n            body: args[0],\n            below: optArgs[0]\n        };\n    },\n\n    // Flow is unable to correctly infer the type of `group`, even though it's\n    // unamibiguously determined from the passed-in `type` above.\n    htmlBuilder: function htmlBuilder(group, options) {\n        var style = options.style;\n\n        // Build the argument groups in the appropriate style.\n        // Ref: amsmath.dtx:   \\hbox{$\\scriptstyle\\mkern#3mu{#6}\\mkern#4mu$}%\n\n        var newOptions = options.havingStyle(style.sup());\n        var upperGroup = buildHTML_buildGroup(group.body, newOptions, options);\n        upperGroup.classes.push(\"x-arrow-pad\");\n\n        var lowerGroup = void 0;\n        if (group.below) {\n            // Build the lower group\n            newOptions = options.havingStyle(style.sub());\n            lowerGroup = buildHTML_buildGroup(group.below, newOptions, options);\n            lowerGroup.classes.push(\"x-arrow-pad\");\n        }\n\n        var arrowBody = stretchy.svgSpan(group, options);\n\n        // Re shift: Note that stretchy.svgSpan returned arrowBody.depth = 0.\n        // The point we want on the math axis is at 0.5 * arrowBody.height.\n        var arrowShift = -options.fontMetrics().axisHeight + 0.5 * arrowBody.height;\n        // 2 mu kern. Ref: amsmath.dtx: #7\\if0#2\\else\\mkern#2mu\\fi\n        var upperShift = -options.fontMetrics().axisHeight - 0.5 * arrowBody.height - 0.111; // 0.111 em = 2 mu\n        if (upperGroup.depth > 0.25 || group.label === \"\\\\xleftequilibrium\") {\n            upperShift -= upperGroup.depth; // shift up if depth encroaches\n        }\n\n        // Generate the vlist\n        var vlist = void 0;\n        if (lowerGroup) {\n            var lowerShift = -options.fontMetrics().axisHeight + lowerGroup.height + 0.5 * arrowBody.height + 0.111;\n            vlist = buildCommon.makeVList({\n                positionType: \"individualShift\",\n                children: [{ type: \"elem\", elem: upperGroup, shift: upperShift }, { type: \"elem\", elem: arrowBody, shift: arrowShift }, { type: \"elem\", elem: lowerGroup, shift: lowerShift }]\n            }, options);\n        } else {\n            vlist = buildCommon.makeVList({\n                positionType: \"individualShift\",\n                children: [{ type: \"elem\", elem: upperGroup, shift: upperShift }, { type: \"elem\", elem: arrowBody, shift: arrowShift }]\n            }, options);\n        }\n\n        // $FlowFixMe: Replace this with passing \"svg-align\" into makeVList.\n        vlist.children[0].children[0].children[1].classes.push(\"svg-align\");\n\n        return buildCommon.makeSpan([\"mrel\", \"x-arrow\"], [vlist], options);\n    },\n    mathmlBuilder: function mathmlBuilder(group, options) {\n        var arrowNode = stretchy.mathMLnode(group.label);\n        var node = void 0;\n        var lowerNode = void 0;\n\n        if (group.body) {\n            var upperNode = buildMathML_buildGroup(group.body, options);\n            if (group.below) {\n                lowerNode = buildMathML_buildGroup(group.below, options);\n                node = new mathMLTree.MathNode(\"munderover\", [arrowNode, lowerNode, upperNode]);\n            } else {\n                node = new mathMLTree.MathNode(\"mover\", [arrowNode, upperNode]);\n            }\n        } else if (group.below) {\n            lowerNode = buildMathML_buildGroup(group.below, options);\n            node = new mathMLTree.MathNode(\"munder\", [arrowNode, lowerNode]);\n        } else {\n            node = new mathMLTree.MathNode(\"mover\", [arrowNode]);\n        }\n        return node;\n    }\n});\n// CONCATENATED MODULE: ./src/functions/char.js\n\n\n\n\n// \\@char is an internal function that takes a grouped decimal argument like\n// {123} and converts into symbol with code 123.  It is used by the *macro*\n// \\char defined in macros.js.\ndefineFunction({\n    type: \"textord\",\n    names: [\"\\\\@char\"],\n    props: {\n        numArgs: 1,\n        allowedInText: true\n    },\n    handler: function handler(_ref, args) {\n        var parser = _ref.parser;\n\n        var arg = assertNodeType(args[0], \"ordgroup\");\n        var group = arg.body;\n        var number = \"\";\n        for (var i = 0; i < group.length; i++) {\n            var node = assertNodeType(group[i], \"textord\");\n            number += node.text;\n        }\n        var code = parseInt(number);\n        if (isNaN(code)) {\n            throw new src_ParseError(\"\\\\@char has non-numeric argument \" + number);\n        }\n        return {\n            type: \"textord\",\n            mode: parser.mode,\n            text: String.fromCharCode(code)\n        };\n    }\n});\n// CONCATENATED MODULE: ./src/functions/color.js\n\n\n\n\n\n\n\n\nvar color_htmlBuilder = function htmlBuilder(group, options) {\n    var elements = buildHTML_buildExpression(group.body, options.withColor(group.color), false);\n\n    // \\color isn't supposed to affect the type of the elements it contains.\n    // To accomplish this, we wrap the results in a fragment, so the inner\n    // elements will be able to directly interact with their neighbors. For\n    // example, `\\color{red}{2 +} 3` has the same spacing as `2 + 3`\n    return buildCommon.makeFragment(elements);\n};\n\nvar color_mathmlBuilder = function mathmlBuilder(group, options) {\n    var inner = buildMathML_buildExpression(group.body, options);\n\n    var node = new mathMLTree.MathNode(\"mstyle\", inner);\n\n    node.setAttribute(\"mathcolor\", group.color);\n\n    return node;\n};\n\ndefineFunction({\n    type: \"color\",\n    names: [\"\\\\textcolor\"],\n    props: {\n        numArgs: 2,\n        allowedInText: true,\n        greediness: 3,\n        argTypes: [\"color\", \"original\"]\n    },\n    handler: function handler(_ref, args) {\n        var parser = _ref.parser;\n\n        var color = assertNodeType(args[0], \"color-token\").color;\n        var body = args[1];\n        return {\n            type: \"color\",\n            mode: parser.mode,\n            color: color,\n            body: defineFunction_ordargument(body)\n        };\n    },\n\n    htmlBuilder: color_htmlBuilder,\n    mathmlBuilder: color_mathmlBuilder\n});\n\n// TODO(kevinb): define these using macros\ndefineFunction({\n    type: \"color\",\n    names: [\"\\\\blue\", \"\\\\orange\", \"\\\\pink\", \"\\\\red\", \"\\\\green\", \"\\\\gray\", \"\\\\purple\", \"\\\\blueA\", \"\\\\blueB\", \"\\\\blueC\", \"\\\\blueD\", \"\\\\blueE\", \"\\\\tealA\", \"\\\\tealB\", \"\\\\tealC\", \"\\\\tealD\", \"\\\\tealE\", \"\\\\greenA\", \"\\\\greenB\", \"\\\\greenC\", \"\\\\greenD\", \"\\\\greenE\", \"\\\\goldA\", \"\\\\goldB\", \"\\\\goldC\", \"\\\\goldD\", \"\\\\goldE\", \"\\\\redA\", \"\\\\redB\", \"\\\\redC\", \"\\\\redD\", \"\\\\redE\", \"\\\\maroonA\", \"\\\\maroonB\", \"\\\\maroonC\", \"\\\\maroonD\", \"\\\\maroonE\", \"\\\\purpleA\", \"\\\\purpleB\", \"\\\\purpleC\", \"\\\\purpleD\", \"\\\\purpleE\", \"\\\\mintA\", \"\\\\mintB\", \"\\\\mintC\", \"\\\\grayA\", \"\\\\grayB\", \"\\\\grayC\", \"\\\\grayD\", \"\\\\grayE\", \"\\\\grayF\", \"\\\\grayG\", \"\\\\grayH\", \"\\\\grayI\", \"\\\\kaBlue\", \"\\\\kaGreen\"],\n    props: {\n        numArgs: 1,\n        allowedInText: true,\n        greediness: 3\n    },\n    handler: function handler(_ref2, args) {\n        var parser = _ref2.parser,\n            funcName = _ref2.funcName;\n\n        var body = args[0];\n        return {\n            type: \"color\",\n            mode: parser.mode,\n            color: \"katex-\" + funcName.slice(1),\n            body: defineFunction_ordargument(body)\n        };\n    },\n\n    htmlBuilder: color_htmlBuilder,\n    mathmlBuilder: color_mathmlBuilder\n});\n\ndefineFunction({\n    type: \"color\",\n    names: [\"\\\\color\"],\n    props: {\n        numArgs: 1,\n        allowedInText: true,\n        greediness: 3,\n        argTypes: [\"color\"]\n    },\n    handler: function handler(_ref3, args) {\n        var parser = _ref3.parser,\n            breakOnTokenText = _ref3.breakOnTokenText;\n\n        var color = assertNodeType(args[0], \"color-token\").color;\n\n        // If we see a styling function, parse out the implicit body\n        var body = parser.parseExpression(true, breakOnTokenText);\n\n        return {\n            type: \"color\",\n            mode: parser.mode,\n            color: color,\n            body: body\n        };\n    },\n\n    htmlBuilder: color_htmlBuilder,\n    mathmlBuilder: color_mathmlBuilder\n});\n// CONCATENATED MODULE: ./src/functions/cr.js\n\n// Row breaks within tabular environments, and line breaks at top level\n\n\n\n\n\n\n\n\n// \\\\ is a macro mapping to either \\cr or \\newline.  Because they have the\n// same signature, we implement them as one megafunction, with newRow\n// indicating whether we're in the \\cr case, and newLine indicating whether\n// to break the line in the \\newline case.\n\ndefineFunction({\n    type: \"cr\",\n    names: [\"\\\\cr\", \"\\\\newline\"],\n    props: {\n        numArgs: 0,\n        numOptionalArgs: 1,\n        argTypes: [\"size\"],\n        allowedInText: true\n    },\n\n    handler: function handler(_ref, args, optArgs) {\n        var parser = _ref.parser,\n            funcName = _ref.funcName;\n\n        var size = optArgs[0];\n        var newRow = funcName === \"\\\\cr\";\n        var newLine = false;\n        if (!newRow) {\n            if (parser.settings.displayMode && parser.settings.useStrictBehavior(\"newLineInDisplayMode\", \"In LaTeX, \\\\\\\\ or \\\\newline \" + \"does nothing in display mode\")) {\n                newLine = false;\n            } else {\n                newLine = true;\n            }\n        }\n        return {\n            type: \"cr\",\n            mode: parser.mode,\n            newLine: newLine,\n            newRow: newRow,\n            size: size && assertNodeType(size, \"size\").value\n        };\n    },\n\n\n    // The following builders are called only at the top level,\n    // not within tabular/array environments.\n\n    htmlBuilder: function htmlBuilder(group, options) {\n        if (group.newRow) {\n            throw new src_ParseError(\"\\\\cr valid only within a tabular/array environment\");\n        }\n        var span = buildCommon.makeSpan([\"mspace\"], [], options);\n        if (group.newLine) {\n            span.classes.push(\"newline\");\n            if (group.size) {\n                span.style.marginTop = units_calculateSize(group.size, options) + \"em\";\n            }\n        }\n        return span;\n    },\n    mathmlBuilder: function mathmlBuilder(group, options) {\n        var node = new mathMLTree.MathNode(\"mspace\");\n        if (group.newLine) {\n            node.setAttribute(\"linebreak\", \"newline\");\n            if (group.size) {\n                node.setAttribute(\"height\", units_calculateSize(group.size, options) + \"em\");\n            }\n        }\n        return node;\n    }\n});\n// CONCATENATED MODULE: ./src/delimiter.js\n\n/**\n * This file deals with creating delimiters of various sizes. The TeXbook\n * discusses these routines on page 441-442, in the \"Another subroutine sets box\n * x to a specified variable delimiter\" paragraph.\n *\n * There are three main routines here. `makeSmallDelim` makes a delimiter in the\n * normal font, but in either text, script, or scriptscript style.\n * `makeLargeDelim` makes a delimiter in textstyle, but in one of the Size1,\n * Size2, Size3, or Size4 fonts. `makeStackedDelim` makes a delimiter out of\n * smaller pieces that are stacked on top of one another.\n *\n * The functions take a parameter `center`, which determines if the delimiter\n * should be centered around the axis.\n *\n * Then, there are three exposed functions. `sizedDelim` makes a delimiter in\n * one of the given sizes. This is used for things like `\\bigl`.\n * `customSizedDelim` makes a delimiter with a given total height+depth. It is\n * called in places like `\\sqrt`. `leftRightDelim` makes an appropriate\n * delimiter which surrounds an expression of a given height an depth. It is\n * used in `\\left` and `\\right`.\n */\n\n\n\n\n\n\n\n\n\n\n/**\n * Get the metrics for a given symbol and font, after transformation (i.e.\n * after following replacement from symbols.js)\n */\nvar delimiter_getMetrics = function getMetrics(symbol, font, mode) {\n    var replace = src_symbols.math[symbol] && src_symbols.math[symbol].replace;\n    var metrics = getCharacterMetrics(replace || symbol, font, mode);\n    if (!metrics) {\n        throw new Error(\"Unsupported symbol \" + symbol + \" and font size \" + font + \".\");\n    }\n    return metrics;\n};\n\n/**\n * Puts a delimiter span in a given style, and adds appropriate height, depth,\n * and maxFontSizes.\n */\nvar delimiter_styleWrap = function styleWrap(delim, toStyle, options, classes) {\n    var newOptions = options.havingBaseStyle(toStyle);\n\n    var span = buildCommon.makeSpan(classes.concat(newOptions.sizingClasses(options)), [delim], options);\n\n    var delimSizeMultiplier = newOptions.sizeMultiplier / options.sizeMultiplier;\n    span.height *= delimSizeMultiplier;\n    span.depth *= delimSizeMultiplier;\n    span.maxFontSize = newOptions.sizeMultiplier;\n\n    return span;\n};\n\nvar centerSpan = function centerSpan(span, options, style) {\n    var newOptions = options.havingBaseStyle(style);\n    var shift = (1 - options.sizeMultiplier / newOptions.sizeMultiplier) * options.fontMetrics().axisHeight;\n\n    span.classes.push(\"delimcenter\");\n    span.style.top = shift + \"em\";\n    span.height -= shift;\n    span.depth += shift;\n};\n\n/**\n * Makes a small delimiter. This is a delimiter that comes in the Main-Regular\n * font, but is restyled to either be in textstyle, scriptstyle, or\n * scriptscriptstyle.\n */\nvar delimiter_makeSmallDelim = function makeSmallDelim(delim, style, center, options, mode, classes) {\n    var text = buildCommon.makeSymbol(delim, \"Main-Regular\", mode, options);\n    var span = delimiter_styleWrap(text, style, options, classes);\n    if (center) {\n        centerSpan(span, options, style);\n    }\n    return span;\n};\n\n/**\n * Builds a symbol in the given font size (note size is an integer)\n */\nvar delimiter_mathrmSize = function mathrmSize(value, size, mode, options) {\n    return buildCommon.makeSymbol(value, \"Size\" + size + \"-Regular\", mode, options);\n};\n\n/**\n * Makes a large delimiter. This is a delimiter that comes in the Size1, Size2,\n * Size3, or Size4 fonts. It is always rendered in textstyle.\n */\nvar delimiter_makeLargeDelim = function makeLargeDelim(delim, size, center, options, mode, classes) {\n    var inner = delimiter_mathrmSize(delim, size, mode, options);\n    var span = delimiter_styleWrap(buildCommon.makeSpan([\"delimsizing\", \"size\" + size], [inner], options), src_Style.TEXT, options, classes);\n    if (center) {\n        centerSpan(span, options, src_Style.TEXT);\n    }\n    return span;\n};\n\n/**\n * Make an inner span with the given offset and in the given font. This is used\n * in `makeStackedDelim` to make the stacking pieces for the delimiter.\n */\nvar delimiter_makeInner = function makeInner(symbol, font, mode) {\n    var sizeClass = void 0;\n    // Apply the correct CSS class to choose the right font.\n    if (font === \"Size1-Regular\") {\n        sizeClass = \"delim-size1\";\n    } else /* if (font === \"Size4-Regular\") */{\n            sizeClass = \"delim-size4\";\n        }\n\n    var inner = buildCommon.makeSpan([\"delimsizinginner\", sizeClass], [buildCommon.makeSpan([], [buildCommon.makeSymbol(symbol, font, mode)])]);\n\n    // Since this will be passed into `makeVList` in the end, wrap the element\n    // in the appropriate tag that VList uses.\n    return { type: \"elem\", elem: inner };\n};\n\n/**\n * Make a stacked delimiter out of a given delimiter, with the total height at\n * least `heightTotal`. This routine is mentioned on page 442 of the TeXbook.\n */\nvar delimiter_makeStackedDelim = function makeStackedDelim(delim, heightTotal, center, options, mode, classes) {\n    // There are four parts, the top, an optional middle, a repeated part, and a\n    // bottom.\n    var top = void 0;\n    var middle = void 0;\n    var repeat = void 0;\n    var bottom = void 0;\n    top = repeat = bottom = delim;\n    middle = null;\n    // Also keep track of what font the delimiters are in\n    var font = \"Size1-Regular\";\n\n    // We set the parts and font based on the symbol. Note that we use\n    // '\\u23d0' instead of '|' and '\\u2016' instead of '\\\\|' for the\n    // repeats of the arrows\n    if (delim === \"\\\\uparrow\") {\n        repeat = bottom = \"\\u23D0\";\n    } else if (delim === \"\\\\Uparrow\") {\n        repeat = bottom = \"\\u2016\";\n    } else if (delim === \"\\\\downarrow\") {\n        top = repeat = \"\\u23D0\";\n    } else if (delim === \"\\\\Downarrow\") {\n        top = repeat = \"\\u2016\";\n    } else if (delim === \"\\\\updownarrow\") {\n        top = \"\\\\uparrow\";\n        repeat = \"\\u23D0\";\n        bottom = \"\\\\downarrow\";\n    } else if (delim === \"\\\\Updownarrow\") {\n        top = \"\\\\Uparrow\";\n        repeat = \"\\u2016\";\n        bottom = \"\\\\Downarrow\";\n    } else if (delim === \"[\" || delim === \"\\\\lbrack\") {\n        top = \"\\u23A1\";\n        repeat = \"\\u23A2\";\n        bottom = \"\\u23A3\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"]\" || delim === \"\\\\rbrack\") {\n        top = \"\\u23A4\";\n        repeat = \"\\u23A5\";\n        bottom = \"\\u23A6\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"\\\\lfloor\" || delim === \"\\u230A\") {\n        repeat = top = \"\\u23A2\";\n        bottom = \"\\u23A3\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"\\\\lceil\" || delim === \"\\u2308\") {\n        top = \"\\u23A1\";\n        repeat = bottom = \"\\u23A2\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"\\\\rfloor\" || delim === \"\\u230B\") {\n        repeat = top = \"\\u23A5\";\n        bottom = \"\\u23A6\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"\\\\rceil\" || delim === \"\\u2309\") {\n        top = \"\\u23A4\";\n        repeat = bottom = \"\\u23A5\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"(\") {\n        top = \"\\u239B\";\n        repeat = \"\\u239C\";\n        bottom = \"\\u239D\";\n        font = \"Size4-Regular\";\n    } else if (delim === \")\") {\n        top = \"\\u239E\";\n        repeat = \"\\u239F\";\n        bottom = \"\\u23A0\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"\\\\{\" || delim === \"\\\\lbrace\") {\n        top = \"\\u23A7\";\n        middle = \"\\u23A8\";\n        bottom = \"\\u23A9\";\n        repeat = \"\\u23AA\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"\\\\}\" || delim === \"\\\\rbrace\") {\n        top = \"\\u23AB\";\n        middle = \"\\u23AC\";\n        bottom = \"\\u23AD\";\n        repeat = \"\\u23AA\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"\\\\lgroup\" || delim === \"\\u27EE\") {\n        top = \"\\u23A7\";\n        bottom = \"\\u23A9\";\n        repeat = \"\\u23AA\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"\\\\rgroup\" || delim === \"\\u27EF\") {\n        top = \"\\u23AB\";\n        bottom = \"\\u23AD\";\n        repeat = \"\\u23AA\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"\\\\lmoustache\" || delim === \"\\u23B0\") {\n        top = \"\\u23A7\";\n        bottom = \"\\u23AD\";\n        repeat = \"\\u23AA\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"\\\\rmoustache\" || delim === \"\\u23B1\") {\n        top = \"\\u23AB\";\n        bottom = \"\\u23A9\";\n        repeat = \"\\u23AA\";\n        font = \"Size4-Regular\";\n    }\n\n    // Get the metrics of the four sections\n    var topMetrics = delimiter_getMetrics(top, font, mode);\n    var topHeightTotal = topMetrics.height + topMetrics.depth;\n    var repeatMetrics = delimiter_getMetrics(repeat, font, mode);\n    var repeatHeightTotal = repeatMetrics.height + repeatMetrics.depth;\n    var bottomMetrics = delimiter_getMetrics(bottom, font, mode);\n    var bottomHeightTotal = bottomMetrics.height + bottomMetrics.depth;\n    var middleHeightTotal = 0;\n    var middleFactor = 1;\n    if (middle !== null) {\n        var middleMetrics = delimiter_getMetrics(middle, font, mode);\n        middleHeightTotal = middleMetrics.height + middleMetrics.depth;\n        middleFactor = 2; // repeat symmetrically above and below middle\n    }\n\n    // Calcuate the minimal height that the delimiter can have.\n    // It is at least the size of the top, bottom, and optional middle combined.\n    var minHeight = topHeightTotal + bottomHeightTotal + middleHeightTotal;\n\n    // Compute the number of copies of the repeat symbol we will need\n    var repeatCount = Math.ceil((heightTotal - minHeight) / (middleFactor * repeatHeightTotal));\n\n    // Compute the total height of the delimiter including all the symbols\n    var realHeightTotal = minHeight + repeatCount * middleFactor * repeatHeightTotal;\n\n    // The center of the delimiter is placed at the center of the axis. Note\n    // that in this context, \"center\" means that the delimiter should be\n    // centered around the axis in the current style, while normally it is\n    // centered around the axis in textstyle.\n    var axisHeight = options.fontMetrics().axisHeight;\n    if (center) {\n        axisHeight *= options.sizeMultiplier;\n    }\n    // Calculate the depth\n    var depth = realHeightTotal / 2 - axisHeight;\n\n    // Now, we start building the pieces that will go into the vlist\n\n    // Keep a list of the inner pieces\n    var inners = [];\n\n    // Add the bottom symbol\n    inners.push(delimiter_makeInner(bottom, font, mode));\n\n    if (middle === null) {\n        // Add that many symbols\n        for (var i = 0; i < repeatCount; i++) {\n            inners.push(delimiter_makeInner(repeat, font, mode));\n        }\n    } else {\n        // When there is a middle bit, we need the middle part and two repeated\n        // sections\n        for (var _i = 0; _i < repeatCount; _i++) {\n            inners.push(delimiter_makeInner(repeat, font, mode));\n        }\n        inners.push(delimiter_makeInner(middle, font, mode));\n        for (var _i2 = 0; _i2 < repeatCount; _i2++) {\n            inners.push(delimiter_makeInner(repeat, font, mode));\n        }\n    }\n\n    // Add the top symbol\n    inners.push(delimiter_makeInner(top, font, mode));\n\n    // Finally, build the vlist\n    var newOptions = options.havingBaseStyle(src_Style.TEXT);\n    var inner = buildCommon.makeVList({\n        positionType: \"bottom\",\n        positionData: depth,\n        children: inners\n    }, newOptions);\n\n    return delimiter_styleWrap(buildCommon.makeSpan([\"delimsizing\", \"mult\"], [inner], newOptions), src_Style.TEXT, options, classes);\n};\n\n// All surds have 0.08em padding above the viniculum inside the SVG.\n// That keeps browser span height rounding error from pinching the line.\nvar vbPad = 80; // padding above the surd, measured inside the viewBox.\nvar emPad = 0.08; // padding, in ems, measured in the document.\n\nvar delimiter_sqrtSvg = function sqrtSvg(sqrtName, height, viewBoxHeight, options) {\n    var alternate = void 0;\n    if (sqrtName === \"sqrtTall\") {\n        // sqrtTall is from glyph U23B7 in the font KaTeX_Size4-Regular\n        // One path edge has a variable length. It runs from the viniculumn\n        // to a point near (14 units) the bottom of the surd. The viniculum\n        // is 40 units thick. So the length of the line in question is:\n        var vertSegment = viewBoxHeight - 54 - vbPad;\n        alternate = \"M702 \" + vbPad + \"H400000v40H742v\" + vertSegment + \"l-4 4-4 4c-.667.7\\n-2 1.5-4 2.5s-4.167 1.833-6.5 2.5-5.5 1-9.5 1h-12l-28-84c-16.667-52-96.667\\n-294.333-240-727l-212 -643 -85 170c-4-3.333-8.333-7.667-13 -13l-13-13l77-155\\n 77-156c66 199.333 139 419.667 219 661 l218 661zM702 \" + vbPad + \"H400000v40H742z\";\n    }\n    var pathNode = new domTree_PathNode(sqrtName, alternate);\n\n    var svg = new domTree_SvgNode([pathNode], {\n        // Note: 1000:1 ratio of viewBox to document em width.\n        \"width\": \"400em\",\n        \"height\": height + \"em\",\n        \"viewBox\": \"0 0 400000 \" + viewBoxHeight,\n        \"preserveAspectRatio\": \"xMinYMin slice\"\n    });\n\n    return buildCommon.makeSvgSpan([\"hide-tail\"], [svg], options);\n};\n\n/**\n * Make a sqrt image of the given height,\n */\nvar makeSqrtImage = function makeSqrtImage(height, options) {\n    // Define a newOptions that removes the effect of size changes such as \\Huge.\n    // We don't pick different a height surd for \\Huge. For it, we scale up.\n    var newOptions = options.havingBaseSizing();\n\n    // Pick the desired surd glyph from a sequence of surds.\n    var delim = traverseSequence(\"\\\\surd\", height * newOptions.sizeMultiplier, stackLargeDelimiterSequence, newOptions);\n\n    var sizeMultiplier = newOptions.sizeMultiplier; // default\n\n    // Create a span containing an SVG image of a sqrt symbol.\n    var span = void 0;\n    var spanHeight = 0;\n    var texHeight = 0;\n    var viewBoxHeight = 0;\n    var advanceWidth = void 0;\n\n    // We create viewBoxes with 80 units of \"padding\" above each surd.\n    // Then browser rounding error on the parent span height will not\n    // encroach on the ink of the viniculum. But that padding is not\n    // included in the TeX-like `height` used for calculation of\n    // vertical alignment. So texHeight = span.height < span.style.height.\n\n    if (delim.type === \"small\") {\n        // Get an SVG that is derived from glyph U+221A in font KaTeX-Main.\n        viewBoxHeight = 1000 + vbPad; // 1000 unit glyph height.\n        if (height < 1.0) {\n            sizeMultiplier = 1.0; // mimic a \\textfont radical\n        } else if (height < 1.4) {\n            sizeMultiplier = 0.7; // mimic a \\scriptfont radical\n        }\n        spanHeight = (1.0 + emPad) / sizeMultiplier;\n        texHeight = 1.00 / sizeMultiplier;\n        span = delimiter_sqrtSvg(\"sqrtMain\", spanHeight, viewBoxHeight, options);\n        span.style.minWidth = \"0.853em\";\n        advanceWidth = 0.833 / sizeMultiplier; // from the font.\n    } else if (delim.type === \"large\") {\n        // These SVGs come from fonts: KaTeX_Size1, _Size2, etc.\n        viewBoxHeight = (1000 + vbPad) * sizeToMaxHeight[delim.size];\n        texHeight = sizeToMaxHeight[delim.size] / sizeMultiplier;\n        spanHeight = (sizeToMaxHeight[delim.size] + emPad) / sizeMultiplier;\n        span = delimiter_sqrtSvg(\"sqrtSize\" + delim.size, spanHeight, viewBoxHeight, options);\n        span.style.minWidth = \"1.02em\";\n        advanceWidth = 1.0 / sizeMultiplier; // 1.0 from the font.\n    } else {\n        // Tall sqrt. In TeX, this would be stacked using multiple glyphs.\n        // We'll use a single SVG to accomplish the same thing.\n        spanHeight = height + emPad;\n        texHeight = height;\n        viewBoxHeight = Math.floor(1000 * height) + vbPad;\n        span = delimiter_sqrtSvg(\"sqrtTall\", spanHeight, viewBoxHeight, options);\n        span.style.minWidth = \"0.742em\";\n        advanceWidth = 1.056;\n    }\n\n    span.height = texHeight;\n    span.style.height = spanHeight + \"em\";\n\n    return {\n        span: span,\n        advanceWidth: advanceWidth,\n        // Calculate the actual line width.\n        // This actually should depend on the chosen font -- e.g. \\boldmath\n        // should use the thicker surd symbols from e.g. KaTeX_Main-Bold, and\n        // have thicker rules.\n        ruleWidth: options.fontMetrics().sqrtRuleThickness * sizeMultiplier\n    };\n};\n\n// There are three kinds of delimiters, delimiters that stack when they become\n// too large\nvar stackLargeDelimiters = [\"(\", \")\", \"[\", \"\\\\lbrack\", \"]\", \"\\\\rbrack\", \"\\\\{\", \"\\\\lbrace\", \"\\\\}\", \"\\\\rbrace\", \"\\\\lfloor\", \"\\\\rfloor\", \"\\u230A\", \"\\u230B\", \"\\\\lceil\", \"\\\\rceil\", \"\\u2308\", \"\\u2309\", \"\\\\surd\"];\n\n// delimiters that always stack\nvar stackAlwaysDelimiters = [\"\\\\uparrow\", \"\\\\downarrow\", \"\\\\updownarrow\", \"\\\\Uparrow\", \"\\\\Downarrow\", \"\\\\Updownarrow\", \"|\", \"\\\\|\", \"\\\\vert\", \"\\\\Vert\", \"\\\\lvert\", \"\\\\rvert\", \"\\\\lVert\", \"\\\\rVert\", \"\\\\lgroup\", \"\\\\rgroup\", \"\\u27EE\", \"\\u27EF\", \"\\\\lmoustache\", \"\\\\rmoustache\", \"\\u23B0\", \"\\u23B1\"];\n\n// and delimiters that never stack\nvar stackNeverDelimiters = [\"<\", \">\", \"\\\\langle\", \"\\\\rangle\", \"/\", \"\\\\backslash\", \"\\\\lt\", \"\\\\gt\"];\n\n// Metrics of the different sizes. Found by looking at TeX's output of\n// $\\bigl| // \\Bigl| \\biggl| \\Biggl| \\showlists$\n// Used to create stacked delimiters of appropriate sizes in makeSizedDelim.\nvar sizeToMaxHeight = [0, 1.2, 1.8, 2.4, 3.0];\n\n/**\n * Used to create a delimiter of a specific size, where `size` is 1, 2, 3, or 4.\n */\nvar delimiter_makeSizedDelim = function makeSizedDelim(delim, size, options, mode, classes) {\n    // < and > turn into \\langle and \\rangle in delimiters\n    if (delim === \"<\" || delim === \"\\\\lt\" || delim === \"\\u27E8\") {\n        delim = \"\\\\langle\";\n    } else if (delim === \">\" || delim === \"\\\\gt\" || delim === \"\\u27E9\") {\n        delim = \"\\\\rangle\";\n    }\n\n    // Sized delimiters are never centered.\n    if (utils.contains(stackLargeDelimiters, delim) || utils.contains(stackNeverDelimiters, delim)) {\n        return delimiter_makeLargeDelim(delim, size, false, options, mode, classes);\n    } else if (utils.contains(stackAlwaysDelimiters, delim)) {\n        return delimiter_makeStackedDelim(delim, sizeToMaxHeight[size], false, options, mode, classes);\n    } else {\n        throw new src_ParseError(\"Illegal delimiter: '\" + delim + \"'\");\n    }\n};\n\n/**\n * There are three different sequences of delimiter sizes that the delimiters\n * follow depending on the kind of delimiter. This is used when creating custom\n * sized delimiters to decide whether to create a small, large, or stacked\n * delimiter.\n *\n * In real TeX, these sequences aren't explicitly defined, but are instead\n * defined inside the font metrics. Since there are only three sequences that\n * are possible for the delimiters that TeX defines, it is easier to just encode\n * them explicitly here.\n */\n\n// Delimiters that never stack try small delimiters and large delimiters only\nvar stackNeverDelimiterSequence = [{ type: \"small\", style: src_Style.SCRIPTSCRIPT }, { type: \"small\", style: src_Style.SCRIPT }, { type: \"small\", style: src_Style.TEXT }, { type: \"large\", size: 1 }, { type: \"large\", size: 2 }, { type: \"large\", size: 3 }, { type: \"large\", size: 4 }];\n\n// Delimiters that always stack try the small delimiters first, then stack\nvar stackAlwaysDelimiterSequence = [{ type: \"small\", style: src_Style.SCRIPTSCRIPT }, { type: \"small\", style: src_Style.SCRIPT }, { type: \"small\", style: src_Style.TEXT }, { type: \"stack\" }];\n\n// Delimiters that stack when large try the small and then large delimiters, and\n// stack afterwards\nvar stackLargeDelimiterSequence = [{ type: \"small\", style: src_Style.SCRIPTSCRIPT }, { type: \"small\", style: src_Style.SCRIPT }, { type: \"small\", style: src_Style.TEXT }, { type: \"large\", size: 1 }, { type: \"large\", size: 2 }, { type: \"large\", size: 3 }, { type: \"large\", size: 4 }, { type: \"stack\" }];\n\n/**\n * Get the font used in a delimiter based on what kind of delimiter it is.\n * TODO(#963) Use more specific font family return type once that is introduced.\n */\nvar delimTypeToFont = function delimTypeToFont(type) {\n    if (type.type === \"small\") {\n        return \"Main-Regular\";\n    } else if (type.type === \"large\") {\n        return \"Size\" + type.size + \"-Regular\";\n    } else if (type.type === \"stack\") {\n        return \"Size4-Regular\";\n    } else {\n        throw new Error(\"Add support for delim type '\" + type.type + \"' here.\");\n    }\n};\n\n/**\n * Traverse a sequence of types of delimiters to decide what kind of delimiter\n * should be used to create a delimiter of the given height+depth.\n */\nvar traverseSequence = function traverseSequence(delim, height, sequence, options) {\n    // Here, we choose the index we should start at in the sequences. In smaller\n    // sizes (which correspond to larger numbers in style.size) we start earlier\n    // in the sequence. Thus, scriptscript starts at index 3-3=0, script starts\n    // at index 3-2=1, text starts at 3-1=2, and display starts at min(2,3-0)=2\n    var start = Math.min(2, 3 - options.style.size);\n    for (var i = start; i < sequence.length; i++) {\n        if (sequence[i].type === \"stack\") {\n            // This is always the last delimiter, so we just break the loop now.\n            break;\n        }\n\n        var metrics = delimiter_getMetrics(delim, delimTypeToFont(sequence[i]), \"math\");\n        var heightDepth = metrics.height + metrics.depth;\n\n        // Small delimiters are scaled down versions of the same font, so we\n        // account for the style change size.\n\n        if (sequence[i].type === \"small\") {\n            var newOptions = options.havingBaseStyle(sequence[i].style);\n            heightDepth *= newOptions.sizeMultiplier;\n        }\n\n        // Check if the delimiter at this size works for the given height.\n        if (heightDepth > height) {\n            return sequence[i];\n        }\n    }\n\n    // If we reached the end of the sequence, return the last sequence element.\n    return sequence[sequence.length - 1];\n};\n\n/**\n * Make a delimiter of a given height+depth, with optional centering. Here, we\n * traverse the sequences, and create a delimiter that the sequence tells us to.\n */\nvar delimiter_makeCustomSizedDelim = function makeCustomSizedDelim(delim, height, center, options, mode, classes) {\n    if (delim === \"<\" || delim === \"\\\\lt\" || delim === \"\\u27E8\") {\n        delim = \"\\\\langle\";\n    } else if (delim === \">\" || delim === \"\\\\gt\" || delim === \"\\u27E9\") {\n        delim = \"\\\\rangle\";\n    }\n\n    // Decide what sequence to use\n    var sequence = void 0;\n    if (utils.contains(stackNeverDelimiters, delim)) {\n        sequence = stackNeverDelimiterSequence;\n    } else if (utils.contains(stackLargeDelimiters, delim)) {\n        sequence = stackLargeDelimiterSequence;\n    } else {\n        sequence = stackAlwaysDelimiterSequence;\n    }\n\n    // Look through the sequence\n    var delimType = traverseSequence(delim, height, sequence, options);\n\n    // Get the delimiter from font glyphs.\n    // Depending on the sequence element we decided on, call the\n    // appropriate function.\n    if (delimType.type === \"small\") {\n        return delimiter_makeSmallDelim(delim, delimType.style, center, options, mode, classes);\n    } else if (delimType.type === \"large\") {\n        return delimiter_makeLargeDelim(delim, delimType.size, center, options, mode, classes);\n    } else /* if (delimType.type === \"stack\") */{\n            return delimiter_makeStackedDelim(delim, height, center, options, mode, classes);\n        }\n};\n\n/**\n * Make a delimiter for use with `\\left` and `\\right`, given a height and depth\n * of an expression that the delimiters surround.\n */\nvar makeLeftRightDelim = function makeLeftRightDelim(delim, height, depth, options, mode, classes) {\n    // We always center \\left/\\right delimiters, so the axis is always shifted\n    var axisHeight = options.fontMetrics().axisHeight * options.sizeMultiplier;\n\n    // Taken from TeX source, tex.web, function make_left_right\n    var delimiterFactor = 901;\n    var delimiterExtend = 5.0 / options.fontMetrics().ptPerEm;\n\n    var maxDistFromAxis = Math.max(height - axisHeight, depth + axisHeight);\n\n    var totalHeight = Math.max(\n    // In real TeX, calculations are done using integral values which are\n    // 65536 per pt, or 655360 per em. So, the division here truncates in\n    // TeX but doesn't here, producing different results. If we wanted to\n    // exactly match TeX's calculation, we could do\n    //   Math.floor(655360 * maxDistFromAxis / 500) *\n    //    delimiterFactor / 655360\n    // (To see the difference, compare\n    //    x^{x^{\\left(\\rule{0.1em}{0.68em}\\right)}}\n    // in TeX and KaTeX)\n    maxDistFromAxis / 500 * delimiterFactor, 2 * maxDistFromAxis - delimiterExtend);\n\n    // Finally, we defer to `makeCustomSizedDelim` with our calculated total\n    // height\n    return delimiter_makeCustomSizedDelim(delim, totalHeight, true, options, mode, classes);\n};\n\n/* harmony default export */ var delimiter = ({\n    sqrtImage: makeSqrtImage,\n    sizedDelim: delimiter_makeSizedDelim,\n    customSizedDelim: delimiter_makeCustomSizedDelim,\n    leftRightDelim: makeLeftRightDelim\n});\n// CONCATENATED MODULE: ./src/functions/delimsizing.js\n\n\n\n\n\n\n\n\n\n\n\n// Extra data needed for the delimiter handler down below\nvar delimiterSizes = {\n    \"\\\\bigl\": { mclass: \"mopen\", size: 1 },\n    \"\\\\Bigl\": { mclass: \"mopen\", size: 2 },\n    \"\\\\biggl\": { mclass: \"mopen\", size: 3 },\n    \"\\\\Biggl\": { mclass: \"mopen\", size: 4 },\n    \"\\\\bigr\": { mclass: \"mclose\", size: 1 },\n    \"\\\\Bigr\": { mclass: \"mclose\", size: 2 },\n    \"\\\\biggr\": { mclass: \"mclose\", size: 3 },\n    \"\\\\Biggr\": { mclass: \"mclose\", size: 4 },\n    \"\\\\bigm\": { mclass: \"mrel\", size: 1 },\n    \"\\\\Bigm\": { mclass: \"mrel\", size: 2 },\n    \"\\\\biggm\": { mclass: \"mrel\", size: 3 },\n    \"\\\\Biggm\": { mclass: \"mrel\", size: 4 },\n    \"\\\\big\": { mclass: \"mord\", size: 1 },\n    \"\\\\Big\": { mclass: \"mord\", size: 2 },\n    \"\\\\bigg\": { mclass: \"mord\", size: 3 },\n    \"\\\\Bigg\": { mclass: \"mord\", size: 4 }\n};\n\nvar delimiters = [\"(\", \")\", \"[\", \"\\\\lbrack\", \"]\", \"\\\\rbrack\", \"\\\\{\", \"\\\\lbrace\", \"\\\\}\", \"\\\\rbrace\", \"\\\\lfloor\", \"\\\\rfloor\", \"\\u230A\", \"\\u230B\", \"\\\\lceil\", \"\\\\rceil\", \"\\u2308\", \"\\u2309\", \"<\", \">\", \"\\\\langle\", \"\\u27E8\", \"\\\\rangle\", \"\\u27E9\", \"\\\\lt\", \"\\\\gt\", \"\\\\lvert\", \"\\\\rvert\", \"\\\\lVert\", \"\\\\rVert\", \"\\\\lgroup\", \"\\\\rgroup\", \"\\u27EE\", \"\\u27EF\", \"\\\\lmoustache\", \"\\\\rmoustache\", \"\\u23B0\", \"\\u23B1\", \"/\", \"\\\\backslash\", \"|\", \"\\\\vert\", \"\\\\|\", \"\\\\Vert\", \"\\\\uparrow\", \"\\\\Uparrow\", \"\\\\downarrow\", \"\\\\Downarrow\", \"\\\\updownarrow\", \"\\\\Updownarrow\", \".\"];\n\n// Delimiter functions\nfunction checkDelimiter(delim, context) {\n    var symDelim = checkSymbolNodeType(delim);\n    if (symDelim && utils.contains(delimiters, symDelim.text)) {\n        return symDelim;\n    } else {\n        throw new src_ParseError(\"Invalid delimiter: '\" + (\n        // $FlowFixMe, do not polyfill\n        symDelim ? symDelim.text : JSON[\"stringify\"](delim)) + \"' after '\" + context.funcName + \"'\", delim);\n    }\n}\n\ndefineFunction({\n    type: \"delimsizing\",\n    names: [\"\\\\bigl\", \"\\\\Bigl\", \"\\\\biggl\", \"\\\\Biggl\", \"\\\\bigr\", \"\\\\Bigr\", \"\\\\biggr\", \"\\\\Biggr\", \"\\\\bigm\", \"\\\\Bigm\", \"\\\\biggm\", \"\\\\Biggm\", \"\\\\big\", \"\\\\Big\", \"\\\\bigg\", \"\\\\Bigg\"],\n    props: {\n        numArgs: 1\n    },\n    handler: function handler(context, args) {\n        var delim = checkDelimiter(args[0], context);\n\n        return {\n            type: \"delimsizing\",\n            mode: context.parser.mode,\n            size: delimiterSizes[context.funcName].size,\n            mclass: delimiterSizes[context.funcName].mclass,\n            delim: delim.text\n        };\n    },\n    htmlBuilder: function htmlBuilder(group, options) {\n        if (group.delim === \".\") {\n            // Empty delimiters still count as elements, even though they don't\n            // show anything.\n            return buildCommon.makeSpan([group.mclass]);\n        }\n\n        // Use delimiter.sizedDelim to generate the delimiter.\n        return delimiter.sizedDelim(group.delim, group.size, options, group.mode, [group.mclass]);\n    },\n    mathmlBuilder: function mathmlBuilder(group) {\n        var children = [];\n\n        if (group.delim !== \".\") {\n            children.push(buildMathML_makeText(group.delim, group.mode));\n        }\n\n        var node = new mathMLTree.MathNode(\"mo\", children);\n\n        if (group.mclass === \"mopen\" || group.mclass === \"mclose\") {\n            // Only some of the delimsizing functions act as fences, and they\n            // return \"mopen\" or \"mclose\" mclass.\n            node.setAttribute(\"fence\", \"true\");\n        } else {\n            // Explicitly disable fencing if it's not a fence, to override the\n            // defaults.\n            node.setAttribute(\"fence\", \"false\");\n        }\n\n        return node;\n    }\n});\n\nfunction assertParsed(group) {\n    if (!group.body) {\n        throw new Error(\"Bug: The leftright ParseNode wasn't fully parsed.\");\n    }\n}\n\ndefineFunction({\n    type: \"leftright-right\",\n    names: [\"\\\\right\"],\n    props: {\n        numArgs: 1\n    },\n    handler: function handler(context, args) {\n        // \\left case below triggers parsing of \\right in\n        //   `const right = parser.parseFunction();`\n        // uses this return value.\n        return {\n            type: \"leftright-right\",\n            mode: context.parser.mode,\n            delim: checkDelimiter(args[0], context).text\n        };\n    }\n});\n\ndefineFunction({\n    type: \"leftright\",\n    names: [\"\\\\left\"],\n    props: {\n        numArgs: 1\n    },\n    handler: function handler(context, args) {\n        var delim = checkDelimiter(args[0], context);\n\n        var parser = context.parser;\n        // Parse out the implicit body\n        ++parser.leftrightDepth;\n        // parseExpression stops before '\\\\right'\n        var body = parser.parseExpression(false);\n        --parser.leftrightDepth;\n        // Check the next token\n        parser.expect(\"\\\\right\", false);\n        var right = parser.parseFunction();\n        if (!right) {\n            throw new src_ParseError('failed to parse function after \\\\right');\n        }\n        return {\n            type: \"leftright\",\n            mode: parser.mode,\n            body: body,\n            left: delim.text,\n            right: assertNodeType(right, \"leftright-right\").delim\n        };\n    },\n    htmlBuilder: function htmlBuilder(group, options) {\n        assertParsed(group);\n        // Build the inner expression\n        var inner = buildHTML_buildExpression(group.body, options, true, [null, \"mclose\"]);\n\n        var innerHeight = 0;\n        var innerDepth = 0;\n        var hadMiddle = false;\n\n        // Calculate its height and depth\n        for (var i = 0; i < inner.length; i++) {\n            // Property `isMiddle` not defined on `span`. See comment in\n            // \"middle\"'s htmlBuilder.\n            // $FlowFixMe\n            if (inner[i].isMiddle) {\n                hadMiddle = true;\n            } else {\n                innerHeight = Math.max(inner[i].height, innerHeight);\n                innerDepth = Math.max(inner[i].depth, innerDepth);\n            }\n        }\n\n        // The size of delimiters is the same, regardless of what style we are\n        // in. Thus, to correctly calculate the size of delimiter we need around\n        // a group, we scale down the inner size based on the size.\n        innerHeight *= options.sizeMultiplier;\n        innerDepth *= options.sizeMultiplier;\n\n        var leftDelim = void 0;\n        if (group.left === \".\") {\n            // Empty delimiters in \\left and \\right make null delimiter spaces.\n            leftDelim = makeNullDelimiter(options, [\"mopen\"]);\n        } else {\n            // Otherwise, use leftRightDelim to generate the correct sized\n            // delimiter.\n            leftDelim = delimiter.leftRightDelim(group.left, innerHeight, innerDepth, options, group.mode, [\"mopen\"]);\n        }\n        // Add it to the beginning of the expression\n        inner.unshift(leftDelim);\n\n        // Handle middle delimiters\n        if (hadMiddle) {\n            for (var _i = 1; _i < inner.length; _i++) {\n                var middleDelim = inner[_i];\n                // Property `isMiddle` not defined on `span`. See comment in\n                // \"middle\"'s htmlBuilder.\n                // $FlowFixMe\n                var isMiddle = middleDelim.isMiddle;\n                if (isMiddle) {\n                    // Apply the options that were active when \\middle was called\n                    inner[_i] = delimiter.leftRightDelim(isMiddle.delim, innerHeight, innerDepth, isMiddle.options, group.mode, []);\n                }\n            }\n        }\n\n        var rightDelim = void 0;\n        // Same for the right delimiter\n        if (group.right === \".\") {\n            rightDelim = makeNullDelimiter(options, [\"mclose\"]);\n        } else {\n            rightDelim = delimiter.leftRightDelim(group.right, innerHeight, innerDepth, options, group.mode, [\"mclose\"]);\n        }\n        // Add it to the end of the expression.\n        inner.push(rightDelim);\n\n        return buildCommon.makeSpan([\"minner\"], inner, options);\n    },\n    mathmlBuilder: function mathmlBuilder(group, options) {\n        assertParsed(group);\n        var inner = buildMathML_buildExpression(group.body, options);\n\n        if (group.left !== \".\") {\n            var leftNode = new mathMLTree.MathNode(\"mo\", [buildMathML_makeText(group.left, group.mode)]);\n\n            leftNode.setAttribute(\"fence\", \"true\");\n\n            inner.unshift(leftNode);\n        }\n\n        if (group.right !== \".\") {\n            var rightNode = new mathMLTree.MathNode(\"mo\", [buildMathML_makeText(group.right, group.mode)]);\n\n            rightNode.setAttribute(\"fence\", \"true\");\n\n            inner.push(rightNode);\n        }\n\n        return buildMathML_makeRow(inner);\n    }\n});\n\ndefineFunction({\n    type: \"middle\",\n    names: [\"\\\\middle\"],\n    props: {\n        numArgs: 1\n    },\n    handler: function handler(context, args) {\n        var delim = checkDelimiter(args[0], context);\n        if (!context.parser.leftrightDepth) {\n            throw new src_ParseError(\"\\\\middle without preceding \\\\left\", delim);\n        }\n\n        return {\n            type: \"middle\",\n            mode: context.parser.mode,\n            delim: delim.text\n        };\n    },\n    htmlBuilder: function htmlBuilder(group, options) {\n        var middleDelim = void 0;\n        if (group.delim === \".\") {\n            middleDelim = makeNullDelimiter(options, []);\n        } else {\n            middleDelim = delimiter.sizedDelim(group.delim, 1, options, group.mode, []);\n\n            var isMiddle = { delim: group.delim, options: options };\n            // Property `isMiddle` not defined on `span`. It is only used in\n            // this file above.\n            // TODO: Fix this violation of the `span` type and possibly rename\n            // things since `isMiddle` sounds like a boolean, but is a struct.\n            // $FlowFixMe\n            middleDelim.isMiddle = isMiddle;\n        }\n        return middleDelim;\n    },\n    mathmlBuilder: function mathmlBuilder(group, options) {\n        var middleNode = new mathMLTree.MathNode(\"mo\", [buildMathML_makeText(group.delim, group.mode)]);\n        middleNode.setAttribute(\"fence\", \"true\");\n        return middleNode;\n    }\n});\n// CONCATENATED MODULE: ./src/functions/enclose.js\n\n\n\n\n\n\n\n\n\n\nvar enclose_htmlBuilder = function htmlBuilder(group, options) {\n    // \\cancel, \\bcancel, \\xcancel, \\sout, \\fbox, \\colorbox, \\fcolorbox\n    var inner = buildHTML_buildGroup(group.body, options);\n\n    var label = group.label.substr(1);\n    var scale = options.sizeMultiplier;\n    var img = void 0;\n    var imgShift = 0;\n\n    // In the LaTeX cancel package, line geometry is slightly different\n    // depending on whether the subject is wider than it is tall, or vice versa.\n    // We don't know the width of a group, so as a proxy, we test if\n    // the subject is a single character. This captures most of the\n    // subjects that should get the \"tall\" treatment.\n    var isSingleChar = utils.isCharacterBox(group.body);\n\n    if (label === \"sout\") {\n        img = buildCommon.makeSpan([\"stretchy\", \"sout\"]);\n        img.height = options.fontMetrics().defaultRuleThickness / scale;\n        imgShift = -0.5 * options.fontMetrics().xHeight;\n    } else {\n        // Add horizontal padding\n        if (/cancel/.test(label)) {\n            if (!isSingleChar) {\n                inner.classes.push(\"cancel-pad\");\n            }\n        } else {\n            inner.classes.push(\"boxpad\");\n        }\n\n        // Add vertical padding\n        var vertPad = 0;\n        // ref: LaTeX source2e: \\fboxsep = 3pt;  \\fboxrule = .4pt\n        // ref: cancel package: \\advance\\totalheight2\\p@ % \"+2\"\n        if (/box/.test(label)) {\n            vertPad = label === \"colorbox\" ? 0.3 : 0.34;\n        } else {\n            vertPad = isSingleChar ? 0.2 : 0;\n        }\n\n        img = stretchy.encloseSpan(inner, label, vertPad, options);\n        imgShift = inner.depth + vertPad;\n\n        if (group.backgroundColor) {\n            img.style.backgroundColor = group.backgroundColor;\n            if (group.borderColor) {\n                img.style.borderColor = group.borderColor;\n            }\n        }\n    }\n\n    var vlist = void 0;\n    if (group.backgroundColor) {\n        vlist = buildCommon.makeVList({\n            positionType: \"individualShift\",\n            children: [\n            // Put the color background behind inner;\n            { type: \"elem\", elem: img, shift: imgShift }, { type: \"elem\", elem: inner, shift: 0 }]\n        }, options);\n    } else {\n        vlist = buildCommon.makeVList({\n            positionType: \"individualShift\",\n            children: [\n            // Write the \\cancel stroke on top of inner.\n            {\n                type: \"elem\",\n                elem: inner,\n                shift: 0\n            }, {\n                type: \"elem\",\n                elem: img,\n                shift: imgShift,\n                wrapperClasses: /cancel/.test(label) ? [\"svg-align\"] : []\n            }]\n        }, options);\n    }\n\n    if (/cancel/.test(label)) {\n        // The cancel package documentation says that cancel lines add their height\n        // to the expression, but tests show that isn't how it actually works.\n        vlist.height = inner.height;\n        vlist.depth = inner.depth;\n    }\n\n    if (/cancel/.test(label) && !isSingleChar) {\n        // cancel does not create horiz space for its line extension.\n        return buildCommon.makeSpan([\"mord\", \"cancel-lap\"], [vlist], options);\n    } else {\n        return buildCommon.makeSpan([\"mord\"], [vlist], options);\n    }\n};\n\nvar enclose_mathmlBuilder = function mathmlBuilder(group, options) {\n    var node = new mathMLTree.MathNode(\"menclose\", [buildMathML_buildGroup(group.body, options)]);\n    switch (group.label) {\n        case \"\\\\cancel\":\n            node.setAttribute(\"notation\", \"updiagonalstrike\");\n            break;\n        case \"\\\\bcancel\":\n            node.setAttribute(\"notation\", \"downdiagonalstrike\");\n            break;\n        case \"\\\\sout\":\n            node.setAttribute(\"notation\", \"horizontalstrike\");\n            break;\n        case \"\\\\fbox\":\n            node.setAttribute(\"notation\", \"box\");\n            break;\n        case \"\\\\fcolorbox\":\n            // TODO(ron): I don't know any way to set the border color.\n            node.setAttribute(\"notation\", \"box\");\n            break;\n        case \"\\\\xcancel\":\n            node.setAttribute(\"notation\", \"updiagonalstrike downdiagonalstrike\");\n            break;\n    }\n    if (group.backgroundColor) {\n        node.setAttribute(\"mathbackground\", group.backgroundColor);\n    }\n    return node;\n};\n\ndefineFunction({\n    type: \"enclose\",\n    names: [\"\\\\colorbox\"],\n    props: {\n        numArgs: 2,\n        allowedInText: true,\n        greediness: 3,\n        argTypes: [\"color\", \"text\"]\n    },\n    handler: function handler(_ref, args, optArgs) {\n        var parser = _ref.parser,\n            funcName = _ref.funcName;\n\n        var color = assertNodeType(args[0], \"color-token\").color;\n        var body = args[1];\n        return {\n            type: \"enclose\",\n            mode: parser.mode,\n            label: funcName,\n            backgroundColor: color,\n            body: body\n        };\n    },\n\n    htmlBuilder: enclose_htmlBuilder,\n    mathmlBuilder: enclose_mathmlBuilder\n});\n\ndefineFunction({\n    type: \"enclose\",\n    names: [\"\\\\fcolorbox\"],\n    props: {\n        numArgs: 3,\n        allowedInText: true,\n        greediness: 3,\n        argTypes: [\"color\", \"color\", \"text\"]\n    },\n    handler: function handler(_ref2, args, optArgs) {\n        var parser = _ref2.parser,\n            funcName = _ref2.funcName;\n\n        var borderColor = assertNodeType(args[0], \"color-token\").color;\n        var backgroundColor = assertNodeType(args[1], \"color-token\").color;\n        var body = args[2];\n        return {\n            type: \"enclose\",\n            mode: parser.mode,\n            label: funcName,\n            backgroundColor: backgroundColor,\n            borderColor: borderColor,\n            body: body\n        };\n    },\n\n    htmlBuilder: enclose_htmlBuilder,\n    mathmlBuilder: enclose_mathmlBuilder\n});\n\ndefineFunction({\n    type: \"enclose\",\n    names: [\"\\\\fbox\"],\n    props: {\n        numArgs: 1,\n        argTypes: [\"text\"],\n        allowedInText: true\n    },\n    handler: function handler(_ref3, args) {\n        var parser = _ref3.parser;\n\n        return {\n            type: \"enclose\",\n            mode: parser.mode,\n            label: \"\\\\fbox\",\n            body: args[0]\n        };\n    }\n});\n\ndefineFunction({\n    type: \"enclose\",\n    names: [\"\\\\cancel\", \"\\\\bcancel\", \"\\\\xcancel\", \"\\\\sout\"],\n    props: {\n        numArgs: 1\n    },\n    handler: function handler(_ref4, args, optArgs) {\n        var parser = _ref4.parser,\n            funcName = _ref4.funcName;\n\n        var body = args[0];\n        return {\n            type: \"enclose\",\n            mode: parser.mode,\n            label: funcName,\n            body: body\n        };\n    },\n\n    htmlBuilder: enclose_htmlBuilder,\n    mathmlBuilder: enclose_mathmlBuilder\n});\n// CONCATENATED MODULE: ./src/functions/environment.js\n\n\n\n\n// Environment delimiters. HTML/MathML rendering is defined in the corresponding\n// defineEnvironment definitions.\ndefineFunction({\n    type: \"environment\",\n    names: [\"\\\\begin\", \"\\\\end\"],\n    props: {\n        numArgs: 1,\n        argTypes: [\"text\"]\n    },\n    handler: function handler(_ref, args) {\n        var parser = _ref.parser;\n\n        var nameGroup = args[0];\n        if (nameGroup.type !== \"ordgroup\") {\n            throw new src_ParseError(\"Invalid environment name\", nameGroup);\n        }\n        var name = \"\";\n        for (var i = 0; i < nameGroup.body.length; ++i) {\n            name += assertNodeType(nameGroup.body[i], \"textord\").text;\n        }\n        return {\n            type: \"environment\",\n            mode: parser.mode,\n            name: name,\n            nameGroup: nameGroup\n        };\n    }\n});\n// CONCATENATED MODULE: ./src/functions/mclass.js\n\n\n\n\n\n\n\n\nvar mclass_makeSpan = buildCommon.makeSpan;\n\nfunction mclass_htmlBuilder(group, options) {\n    var elements = buildHTML_buildExpression(group.body, options, true);\n    return mclass_makeSpan([group.mclass], elements, options);\n}\n\nfunction mclass_mathmlBuilder(group, options) {\n    var inner = buildMathML_buildExpression(group.body, options);\n    return mathMLTree.newDocumentFragment(inner);\n}\n\n// Math class commands except \\mathop\ndefineFunction({\n    type: \"mclass\",\n    names: [\"\\\\mathord\", \"\\\\mathbin\", \"\\\\mathrel\", \"\\\\mathopen\", \"\\\\mathclose\", \"\\\\mathpunct\", \"\\\\mathinner\"],\n    props: {\n        numArgs: 1\n    },\n    handler: function handler(_ref, args) {\n        var parser = _ref.parser,\n            funcName = _ref.funcName;\n\n        var body = args[0];\n        return {\n            type: \"mclass\",\n            mode: parser.mode,\n            mclass: \"m\" + funcName.substr(5),\n            body: defineFunction_ordargument(body)\n        };\n    },\n\n    htmlBuilder: mclass_htmlBuilder,\n    mathmlBuilder: mclass_mathmlBuilder\n});\n\nvar binrelClass = function binrelClass(arg) {\n    // \\binrel@ spacing varies with (bin|rel|ord) of the atom in the argument.\n    // (by rendering separately and with {}s before and after, and measuring\n    // the change in spacing).  We'll do roughly the same by detecting the\n    // atom type directly.\n    var atom = arg.type === \"ordgroup\" && arg.body.length ? arg.body[0] : arg;\n    if (atom.type === \"atom\" && (atom.family === \"bin\" || atom.family === \"rel\")) {\n        return \"m\" + atom.family;\n    } else {\n        return \"mord\";\n    }\n};\n\n// \\@binrel{x}{y} renders like y but as mbin/mrel/mord if x is mbin/mrel/mord.\n// This is equivalent to \\binrel@{x}\\binrel@@{y} in AMSTeX.\ndefineFunction({\n    type: \"mclass\",\n    names: [\"\\\\@binrel\"],\n    props: {\n        numArgs: 2\n    },\n    handler: function handler(_ref2, args) {\n        var parser = _ref2.parser;\n\n        return {\n            type: \"mclass\",\n            mode: parser.mode,\n            mclass: binrelClass(args[0]),\n            body: [args[1]]\n        };\n    }\n});\n\n// Build a relation or stacked op by placing one symbol on top of another\ndefineFunction({\n    type: \"mclass\",\n    names: [\"\\\\stackrel\", \"\\\\overset\", \"\\\\underset\"],\n    props: {\n        numArgs: 2\n    },\n    handler: function handler(_ref3, args) {\n        var parser = _ref3.parser,\n            funcName = _ref3.funcName;\n\n        var baseArg = args[1];\n        var shiftedArg = args[0];\n\n        var mclass = void 0;\n        if (funcName !== \"\\\\stackrel\") {\n            // LaTeX applies \\binrel spacing to \\overset and \\underset.\n            mclass = binrelClass(baseArg);\n        } else {\n            mclass = \"mrel\"; // for \\stackrel\n        }\n\n        var baseOp = {\n            type: \"op\",\n            mode: baseArg.mode,\n            limits: true,\n            alwaysHandleSupSub: true,\n            symbol: false,\n            suppressBaseShift: funcName !== \"\\\\stackrel\",\n            body: defineFunction_ordargument(baseArg)\n        };\n\n        var supsub = {\n            type: \"supsub\",\n            mode: shiftedArg.mode,\n            base: baseOp,\n            sup: funcName === \"\\\\underset\" ? null : shiftedArg,\n            sub: funcName === \"\\\\underset\" ? shiftedArg : null\n        };\n\n        return {\n            type: \"mclass\",\n            mode: parser.mode,\n            mclass: mclass,\n            body: [supsub]\n        };\n    },\n\n    htmlBuilder: mclass_htmlBuilder,\n    mathmlBuilder: mclass_mathmlBuilder\n});\n// CONCATENATED MODULE: ./src/functions/font.js\n\n// TODO(kevinb): implement \\\\sl and \\\\sc\n\n\n\n\n\n\n\nvar font_htmlBuilder = function htmlBuilder(group, options) {\n    var font = group.font;\n    var newOptions = options.withFont(font);\n    return buildHTML_buildGroup(group.body, newOptions);\n};\n\nvar font_mathmlBuilder = function mathmlBuilder(group, options) {\n    var font = group.font;\n    var newOptions = options.withFont(font);\n    return buildMathML_buildGroup(group.body, newOptions);\n};\n\nvar fontAliases = {\n    \"\\\\Bbb\": \"\\\\mathbb\",\n    \"\\\\bold\": \"\\\\mathbf\",\n    \"\\\\frak\": \"\\\\mathfrak\",\n    \"\\\\bm\": \"\\\\boldsymbol\"\n};\n\ndefineFunction({\n    type: \"font\",\n    names: [\n    // styles, except \\boldsymbol defined below\n    \"\\\\mathrm\", \"\\\\mathit\", \"\\\\mathbf\",\n\n    // families\n    \"\\\\mathbb\", \"\\\\mathcal\", \"\\\\mathfrak\", \"\\\\mathscr\", \"\\\\mathsf\", \"\\\\mathtt\",\n\n    // aliases, except \\bm defined below\n    \"\\\\Bbb\", \"\\\\bold\", \"\\\\frak\"],\n    props: {\n        numArgs: 1,\n        greediness: 2\n    },\n    handler: function handler(_ref, args) {\n        var parser = _ref.parser,\n            funcName = _ref.funcName;\n\n        var body = args[0];\n        var func = funcName;\n        if (func in fontAliases) {\n            func = fontAliases[func];\n        }\n        return {\n            type: \"font\",\n            mode: parser.mode,\n            font: func.slice(1),\n            body: body\n        };\n    },\n    htmlBuilder: font_htmlBuilder,\n    mathmlBuilder: font_mathmlBuilder\n});\n\ndefineFunction({\n    type: \"mclass\",\n    names: [\"\\\\boldsymbol\", \"\\\\bm\"],\n    props: {\n        numArgs: 1,\n        greediness: 2\n    },\n    handler: function handler(_ref2, args) {\n        var parser = _ref2.parser;\n\n        var body = args[0];\n        // amsbsy.sty's \\boldsymbol uses \\binrel spacing to inherit the\n        // argument's bin|rel|ord status\n        return {\n            type: \"mclass\",\n            mode: parser.mode,\n            mclass: binrelClass(body),\n            body: [{\n                type: \"font\",\n                mode: parser.mode,\n                font: \"boldsymbol\",\n                body: body\n            }]\n        };\n    }\n});\n\n// Old font changing functions\ndefineFunction({\n    type: \"font\",\n    names: [\"\\\\rm\", \"\\\\sf\", \"\\\\tt\", \"\\\\bf\", \"\\\\it\"],\n    props: {\n        numArgs: 0,\n        allowedInText: true\n    },\n    handler: function handler(_ref3, args) {\n        var parser = _ref3.parser,\n            funcName = _ref3.funcName,\n            breakOnTokenText = _ref3.breakOnTokenText;\n        var mode = parser.mode;\n\n        parser.consumeSpaces();\n        var body = parser.parseExpression(true, breakOnTokenText);\n        var style = \"math\" + funcName.slice(1);\n\n        return {\n            type: \"font\",\n            mode: mode,\n            font: style,\n            body: {\n                type: \"ordgroup\",\n                mode: parser.mode,\n                body: body\n            }\n        };\n    },\n    htmlBuilder: font_htmlBuilder,\n    mathmlBuilder: font_mathmlBuilder\n});\n// CONCATENATED MODULE: ./src/functions/genfrac.js\n\n\n\n\n\n\n\n\n\n\n\n\nvar genfrac_htmlBuilder = function htmlBuilder(group, options) {\n    // Fractions are handled in the TeXbook on pages 444-445, rules 15(a-e).\n    // Figure out what style this fraction should be in based on the\n    // function used\n    var style = options.style;\n    if (group.size === \"display\") {\n        style = src_Style.DISPLAY;\n    } else if (group.size === \"text\" && style.size === src_Style.DISPLAY.size) {\n        // We're in a \\tfrac but incoming style is displaystyle, so:\n        style = src_Style.TEXT;\n    } else if (group.size === \"script\") {\n        style = src_Style.SCRIPT;\n    } else if (group.size === \"scriptscript\") {\n        style = src_Style.SCRIPTSCRIPT;\n    }\n\n    var nstyle = style.fracNum();\n    var dstyle = style.fracDen();\n    var newOptions = void 0;\n\n    newOptions = options.havingStyle(nstyle);\n    var numerm = buildHTML_buildGroup(group.numer, newOptions, options);\n\n    if (group.continued) {\n        // \\cfrac inserts a \\strut into the numerator.\n        // Get \\strut dimensions from TeXbook page 353.\n        var hStrut = 8.5 / options.fontMetrics().ptPerEm;\n        var dStrut = 3.5 / options.fontMetrics().ptPerEm;\n        numerm.height = numerm.height < hStrut ? hStrut : numerm.height;\n        numerm.depth = numerm.depth < dStrut ? dStrut : numerm.depth;\n    }\n\n    newOptions = options.havingStyle(dstyle);\n    var denomm = buildHTML_buildGroup(group.denom, newOptions, options);\n\n    var rule = void 0;\n    var ruleWidth = void 0;\n    var ruleSpacing = void 0;\n    if (group.hasBarLine) {\n        if (group.barSize) {\n            ruleWidth = units_calculateSize(group.barSize, options);\n            rule = buildCommon.makeLineSpan(\"frac-line\", options, ruleWidth);\n        } else {\n            rule = buildCommon.makeLineSpan(\"frac-line\", options);\n        }\n        ruleWidth = rule.height;\n        ruleSpacing = rule.height;\n    } else {\n        rule = null;\n        ruleWidth = 0;\n        ruleSpacing = options.fontMetrics().defaultRuleThickness;\n    }\n\n    // Rule 15b\n    var numShift = void 0;\n    var clearance = void 0;\n    var denomShift = void 0;\n    if (style.size === src_Style.DISPLAY.size) {\n        numShift = options.fontMetrics().num1;\n        if (ruleWidth > 0) {\n            clearance = 3 * ruleSpacing;\n        } else {\n            clearance = 7 * ruleSpacing;\n        }\n        denomShift = options.fontMetrics().denom1;\n    } else {\n        if (ruleWidth > 0) {\n            numShift = options.fontMetrics().num2;\n            clearance = ruleSpacing;\n        } else {\n            numShift = options.fontMetrics().num3;\n            clearance = 3 * ruleSpacing;\n        }\n        denomShift = options.fontMetrics().denom2;\n    }\n\n    var frac = void 0;\n    if (!rule) {\n        // Rule 15c\n        var candidateClearance = numShift - numerm.depth - (denomm.height - denomShift);\n        if (candidateClearance < clearance) {\n            numShift += 0.5 * (clearance - candidateClearance);\n            denomShift += 0.5 * (clearance - candidateClearance);\n        }\n\n        frac = buildCommon.makeVList({\n            positionType: \"individualShift\",\n            children: [{ type: \"elem\", elem: denomm, shift: denomShift }, { type: \"elem\", elem: numerm, shift: -numShift }]\n        }, options);\n    } else {\n        // Rule 15d\n        var axisHeight = options.fontMetrics().axisHeight;\n\n        if (numShift - numerm.depth - (axisHeight + 0.5 * ruleWidth) < clearance) {\n            numShift += clearance - (numShift - numerm.depth - (axisHeight + 0.5 * ruleWidth));\n        }\n\n        if (axisHeight - 0.5 * ruleWidth - (denomm.height - denomShift) < clearance) {\n            denomShift += clearance - (axisHeight - 0.5 * ruleWidth - (denomm.height - denomShift));\n        }\n\n        var midShift = -(axisHeight - 0.5 * ruleWidth);\n\n        frac = buildCommon.makeVList({\n            positionType: \"individualShift\",\n            children: [{ type: \"elem\", elem: denomm, shift: denomShift }, { type: \"elem\", elem: rule, shift: midShift }, { type: \"elem\", elem: numerm, shift: -numShift }]\n        }, options);\n    }\n\n    // Since we manually change the style sometimes (with \\dfrac or \\tfrac),\n    // account for the possible size change here.\n    newOptions = options.havingStyle(style);\n    frac.height *= newOptions.sizeMultiplier / options.sizeMultiplier;\n    frac.depth *= newOptions.sizeMultiplier / options.sizeMultiplier;\n\n    // Rule 15e\n    var delimSize = void 0;\n    if (style.size === src_Style.DISPLAY.size) {\n        delimSize = options.fontMetrics().delim1;\n    } else {\n        delimSize = options.fontMetrics().delim2;\n    }\n\n    var leftDelim = void 0;\n    var rightDelim = void 0;\n    if (group.leftDelim == null) {\n        leftDelim = makeNullDelimiter(options, [\"mopen\"]);\n    } else {\n        leftDelim = delimiter.customSizedDelim(group.leftDelim, delimSize, true, options.havingStyle(style), group.mode, [\"mopen\"]);\n    }\n\n    if (group.continued) {\n        rightDelim = buildCommon.makeSpan([]); // zero width for \\cfrac\n    } else if (group.rightDelim == null) {\n        rightDelim = makeNullDelimiter(options, [\"mclose\"]);\n    } else {\n        rightDelim = delimiter.customSizedDelim(group.rightDelim, delimSize, true, options.havingStyle(style), group.mode, [\"mclose\"]);\n    }\n\n    return buildCommon.makeSpan([\"mord\"].concat(newOptions.sizingClasses(options)), [leftDelim, buildCommon.makeSpan([\"mfrac\"], [frac]), rightDelim], options);\n};\n\nvar genfrac_mathmlBuilder = function mathmlBuilder(group, options) {\n    var node = new mathMLTree.MathNode(\"mfrac\", [buildMathML_buildGroup(group.numer, options), buildMathML_buildGroup(group.denom, options)]);\n\n    if (!group.hasBarLine) {\n        node.setAttribute(\"linethickness\", \"0px\");\n    } else if (group.barSize) {\n        var ruleWidth = units_calculateSize(group.barSize, options);\n        node.setAttribute(\"linethickness\", ruleWidth + \"em\");\n    }\n\n    if (group.leftDelim != null || group.rightDelim != null) {\n        var withDelims = [];\n\n        if (group.leftDelim != null) {\n            var leftOp = new mathMLTree.MathNode(\"mo\", [new mathMLTree.TextNode(group.leftDelim)]);\n\n            leftOp.setAttribute(\"fence\", \"true\");\n\n            withDelims.push(leftOp);\n        }\n\n        withDelims.push(node);\n\n        if (group.rightDelim != null) {\n            var rightOp = new mathMLTree.MathNode(\"mo\", [new mathMLTree.TextNode(group.rightDelim)]);\n\n            rightOp.setAttribute(\"fence\", \"true\");\n\n            withDelims.push(rightOp);\n        }\n\n        return buildMathML_makeRow(withDelims);\n    }\n\n    return node;\n};\n\ndefineFunction({\n    type: \"genfrac\",\n    names: [\"\\\\cfrac\", \"\\\\dfrac\", \"\\\\frac\", \"\\\\tfrac\", \"\\\\dbinom\", \"\\\\binom\", \"\\\\tbinom\", \"\\\\\\\\atopfrac\", // can’t be entered directly\n    \"\\\\\\\\bracefrac\", \"\\\\\\\\brackfrac\"],\n    props: {\n        numArgs: 2,\n        greediness: 2\n    },\n    handler: function handler(_ref, args) {\n        var parser = _ref.parser,\n            funcName = _ref.funcName;\n\n        var numer = args[0];\n        var denom = args[1];\n        var hasBarLine = void 0;\n        var leftDelim = null;\n        var rightDelim = null;\n        var size = \"auto\";\n\n        switch (funcName) {\n            case \"\\\\cfrac\":\n            case \"\\\\dfrac\":\n            case \"\\\\frac\":\n            case \"\\\\tfrac\":\n                hasBarLine = true;\n                break;\n            case \"\\\\\\\\atopfrac\":\n                hasBarLine = false;\n                break;\n            case \"\\\\dbinom\":\n            case \"\\\\binom\":\n            case \"\\\\tbinom\":\n                hasBarLine = false;\n                leftDelim = \"(\";\n                rightDelim = \")\";\n                break;\n            case \"\\\\\\\\bracefrac\":\n                hasBarLine = false;\n                leftDelim = \"\\\\{\";\n                rightDelim = \"\\\\}\";\n                break;\n            case \"\\\\\\\\brackfrac\":\n                hasBarLine = false;\n                leftDelim = \"[\";\n                rightDelim = \"]\";\n                break;\n            default:\n                throw new Error(\"Unrecognized genfrac command\");\n        }\n\n        switch (funcName) {\n            case \"\\\\cfrac\":\n            case \"\\\\dfrac\":\n            case \"\\\\dbinom\":\n                size = \"display\";\n                break;\n            case \"\\\\tfrac\":\n            case \"\\\\tbinom\":\n                size = \"text\";\n                break;\n        }\n\n        return {\n            type: \"genfrac\",\n            mode: parser.mode,\n            continued: funcName === \"\\\\cfrac\",\n            numer: numer,\n            denom: denom,\n            hasBarLine: hasBarLine,\n            leftDelim: leftDelim,\n            rightDelim: rightDelim,\n            size: size,\n            barSize: null\n        };\n    },\n\n    htmlBuilder: genfrac_htmlBuilder,\n    mathmlBuilder: genfrac_mathmlBuilder\n});\n\n// Infix generalized fractions -- these are not rendered directly, but replaced\n// immediately by one of the variants above.\ndefineFunction({\n    type: \"infix\",\n    names: [\"\\\\over\", \"\\\\choose\", \"\\\\atop\", \"\\\\brace\", \"\\\\brack\"],\n    props: {\n        numArgs: 0,\n        infix: true\n    },\n    handler: function handler(_ref2) {\n        var parser = _ref2.parser,\n            funcName = _ref2.funcName,\n            token = _ref2.token;\n\n        var replaceWith = void 0;\n        switch (funcName) {\n            case \"\\\\over\":\n                replaceWith = \"\\\\frac\";\n                break;\n            case \"\\\\choose\":\n                replaceWith = \"\\\\binom\";\n                break;\n            case \"\\\\atop\":\n                replaceWith = \"\\\\\\\\atopfrac\";\n                break;\n            case \"\\\\brace\":\n                replaceWith = \"\\\\\\\\bracefrac\";\n                break;\n            case \"\\\\brack\":\n                replaceWith = \"\\\\\\\\brackfrac\";\n                break;\n            default:\n                throw new Error(\"Unrecognized infix genfrac command\");\n        }\n        return {\n            type: \"infix\",\n            mode: parser.mode,\n            replaceWith: replaceWith,\n            token: token\n        };\n    }\n});\n\nvar stylArray = [\"display\", \"text\", \"script\", \"scriptscript\"];\n\nvar delimFromValue = function delimFromValue(delimString) {\n    var delim = null;\n    if (delimString.length > 0) {\n        delim = delimString;\n        delim = delim === \".\" ? null : delim;\n    }\n    return delim;\n};\n\ndefineFunction({\n    type: \"genfrac\",\n    names: [\"\\\\genfrac\"],\n    props: {\n        numArgs: 6,\n        greediness: 6,\n        argTypes: [\"math\", \"math\", \"size\", \"text\", \"math\", \"math\"]\n    },\n    handler: function handler(_ref3, args) {\n        var parser = _ref3.parser;\n\n        var numer = args[4];\n        var denom = args[5];\n\n        // Look into the parse nodes to get the desired delimiters.\n        var leftNode = checkNodeType(args[0], \"ordgroup\");\n        if (leftNode) {\n            leftNode = assertAtomFamily(leftNode.body[0], \"open\");\n        } else {\n            leftNode = assertAtomFamily(args[0], \"open\");\n        }\n        var leftDelim = delimFromValue(leftNode.text);\n\n        var rightNode = checkNodeType(args[1], \"ordgroup\");\n        if (rightNode) {\n            rightNode = assertAtomFamily(rightNode.body[0], \"close\");\n        } else {\n            rightNode = assertAtomFamily(args[1], \"close\");\n        }\n        var rightDelim = delimFromValue(rightNode.text);\n\n        var barNode = assertNodeType(args[2], \"size\");\n        var hasBarLine = void 0;\n        var barSize = null;\n        if (barNode.isBlank) {\n            // \\genfrac acts differently than \\above.\n            // \\genfrac treats an empty size group as a signal to use a\n            // standard bar size. \\above would see size = 0 and omit the bar.\n            hasBarLine = true;\n        } else {\n            barSize = barNode.value;\n            hasBarLine = barSize.number > 0;\n        }\n\n        // Find out if we want displaystyle, textstyle, etc.\n        var size = \"auto\";\n        var styl = checkNodeType(args[3], \"ordgroup\");\n        if (styl) {\n            if (styl.body.length > 0) {\n                var textOrd = assertNodeType(styl.body[0], \"textord\");\n                size = stylArray[Number(textOrd.text)];\n            }\n        } else {\n            styl = assertNodeType(args[3], \"textord\");\n            size = stylArray[Number(styl.text)];\n        }\n\n        return {\n            type: \"genfrac\",\n            mode: parser.mode,\n            numer: numer,\n            denom: denom,\n            continued: false,\n            hasBarLine: hasBarLine,\n            barSize: barSize,\n            leftDelim: leftDelim,\n            rightDelim: rightDelim,\n            size: size\n        };\n    },\n\n\n    htmlBuilder: genfrac_htmlBuilder,\n    mathmlBuilder: genfrac_mathmlBuilder\n});\n\n// \\above is an infix fraction that also defines a fraction bar size.\ndefineFunction({\n    type: \"infix\",\n    names: [\"\\\\above\"],\n    props: {\n        numArgs: 1,\n        argTypes: [\"size\"],\n        infix: true\n    },\n    handler: function handler(_ref4, args) {\n        var parser = _ref4.parser,\n            funcName = _ref4.funcName,\n            token = _ref4.token;\n\n        return {\n            type: \"infix\",\n            mode: parser.mode,\n            replaceWith: \"\\\\\\\\abovefrac\",\n            size: assertNodeType(args[0], \"size\").value,\n            token: token\n        };\n    }\n});\n\ndefineFunction({\n    type: \"genfrac\",\n    names: [\"\\\\\\\\abovefrac\"],\n    props: {\n        numArgs: 3,\n        argTypes: [\"math\", \"size\", \"math\"]\n    },\n    handler: function handler(_ref5, args) {\n        var parser = _ref5.parser,\n            funcName = _ref5.funcName;\n\n        var numer = args[0];\n        var barSize = assert(assertNodeType(args[1], \"infix\").size);\n        var denom = args[2];\n\n        var hasBarLine = barSize.number > 0;\n        return {\n            type: \"genfrac\",\n            mode: parser.mode,\n            numer: numer,\n            denom: denom,\n            continued: false,\n            hasBarLine: hasBarLine,\n            barSize: barSize,\n            leftDelim: null,\n            rightDelim: null,\n            size: \"auto\"\n        };\n    },\n\n    htmlBuilder: genfrac_htmlBuilder,\n    mathmlBuilder: genfrac_mathmlBuilder\n});\n// CONCATENATED MODULE: ./src/functions/horizBrace.js\n\n\n\n\n\n\n\n\n\n\n// NOTE: Unlike most `htmlBuilder`s, this one handles not only \"horizBrace\", but\n// also \"supsub\" since an over/underbrace can affect super/subscripting.\nvar horizBrace_htmlBuilder = function htmlBuilder(grp, options) {\n    var style = options.style;\n\n    // Pull out the `ParseNode<\"horizBrace\">` if `grp` is a \"supsub\" node.\n    var supSubGroup = void 0;\n    var group = void 0;\n    var supSub = checkNodeType(grp, \"supsub\");\n    if (supSub) {\n        // Ref: LaTeX source2e: }}}}\\limits}\n        // i.e. LaTeX treats the brace similar to an op and passes it\n        // with \\limits, so we need to assign supsub style.\n        supSubGroup = supSub.sup ? buildHTML_buildGroup(supSub.sup, options.havingStyle(style.sup()), options) : buildHTML_buildGroup(supSub.sub, options.havingStyle(style.sub()), options);\n        group = assertNodeType(supSub.base, \"horizBrace\");\n    } else {\n        group = assertNodeType(grp, \"horizBrace\");\n    }\n\n    // Build the base group\n    var body = buildHTML_buildGroup(group.base, options.havingBaseStyle(src_Style.DISPLAY));\n\n    // Create the stretchy element\n    var braceBody = stretchy.svgSpan(group, options);\n\n    // Generate the vlist, with the appropriate kerns        ┏━━━━━━━━┓\n    // This first vlist contains the content and the brace:   equation\n    var vlist = void 0;\n    if (group.isOver) {\n        vlist = buildCommon.makeVList({\n            positionType: \"firstBaseline\",\n            children: [{ type: \"elem\", elem: body }, { type: \"kern\", size: 0.1 }, { type: \"elem\", elem: braceBody }]\n        }, options);\n        // $FlowFixMe: Replace this with passing \"svg-align\" into makeVList.\n        vlist.children[0].children[0].children[1].classes.push(\"svg-align\");\n    } else {\n        vlist = buildCommon.makeVList({\n            positionType: \"bottom\",\n            positionData: body.depth + 0.1 + braceBody.height,\n            children: [{ type: \"elem\", elem: braceBody }, { type: \"kern\", size: 0.1 }, { type: \"elem\", elem: body }]\n        }, options);\n        // $FlowFixMe: Replace this with passing \"svg-align\" into makeVList.\n        vlist.children[0].children[0].children[0].classes.push(\"svg-align\");\n    }\n\n    if (supSubGroup) {\n        // To write the supsub, wrap the first vlist in another vlist:\n        // They can't all go in the same vlist, because the note might be\n        // wider than the equation. We want the equation to control the\n        // brace width.\n\n        //      note          long note           long note\n        //   ┏━━━━━━━━┓   or    ┏━━━┓     not    ┏━━━━━━━━━┓\n        //    equation           eqn                 eqn\n\n        var vSpan = buildCommon.makeSpan([\"mord\", group.isOver ? \"mover\" : \"munder\"], [vlist], options);\n\n        if (group.isOver) {\n            vlist = buildCommon.makeVList({\n                positionType: \"firstBaseline\",\n                children: [{ type: \"elem\", elem: vSpan }, { type: \"kern\", size: 0.2 }, { type: \"elem\", elem: supSubGroup }]\n            }, options);\n        } else {\n            vlist = buildCommon.makeVList({\n                positionType: \"bottom\",\n                positionData: vSpan.depth + 0.2 + supSubGroup.height + supSubGroup.depth,\n                children: [{ type: \"elem\", elem: supSubGroup }, { type: \"kern\", size: 0.2 }, { type: \"elem\", elem: vSpan }]\n            }, options);\n        }\n    }\n\n    return buildCommon.makeSpan([\"mord\", group.isOver ? \"mover\" : \"munder\"], [vlist], options);\n};\n\nvar horizBrace_mathmlBuilder = function mathmlBuilder(group, options) {\n    var accentNode = stretchy.mathMLnode(group.label);\n    return new mathMLTree.MathNode(group.isOver ? \"mover\" : \"munder\", [buildMathML_buildGroup(group.base, options), accentNode]);\n};\n\n// Horizontal stretchy braces\ndefineFunction({\n    type: \"horizBrace\",\n    names: [\"\\\\overbrace\", \"\\\\underbrace\"],\n    props: {\n        numArgs: 1\n    },\n    handler: function handler(_ref, args) {\n        var parser = _ref.parser,\n            funcName = _ref.funcName;\n\n        return {\n            type: \"horizBrace\",\n            mode: parser.mode,\n            label: funcName,\n            isOver: /^\\\\over/.test(funcName),\n            base: args[0]\n        };\n    },\n\n    htmlBuilder: horizBrace_htmlBuilder,\n    mathmlBuilder: horizBrace_mathmlBuilder\n});\n// CONCATENATED MODULE: ./src/functions/href.js\n\n\n\n\n\n\n\n\n\ndefineFunction({\n    type: \"href\",\n    names: [\"\\\\href\"],\n    props: {\n        numArgs: 2,\n        argTypes: [\"url\", \"original\"],\n        allowedInText: true\n    },\n    handler: function handler(_ref, args) {\n        var parser = _ref.parser;\n\n        var body = args[1];\n        var href = assertNodeType(args[0], \"url\").url;\n        return {\n            type: \"href\",\n            mode: parser.mode,\n            href: href,\n            body: defineFunction_ordargument(body)\n        };\n    },\n    htmlBuilder: function htmlBuilder(group, options) {\n        var elements = buildHTML_buildExpression(group.body, options, false);\n        return buildCommon.makeAnchor(group.href, [], elements, options);\n    },\n    mathmlBuilder: function mathmlBuilder(group, options) {\n        var math = buildExpressionRow(group.body, options);\n        assertType(math, mathMLTree_MathNode).setAttribute(\"href\", group.href);\n        return math;\n    }\n});\n\ndefineFunction({\n    type: \"href\",\n    names: [\"\\\\url\"],\n    props: {\n        numArgs: 1,\n        argTypes: [\"url\"],\n        allowedInText: true\n    },\n    handler: function handler(_ref2, args) {\n        var parser = _ref2.parser;\n\n        var href = assertNodeType(args[0], \"url\").url;\n        var chars = [];\n        for (var i = 0; i < href.length; i++) {\n            var c = href[i];\n            if (c === \"~\") {\n                c = \"\\\\textasciitilde\";\n            }\n            chars.push({\n                type: \"textord\",\n                mode: \"text\",\n                text: c\n            });\n        }\n        var body = {\n            type: \"text\",\n            mode: parser.mode,\n            font: \"\\\\texttt\",\n            body: chars\n        };\n        return {\n            type: \"href\",\n            mode: parser.mode,\n            href: href,\n            body: defineFunction_ordargument(body)\n        };\n    }\n});\n// CONCATENATED MODULE: ./src/functions/htmlmathml.js\n\n\n\n\n\n\ndefineFunction({\n    type: \"htmlmathml\",\n    names: [\"\\\\html@mathml\"],\n    props: {\n        numArgs: 2,\n        allowedInText: true\n    },\n    handler: function handler(_ref, args) {\n        var parser = _ref.parser;\n\n        return {\n            type: \"htmlmathml\",\n            mode: parser.mode,\n            html: defineFunction_ordargument(args[0]),\n            mathml: defineFunction_ordargument(args[1])\n        };\n    },\n    htmlBuilder: function htmlBuilder(group, options) {\n        var elements = buildHTML_buildExpression(group.html, options, false);\n        return buildCommon.makeFragment(elements);\n    },\n    mathmlBuilder: function mathmlBuilder(group, options) {\n        return buildExpressionRow(group.mathml, options);\n    }\n});\n// CONCATENATED MODULE: ./src/functions/kern.js\n\n// Horizontal spacing commands\n\n\n\n\n\n\n\n// TODO: \\hskip and \\mskip should support plus and minus in lengths\n\ndefineFunction({\n    type: \"kern\",\n    names: [\"\\\\kern\", \"\\\\mkern\", \"\\\\hskip\", \"\\\\mskip\"],\n    props: {\n        numArgs: 1,\n        argTypes: [\"size\"],\n        allowedInText: true\n    },\n    handler: function handler(_ref, args) {\n        var parser = _ref.parser,\n            funcName = _ref.funcName;\n\n        var size = assertNodeType(args[0], \"size\");\n        if (parser.settings.strict) {\n            var mathFunction = funcName[1] === 'm'; // \\mkern, \\mskip\n            var muUnit = size.value.unit === 'mu';\n            if (mathFunction) {\n                if (!muUnit) {\n                    parser.settings.reportNonstrict(\"mathVsTextUnits\", \"LaTeX's \" + funcName + \" supports only mu units, \" + (\"not \" + size.value.unit + \" units\"));\n                }\n                if (parser.mode !== \"math\") {\n                    parser.settings.reportNonstrict(\"mathVsTextUnits\", \"LaTeX's \" + funcName + \" works only in math mode\");\n                }\n            } else {\n                // !mathFunction\n                if (muUnit) {\n                    parser.settings.reportNonstrict(\"mathVsTextUnits\", \"LaTeX's \" + funcName + \" doesn't support mu units\");\n                }\n            }\n        }\n        return {\n            type: \"kern\",\n            mode: parser.mode,\n            dimension: size.value\n        };\n    },\n    htmlBuilder: function htmlBuilder(group, options) {\n        return buildCommon.makeGlue(group.dimension, options);\n    },\n    mathmlBuilder: function mathmlBuilder(group, options) {\n        var dimension = units_calculateSize(group.dimension, options);\n        return new mathMLTree.SpaceNode(dimension);\n    }\n});\n// CONCATENATED MODULE: ./src/functions/lap.js\n\n// Horizontal overlap functions\n\n\n\n\n\n\n\ndefineFunction({\n    type: \"lap\",\n    names: [\"\\\\mathllap\", \"\\\\mathrlap\", \"\\\\mathclap\"],\n    props: {\n        numArgs: 1,\n        allowedInText: true\n    },\n    handler: function handler(_ref, args) {\n        var parser = _ref.parser,\n            funcName = _ref.funcName;\n\n        var body = args[0];\n        return {\n            type: \"lap\",\n            mode: parser.mode,\n            alignment: funcName.slice(5),\n            body: body\n        };\n    },\n    htmlBuilder: function htmlBuilder(group, options) {\n        // mathllap, mathrlap, mathclap\n        var inner = void 0;\n        if (group.alignment === \"clap\") {\n            // ref: https://www.math.lsu.edu/~aperlis/publications/mathclap/\n            inner = buildCommon.makeSpan([], [buildHTML_buildGroup(group.body, options)]);\n            // wrap, since CSS will center a .clap > .inner > span\n            inner = buildCommon.makeSpan([\"inner\"], [inner], options);\n        } else {\n            inner = buildCommon.makeSpan([\"inner\"], [buildHTML_buildGroup(group.body, options)]);\n        }\n        var fix = buildCommon.makeSpan([\"fix\"], []);\n        var node = buildCommon.makeSpan([group.alignment], [inner, fix], options);\n\n        // At this point, we have correctly set horizontal alignment of the\n        // two items involved in the lap.\n        // Next, use a strut to set the height of the HTML bounding box.\n        // Otherwise, a tall argument may be misplaced.\n        var strut = buildCommon.makeSpan([\"strut\"]);\n        strut.style.height = node.height + node.depth + \"em\";\n        strut.style.verticalAlign = -node.depth + \"em\";\n        node.children.unshift(strut);\n\n        // Next, prevent vertical misplacement when next to something tall.\n        node = buildCommon.makeVList({\n            positionType: \"firstBaseline\",\n            children: [{ type: \"elem\", elem: node }]\n        }, options);\n\n        // Get the horizontal spacing correct relative to adjacent items.\n        return buildCommon.makeSpan([\"mord\"], [node], options);\n    },\n    mathmlBuilder: function mathmlBuilder(group, options) {\n        // mathllap, mathrlap, mathclap\n        var node = new mathMLTree.MathNode(\"mpadded\", [buildMathML_buildGroup(group.body, options)]);\n\n        if (group.alignment !== \"rlap\") {\n            var offset = group.alignment === \"llap\" ? \"-1\" : \"-0.5\";\n            node.setAttribute(\"lspace\", offset + \"width\");\n        }\n        node.setAttribute(\"width\", \"0px\");\n\n        return node;\n    }\n});\n// CONCATENATED MODULE: ./src/functions/math.js\n\n\n\n// Switching from text mode back to math mode\ndefineFunction({\n    type: \"styling\",\n    names: [\"\\\\(\", \"$\"],\n    props: {\n        numArgs: 0,\n        allowedInText: true,\n        allowedInMath: false,\n        consumeMode: \"math\"\n    },\n    handler: function handler(_ref, args) {\n        var funcName = _ref.funcName,\n            parser = _ref.parser;\n\n        var outerMode = parser.mode;\n        parser.switchMode(\"math\");\n        var close = funcName === \"\\\\(\" ? \"\\\\)\" : \"$\";\n        var body = parser.parseExpression(false, close);\n        // We can't expand the next symbol after the closing $ until after\n        // switching modes back.  So don't consume within expect.\n        parser.expect(close, false);\n        parser.switchMode(outerMode);\n        parser.consume();\n        return {\n            type: \"styling\",\n            mode: parser.mode,\n            style: \"text\",\n            body: body\n        };\n    }\n});\n\n// Check for extra closing math delimiters\ndefineFunction({\n    type: \"text\", // Doesn't matter what this is.\n    names: [\"\\\\)\", \"\\\\]\"],\n    props: {\n        numArgs: 0,\n        allowedInText: true,\n        allowedInMath: false\n    },\n    handler: function handler(context, args) {\n        throw new src_ParseError(\"Mismatched \" + context.funcName);\n    }\n});\n// CONCATENATED MODULE: ./src/functions/mathchoice.js\n\n\n\n\n\n\n\nvar mathchoice_chooseMathStyle = function chooseMathStyle(group, options) {\n    switch (options.style.size) {\n        case src_Style.DISPLAY.size:\n            return group.display;\n        case src_Style.TEXT.size:\n            return group.text;\n        case src_Style.SCRIPT.size:\n            return group.script;\n        case src_Style.SCRIPTSCRIPT.size:\n            return group.scriptscript;\n        default:\n            return group.text;\n    }\n};\n\ndefineFunction({\n    type: \"mathchoice\",\n    names: [\"\\\\mathchoice\"],\n    props: {\n        numArgs: 4\n    },\n    handler: function handler(_ref, args) {\n        var parser = _ref.parser;\n\n        return {\n            type: \"mathchoice\",\n            mode: parser.mode,\n            display: defineFunction_ordargument(args[0]),\n            text: defineFunction_ordargument(args[1]),\n            script: defineFunction_ordargument(args[2]),\n            scriptscript: defineFunction_ordargument(args[3])\n        };\n    },\n    htmlBuilder: function htmlBuilder(group, options) {\n        var body = mathchoice_chooseMathStyle(group, options);\n        var elements = buildHTML_buildExpression(body, options, false);\n        return buildCommon.makeFragment(elements);\n    },\n    mathmlBuilder: function mathmlBuilder(group, options) {\n        var body = mathchoice_chooseMathStyle(group, options);\n        return buildExpressionRow(body, options);\n    }\n});\n// CONCATENATED MODULE: ./src/functions/op.js\n\n// Limits, symbols\n\n\n\n\n\n\n\n\n\n\n\n// NOTE: Unlike most `htmlBuilder`s, this one handles not only \"op\", but also\n// \"supsub\" since some of them (like \\int) can affect super/subscripting.\nvar op_htmlBuilder = function htmlBuilder(grp, options) {\n    // Operators are handled in the TeXbook pg. 443-444, rule 13(a).\n    var supGroup = void 0;\n    var subGroup = void 0;\n    var hasLimits = false;\n    var group = void 0;\n    var supSub = checkNodeType(grp, \"supsub\");\n    if (supSub) {\n        // If we have limits, supsub will pass us its group to handle. Pull\n        // out the superscript and subscript and set the group to the op in\n        // its base.\n        supGroup = supSub.sup;\n        subGroup = supSub.sub;\n        group = assertNodeType(supSub.base, \"op\");\n        hasLimits = true;\n    } else {\n        group = assertNodeType(grp, \"op\");\n    }\n\n    var style = options.style;\n\n    // Most operators have a large successor symbol, but these don't.\n    var noSuccessor = [\"\\\\smallint\"];\n\n    var large = false;\n    if (style.size === src_Style.DISPLAY.size && group.symbol && !utils.contains(noSuccessor, group.name)) {\n\n        // Most symbol operators get larger in displaystyle (rule 13)\n        large = true;\n    }\n\n    var base = void 0;\n    if (group.symbol) {\n        // If this is a symbol, create the symbol.\n        var fontName = large ? \"Size2-Regular\" : \"Size1-Regular\";\n\n        var stash = \"\";\n        if (group.name === \"\\\\oiint\" || group.name === \"\\\\oiiint\") {\n            // No font glyphs yet, so use a glyph w/o the oval.\n            // TODO: When font glyphs are available, delete this code.\n            stash = group.name.substr(1);\n            // $FlowFixMe\n            group.name = stash === \"oiint\" ? \"\\\\iint\" : \"\\\\iiint\";\n        }\n\n        base = buildCommon.makeSymbol(group.name, fontName, \"math\", options, [\"mop\", \"op-symbol\", large ? \"large-op\" : \"small-op\"]);\n\n        if (stash.length > 0) {\n            // We're in \\oiint or \\oiiint. Overlay the oval.\n            // TODO: When font glyphs are available, delete this code.\n            var italic = base.italic;\n            var oval = buildCommon.staticSvg(stash + \"Size\" + (large ? \"2\" : \"1\"), options);\n            base = buildCommon.makeVList({\n                positionType: \"individualShift\",\n                children: [{ type: \"elem\", elem: base, shift: 0 }, { type: \"elem\", elem: oval, shift: large ? 0.08 : 0 }]\n            }, options);\n            // $FlowFixMe\n            group.name = \"\\\\\" + stash;\n            base.classes.unshift(\"mop\");\n            // $FlowFixMe\n            base.italic = italic;\n        }\n    } else if (group.body) {\n        // If this is a list, compose that list.\n        var inner = buildHTML_buildExpression(group.body, options, true);\n        if (inner.length === 1 && inner[0] instanceof domTree_SymbolNode) {\n            base = inner[0];\n            base.classes[0] = \"mop\"; // replace old mclass\n        } else {\n            base = buildCommon.makeSpan([\"mop\"], inner, options);\n        }\n    } else {\n        // Otherwise, this is a text operator. Build the text from the\n        // operator's name.\n        // TODO(emily): Add a space in the middle of some of these\n        // operators, like \\limsup\n        var output = [];\n        for (var i = 1; i < group.name.length; i++) {\n            output.push(buildCommon.mathsym(group.name[i], group.mode));\n        }\n        base = buildCommon.makeSpan([\"mop\"], output, options);\n    }\n\n    // If content of op is a single symbol, shift it vertically.\n    var baseShift = 0;\n    var slant = 0;\n    if ((base instanceof domTree_SymbolNode || group.name === \"\\\\oiint\" || group.name === \"\\\\oiiint\") && !group.suppressBaseShift) {\n        // We suppress the shift of the base of \\overset and \\underset. Otherwise,\n        // shift the symbol so its center lies on the axis (rule 13). It\n        // appears that our fonts have the centers of the symbols already\n        // almost on the axis, so these numbers are very small. Note we\n        // don't actually apply this here, but instead it is used either in\n        // the vlist creation or separately when there are no limits.\n        baseShift = (base.height - base.depth) / 2 - options.fontMetrics().axisHeight;\n\n        // The slant of the symbol is just its italic correction.\n        // $FlowFixMe\n        slant = base.italic;\n    }\n\n    if (hasLimits) {\n        // IE 8 clips \\int if it is in a display: inline-block. We wrap it\n        // in a new span so it is an inline, and works.\n        base = buildCommon.makeSpan([], [base]);\n\n        var sub = void 0;\n        var sup = void 0;\n        // We manually have to handle the superscripts and subscripts. This,\n        // aside from the kern calculations, is copied from supsub.\n        if (supGroup) {\n            var elem = buildHTML_buildGroup(supGroup, options.havingStyle(style.sup()), options);\n\n            sup = {\n                elem: elem,\n                kern: Math.max(options.fontMetrics().bigOpSpacing1, options.fontMetrics().bigOpSpacing3 - elem.depth)\n            };\n        }\n\n        if (subGroup) {\n            var _elem = buildHTML_buildGroup(subGroup, options.havingStyle(style.sub()), options);\n\n            sub = {\n                elem: _elem,\n                kern: Math.max(options.fontMetrics().bigOpSpacing2, options.fontMetrics().bigOpSpacing4 - _elem.height)\n            };\n        }\n\n        // Build the final group as a vlist of the possible subscript, base,\n        // and possible superscript.\n        var finalGroup = void 0;\n        if (sup && sub) {\n            var bottom = options.fontMetrics().bigOpSpacing5 + sub.elem.height + sub.elem.depth + sub.kern + base.depth + baseShift;\n\n            finalGroup = buildCommon.makeVList({\n                positionType: \"bottom\",\n                positionData: bottom,\n                children: [{ type: \"kern\", size: options.fontMetrics().bigOpSpacing5 }, { type: \"elem\", elem: sub.elem, marginLeft: -slant + \"em\" }, { type: \"kern\", size: sub.kern }, { type: \"elem\", elem: base }, { type: \"kern\", size: sup.kern }, { type: \"elem\", elem: sup.elem, marginLeft: slant + \"em\" }, { type: \"kern\", size: options.fontMetrics().bigOpSpacing5 }]\n            }, options);\n        } else if (sub) {\n            var top = base.height - baseShift;\n\n            // Shift the limits by the slant of the symbol. Note\n            // that we are supposed to shift the limits by 1/2 of the slant,\n            // but since we are centering the limits adding a full slant of\n            // margin will shift by 1/2 that.\n            finalGroup = buildCommon.makeVList({\n                positionType: \"top\",\n                positionData: top,\n                children: [{ type: \"kern\", size: options.fontMetrics().bigOpSpacing5 }, { type: \"elem\", elem: sub.elem, marginLeft: -slant + \"em\" }, { type: \"kern\", size: sub.kern }, { type: \"elem\", elem: base }]\n            }, options);\n        } else if (sup) {\n            var _bottom = base.depth + baseShift;\n\n            finalGroup = buildCommon.makeVList({\n                positionType: \"bottom\",\n                positionData: _bottom,\n                children: [{ type: \"elem\", elem: base }, { type: \"kern\", size: sup.kern }, { type: \"elem\", elem: sup.elem, marginLeft: slant + \"em\" }, { type: \"kern\", size: options.fontMetrics().bigOpSpacing5 }]\n            }, options);\n        } else {\n            // This case probably shouldn't occur (this would mean the\n            // supsub was sending us a group with no superscript or\n            // subscript) but be safe.\n            return base;\n        }\n\n        return buildCommon.makeSpan([\"mop\", \"op-limits\"], [finalGroup], options);\n    } else {\n        if (baseShift) {\n            base.style.position = \"relative\";\n            base.style.top = baseShift + \"em\";\n        }\n\n        return base;\n    }\n};\n\nvar op_mathmlBuilder = function mathmlBuilder(group, options) {\n    var node = void 0;\n\n    // TODO(emily): handle big operators using the `largeop` attribute\n\n    if (group.symbol) {\n        // This is a symbol. Just add the symbol.\n        node = new mathMLTree_MathNode(\"mo\", [buildMathML_makeText(group.name, group.mode)]);\n    } else if (group.body) {\n        // This is an operator with children. Add them.\n        node = new mathMLTree_MathNode(\"mo\", buildMathML_buildExpression(group.body, options));\n    } else {\n        // This is a text operator. Add all of the characters from the\n        // operator's name.\n        // TODO(emily): Add a space in the middle of some of these\n        // operators, like \\limsup.\n        node = new mathMLTree_MathNode(\"mi\", [new mathMLTree_TextNode(group.name.slice(1))]);\n\n        // Append an <mo>&ApplyFunction;</mo>.\n        // ref: https://www.w3.org/TR/REC-MathML/chap3_2.html#sec3.2.4\n        var operator = new mathMLTree_MathNode(\"mo\", [buildMathML_makeText(\"\\u2061\", \"text\")]);\n\n        return newDocumentFragment([node, operator]);\n    }\n\n    return node;\n};\n\nvar singleCharBigOps = {\n    \"\\u220F\": \"\\\\prod\",\n    \"\\u2210\": \"\\\\coprod\",\n    \"\\u2211\": \"\\\\sum\",\n    \"\\u22C0\": \"\\\\bigwedge\",\n    \"\\u22C1\": \"\\\\bigvee\",\n    \"\\u22C2\": \"\\\\bigcap\",\n    \"\\u22C3\": \"\\\\bigcap\",\n    \"\\u2A00\": \"\\\\bigodot\",\n    \"\\u2A01\": \"\\\\bigoplus\",\n    \"\\u2A02\": \"\\\\bigotimes\",\n    \"\\u2A04\": \"\\\\biguplus\",\n    \"\\u2A06\": \"\\\\bigsqcup\"\n};\n\ndefineFunction({\n    type: \"op\",\n    names: [\"\\\\coprod\", \"\\\\bigvee\", \"\\\\bigwedge\", \"\\\\biguplus\", \"\\\\bigcap\", \"\\\\bigcup\", \"\\\\intop\", \"\\\\prod\", \"\\\\sum\", \"\\\\bigotimes\", \"\\\\bigoplus\", \"\\\\bigodot\", \"\\\\bigsqcup\", \"\\\\smallint\", \"\\u220F\", \"\\u2210\", \"\\u2211\", \"\\u22C0\", \"\\u22C1\", \"\\u22C2\", \"\\u22C3\", \"\\u2A00\", \"\\u2A01\", \"\\u2A02\", \"\\u2A04\", \"\\u2A06\"],\n    props: {\n        numArgs: 0\n    },\n    handler: function handler(_ref, args) {\n        var parser = _ref.parser,\n            funcName = _ref.funcName;\n\n        var fName = funcName;\n        if (fName.length === 1) {\n            fName = singleCharBigOps[fName];\n        }\n        return {\n            type: \"op\",\n            mode: parser.mode,\n            limits: true,\n            symbol: true,\n            name: fName\n        };\n    },\n    htmlBuilder: op_htmlBuilder,\n    mathmlBuilder: op_mathmlBuilder\n});\n\n// Note: calling defineFunction with a type that's already been defined only\n// works because the same htmlBuilder and mathmlBuilder are being used.\ndefineFunction({\n    type: \"op\",\n    names: [\"\\\\mathop\"],\n    props: {\n        numArgs: 1\n    },\n    handler: function handler(_ref2, args) {\n        var parser = _ref2.parser;\n\n        var body = args[0];\n        return {\n            type: \"op\",\n            mode: parser.mode,\n            limits: false,\n            symbol: false,\n            body: defineFunction_ordargument(body)\n        };\n    },\n    htmlBuilder: op_htmlBuilder,\n    mathmlBuilder: op_mathmlBuilder\n});\n\n// There are 2 flags for operators; whether they produce limits in\n// displaystyle, and whether they are symbols and should grow in\n// displaystyle. These four groups cover the four possible choices.\n\nvar singleCharIntegrals = {\n    \"\\u222B\": \"\\\\int\",\n    \"\\u222C\": \"\\\\iint\",\n    \"\\u222D\": \"\\\\iiint\",\n    \"\\u222E\": \"\\\\oint\",\n    \"\\u222F\": \"\\\\oiint\",\n    \"\\u2230\": \"\\\\oiiint\"\n};\n\ndefineFunction({\n    type: \"op\",\n    names: [\"\\\\mathop\"],\n    props: {\n        numArgs: 1\n    },\n    handler: function handler(_ref3, args) {\n        var parser = _ref3.parser;\n\n        var body = args[0];\n        return {\n            type: \"op\",\n            mode: parser.mode,\n            limits: false,\n            symbol: false,\n            body: defineFunction_ordargument(body)\n        };\n    },\n    htmlBuilder: op_htmlBuilder,\n    mathmlBuilder: op_mathmlBuilder\n});\n\n// No limits, not symbols\ndefineFunction({\n    type: \"op\",\n    names: [\"\\\\arcsin\", \"\\\\arccos\", \"\\\\arctan\", \"\\\\arctg\", \"\\\\arcctg\", \"\\\\arg\", \"\\\\ch\", \"\\\\cos\", \"\\\\cosec\", \"\\\\cosh\", \"\\\\cot\", \"\\\\cotg\", \"\\\\coth\", \"\\\\csc\", \"\\\\ctg\", \"\\\\cth\", \"\\\\deg\", \"\\\\dim\", \"\\\\exp\", \"\\\\hom\", \"\\\\ker\", \"\\\\lg\", \"\\\\ln\", \"\\\\log\", \"\\\\sec\", \"\\\\sin\", \"\\\\sinh\", \"\\\\sh\", \"\\\\tan\", \"\\\\tanh\", \"\\\\tg\", \"\\\\th\"],\n    props: {\n        numArgs: 0\n    },\n    handler: function handler(_ref4) {\n        var parser = _ref4.parser,\n            funcName = _ref4.funcName;\n\n        return {\n            type: \"op\",\n            mode: parser.mode,\n            limits: false,\n            symbol: false,\n            name: funcName\n        };\n    },\n\n    htmlBuilder: op_htmlBuilder,\n    mathmlBuilder: op_mathmlBuilder\n});\n\n// Limits, not symbols\ndefineFunction({\n    type: \"op\",\n    names: [\"\\\\det\", \"\\\\gcd\", \"\\\\inf\", \"\\\\lim\", \"\\\\max\", \"\\\\min\", \"\\\\Pr\", \"\\\\sup\"],\n    props: {\n        numArgs: 0\n    },\n    handler: function handler(_ref5) {\n        var parser = _ref5.parser,\n            funcName = _ref5.funcName;\n\n        return {\n            type: \"op\",\n            mode: parser.mode,\n            limits: true,\n            symbol: false,\n            name: funcName\n        };\n    },\n\n    htmlBuilder: op_htmlBuilder,\n    mathmlBuilder: op_mathmlBuilder\n});\n\n// No limits, symbols\ndefineFunction({\n    type: \"op\",\n    names: [\"\\\\int\", \"\\\\iint\", \"\\\\iiint\", \"\\\\oint\", \"\\\\oiint\", \"\\\\oiiint\", \"\\u222B\", \"\\u222C\", \"\\u222D\", \"\\u222E\", \"\\u222F\", \"\\u2230\"],\n    props: {\n        numArgs: 0\n    },\n    handler: function handler(_ref6) {\n        var parser = _ref6.parser,\n            funcName = _ref6.funcName;\n\n        var fName = funcName;\n        if (fName.length === 1) {\n            fName = singleCharIntegrals[fName];\n        }\n        return {\n            type: \"op\",\n            mode: parser.mode,\n            limits: false,\n            symbol: true,\n            name: fName\n        };\n    },\n\n    htmlBuilder: op_htmlBuilder,\n    mathmlBuilder: op_mathmlBuilder\n});\n// CONCATENATED MODULE: ./src/functions/operatorname.js\n\n\n\n\n\n\n\n\n// \\operatorname\n// amsopn.dtx: \\mathop{#1\\kern\\z@\\operator@font#3}\\newmcodes@\ndefineFunction({\n    type: \"operatorname\",\n    names: [\"\\\\operatorname\"],\n    props: {\n        numArgs: 1\n    },\n    handler: function handler(_ref, args) {\n        var parser = _ref.parser;\n\n        var body = args[0];\n        return {\n            type: \"operatorname\",\n            mode: parser.mode,\n            body: defineFunction_ordargument(body)\n        };\n    },\n\n    htmlBuilder: function htmlBuilder(group, options) {\n        if (group.body.length > 0) {\n            var body = group.body.map(function (child) {\n                // $FlowFixMe: Check if the node has a string `text` property.\n                var childText = child.text;\n                if (typeof childText === \"string\") {\n                    return {\n                        type: \"textord\",\n                        mode: child.mode,\n                        text: childText\n                    };\n                } else {\n                    return child;\n                }\n            });\n\n            // Consolidate function names into symbol characters.\n            var expression = buildHTML_buildExpression(body, options.withFont(\"mathrm\"), true);\n\n            for (var i = 0; i < expression.length; i++) {\n                var child = expression[i];\n                if (child instanceof domTree_SymbolNode) {\n                    // Per amsopn package,\n                    // change minus to hyphen and \\ast to asterisk\n                    child.text = child.text.replace(/\\u2212/, \"-\").replace(/\\u2217/, \"*\");\n                }\n            }\n            return buildCommon.makeSpan([\"mop\"], expression, options);\n        } else {\n            return buildCommon.makeSpan([\"mop\"], [], options);\n        }\n    },\n\n    mathmlBuilder: function mathmlBuilder(group, options) {\n        // The steps taken here are similar to the html version.\n        var expression = buildMathML_buildExpression(group.body, options.withFont(\"mathrm\"));\n\n        // Is expression a string or has it something like a fraction?\n        var isAllString = true; // default\n        for (var i = 0; i < expression.length; i++) {\n            var node = expression[i];\n            if (node instanceof mathMLTree.SpaceNode) {\n                // Do nothing\n            } else if (node instanceof mathMLTree.MathNode) {\n                switch (node.type) {\n                    case \"mi\":\n                    case \"mn\":\n                    case \"ms\":\n                    case \"mspace\":\n                    case \"mtext\":\n                        break; // Do nothing yet.\n                    case \"mo\":\n                        {\n                            var child = node.children[0];\n                            if (node.children.length === 1 && child instanceof mathMLTree.TextNode) {\n                                child.text = child.text.replace(/\\u2212/, \"-\").replace(/\\u2217/, \"*\");\n                            } else {\n                                isAllString = false;\n                            }\n                            break;\n                        }\n                    default:\n                        isAllString = false;\n                }\n            } else {\n                isAllString = false;\n            }\n        }\n\n        if (isAllString) {\n            // Write a single TextNode instead of multiple nested tags.\n            var word = expression.map(function (node) {\n                return node.toText();\n            }).join(\"\");\n            // word has already been escaped by `node.toText()`\n            expression = [new mathMLTree.TextNode(word, false)];\n        }\n\n        var identifier = new mathMLTree.MathNode(\"mi\", expression);\n        identifier.setAttribute(\"mathvariant\", \"normal\");\n\n        // \\u2061 is the same as &ApplyFunction;\n        // ref: https://www.w3schools.com/charsets/ref_html_entities_a.asp\n        var operator = new mathMLTree.MathNode(\"mo\", [buildMathML_makeText(\"\\u2061\", \"text\")]);\n\n        return mathMLTree.newDocumentFragment([identifier, operator]);\n    }\n});\n// CONCATENATED MODULE: ./src/functions/ordgroup.js\n\n\n\n\n\n\ndefineFunctionBuilders({\n    type: \"ordgroup\",\n    htmlBuilder: function htmlBuilder(group, options) {\n        return buildCommon.makeSpan([\"mord\"], buildHTML_buildExpression(group.body, options, true), options);\n    },\n    mathmlBuilder: function mathmlBuilder(group, options) {\n        return buildExpressionRow(group.body, options);\n    }\n});\n// CONCATENATED MODULE: ./src/functions/overline.js\n\n\n\n\n\n\n\ndefineFunction({\n    type: \"overline\",\n    names: [\"\\\\overline\"],\n    props: {\n        numArgs: 1\n    },\n    handler: function handler(_ref, args) {\n        var parser = _ref.parser;\n\n        var body = args[0];\n        return {\n            type: \"overline\",\n            mode: parser.mode,\n            body: body\n        };\n    },\n    htmlBuilder: function htmlBuilder(group, options) {\n        // Overlines are handled in the TeXbook pg 443, Rule 9.\n\n        // Build the inner group in the cramped style.\n        var innerGroup = buildHTML_buildGroup(group.body, options.havingCrampedStyle());\n\n        // Create the line above the body\n        var line = buildCommon.makeLineSpan(\"overline-line\", options);\n\n        // Generate the vlist, with the appropriate kerns\n        var vlist = buildCommon.makeVList({\n            positionType: \"firstBaseline\",\n            children: [{ type: \"elem\", elem: innerGroup }, { type: \"kern\", size: 3 * line.height }, { type: \"elem\", elem: line }, { type: \"kern\", size: line.height }]\n        }, options);\n\n        return buildCommon.makeSpan([\"mord\", \"overline\"], [vlist], options);\n    },\n    mathmlBuilder: function mathmlBuilder(group, options) {\n        var operator = new mathMLTree.MathNode(\"mo\", [new mathMLTree.TextNode(\"\\u203E\")]);\n        operator.setAttribute(\"stretchy\", \"true\");\n\n        var node = new mathMLTree.MathNode(\"mover\", [buildMathML_buildGroup(group.body, options), operator]);\n        node.setAttribute(\"accent\", \"true\");\n\n        return node;\n    }\n});\n// CONCATENATED MODULE: ./src/functions/phantom.js\n\n\n\n\n\n\n\ndefineFunction({\n    type: \"phantom\",\n    names: [\"\\\\phantom\"],\n    props: {\n        numArgs: 1,\n        allowedInText: true\n    },\n    handler: function handler(_ref, args) {\n        var parser = _ref.parser;\n\n        var body = args[0];\n        return {\n            type: \"phantom\",\n            mode: parser.mode,\n            body: defineFunction_ordargument(body)\n        };\n    },\n    htmlBuilder: function htmlBuilder(group, options) {\n        var elements = buildHTML_buildExpression(group.body, options.withPhantom(), false);\n\n        // \\phantom isn't supposed to affect the elements it contains.\n        // See \"color\" for more details.\n        return buildCommon.makeFragment(elements);\n    },\n    mathmlBuilder: function mathmlBuilder(group, options) {\n        var inner = buildMathML_buildExpression(group.body, options);\n        return new mathMLTree.MathNode(\"mphantom\", inner);\n    }\n});\n\ndefineFunction({\n    type: \"hphantom\",\n    names: [\"\\\\hphantom\"],\n    props: {\n        numArgs: 1,\n        allowedInText: true\n    },\n    handler: function handler(_ref2, args) {\n        var parser = _ref2.parser;\n\n        var body = args[0];\n        return {\n            type: \"hphantom\",\n            mode: parser.mode,\n            body: body\n        };\n    },\n    htmlBuilder: function htmlBuilder(group, options) {\n        var node = buildCommon.makeSpan([], [buildHTML_buildGroup(group.body, options.withPhantom())]);\n        node.height = 0;\n        node.depth = 0;\n        if (node.children) {\n            for (var i = 0; i < node.children.length; i++) {\n                node.children[i].height = 0;\n                node.children[i].depth = 0;\n            }\n        }\n\n        // See smash for comment re: use of makeVList\n        node = buildCommon.makeVList({\n            positionType: \"firstBaseline\",\n            children: [{ type: \"elem\", elem: node }]\n        }, options);\n\n        return node;\n    },\n    mathmlBuilder: function mathmlBuilder(group, options) {\n        var inner = buildMathML_buildExpression(defineFunction_ordargument(group.body), options);\n        var node = new mathMLTree.MathNode(\"mphantom\", inner);\n        node.setAttribute(\"height\", \"0px\");\n        return node;\n    }\n});\n\ndefineFunction({\n    type: \"vphantom\",\n    names: [\"\\\\vphantom\"],\n    props: {\n        numArgs: 1,\n        allowedInText: true\n    },\n    handler: function handler(_ref3, args) {\n        var parser = _ref3.parser;\n\n        var body = args[0];\n        return {\n            type: \"vphantom\",\n            mode: parser.mode,\n            body: body\n        };\n    },\n    htmlBuilder: function htmlBuilder(group, options) {\n        var inner = buildCommon.makeSpan([\"inner\"], [buildHTML_buildGroup(group.body, options.withPhantom())]);\n        var fix = buildCommon.makeSpan([\"fix\"], []);\n        return buildCommon.makeSpan([\"mord\", \"rlap\"], [inner, fix], options);\n    },\n    mathmlBuilder: function mathmlBuilder(group, options) {\n        var inner = buildMathML_buildExpression(defineFunction_ordargument(group.body), options);\n        var node = new mathMLTree.MathNode(\"mphantom\", inner);\n        node.setAttribute(\"width\", \"0px\");\n        return node;\n    }\n});\n// CONCATENATED MODULE: ./src/functions/sizing.js\n\n\n\n\n\n\n\nfunction sizingGroup(value, options, baseOptions) {\n    var inner = buildHTML_buildExpression(value, options, false);\n    var multiplier = options.sizeMultiplier / baseOptions.sizeMultiplier;\n\n    // Add size-resetting classes to the inner list and set maxFontSize\n    // manually. Handle nested size changes.\n    for (var i = 0; i < inner.length; i++) {\n        var pos = inner[i].classes.indexOf(\"sizing\");\n        if (pos < 0) {\n            Array.prototype.push.apply(inner[i].classes, options.sizingClasses(baseOptions));\n        } else if (inner[i].classes[pos + 1] === \"reset-size\" + options.size) {\n            // This is a nested size change: e.g., inner[i] is the \"b\" in\n            // `\\Huge a \\small b`. Override the old size (the `reset-` class)\n            // but not the new size.\n            inner[i].classes[pos + 1] = \"reset-size\" + baseOptions.size;\n        }\n\n        inner[i].height *= multiplier;\n        inner[i].depth *= multiplier;\n    }\n\n    return buildCommon.makeFragment(inner);\n}\n\nvar sizeFuncs = [\"\\\\tiny\", \"\\\\sixptsize\", \"\\\\scriptsize\", \"\\\\footnotesize\", \"\\\\small\", \"\\\\normalsize\", \"\\\\large\", \"\\\\Large\", \"\\\\LARGE\", \"\\\\huge\", \"\\\\Huge\"];\n\nvar sizing_htmlBuilder = function htmlBuilder(group, options) {\n    // Handle sizing operators like \\Huge. Real TeX doesn't actually allow\n    // these functions inside of math expressions, so we do some special\n    // handling.\n    var newOptions = options.havingSize(group.size);\n    return sizingGroup(group.body, newOptions, options);\n};\n\ndefineFunction({\n    type: \"sizing\",\n    names: sizeFuncs,\n    props: {\n        numArgs: 0,\n        allowedInText: true\n    },\n    handler: function handler(_ref, args) {\n        var breakOnTokenText = _ref.breakOnTokenText,\n            funcName = _ref.funcName,\n            parser = _ref.parser;\n\n        parser.consumeSpaces();\n        var body = parser.parseExpression(false, breakOnTokenText);\n\n        return {\n            type: \"sizing\",\n            mode: parser.mode,\n            // Figure out what size to use based on the list of functions above\n            size: sizeFuncs.indexOf(funcName) + 1,\n            body: body\n        };\n    },\n    htmlBuilder: sizing_htmlBuilder,\n    mathmlBuilder: function mathmlBuilder(group, options) {\n        var newOptions = options.havingSize(group.size);\n        var inner = buildMathML_buildExpression(group.body, newOptions);\n\n        var node = new mathMLTree.MathNode(\"mstyle\", inner);\n\n        // TODO(emily): This doesn't produce the correct size for nested size\n        // changes, because we don't keep state of what style we're currently\n        // in, so we can't reset the size to normal before changing it.  Now\n        // that we're passing an options parameter we should be able to fix\n        // this.\n        node.setAttribute(\"mathsize\", newOptions.sizeMultiplier + \"em\");\n\n        return node;\n    }\n});\n// CONCATENATED MODULE: ./src/functions/raisebox.js\n\n\n\n\n\n\n\n\n\n// Box manipulation\ndefineFunction({\n    type: \"raisebox\",\n    names: [\"\\\\raisebox\"],\n    props: {\n        numArgs: 2,\n        argTypes: [\"size\", \"text\"],\n        allowedInText: true\n    },\n    handler: function handler(_ref, args) {\n        var parser = _ref.parser;\n\n        var amount = assertNodeType(args[0], \"size\").value;\n        var body = args[1];\n        return {\n            type: \"raisebox\",\n            mode: parser.mode,\n            dy: amount,\n            body: body\n        };\n    },\n    htmlBuilder: function htmlBuilder(group, options) {\n        var text = {\n            type: \"text\",\n            mode: group.mode,\n            body: defineFunction_ordargument(group.body),\n            font: \"mathrm\" // simulate \\textrm\n        };\n        var sizedText = {\n            type: \"sizing\",\n            mode: group.mode,\n            body: [text],\n            size: 6 // simulate \\normalsize\n        };\n        var body = sizing_htmlBuilder(sizedText, options);\n        var dy = units_calculateSize(group.dy, options);\n        return buildCommon.makeVList({\n            positionType: \"shift\",\n            positionData: -dy,\n            children: [{ type: \"elem\", elem: body }]\n        }, options);\n    },\n    mathmlBuilder: function mathmlBuilder(group, options) {\n        var node = new mathMLTree.MathNode(\"mpadded\", [buildMathML_buildGroup(group.body, options)]);\n        var dy = group.dy.number + group.dy.unit;\n        node.setAttribute(\"voffset\", dy);\n        return node;\n    }\n});\n// CONCATENATED MODULE: ./src/functions/rule.js\n\n\n\n\n\n\ndefineFunction({\n    type: \"rule\",\n    names: [\"\\\\rule\"],\n    props: {\n        numArgs: 2,\n        numOptionalArgs: 1,\n        argTypes: [\"size\", \"size\", \"size\"]\n    },\n    handler: function handler(_ref, args, optArgs) {\n        var parser = _ref.parser;\n\n        var shift = optArgs[0];\n        var width = assertNodeType(args[0], \"size\");\n        var height = assertNodeType(args[1], \"size\");\n        return {\n            type: \"rule\",\n            mode: parser.mode,\n            shift: shift && assertNodeType(shift, \"size\").value,\n            width: width.value,\n            height: height.value\n        };\n    },\n    htmlBuilder: function htmlBuilder(group, options) {\n        // Make an empty span for the rule\n        var rule = buildCommon.makeSpan([\"mord\", \"rule\"], [], options);\n\n        // Calculate the shift, width, and height of the rule, and account for units\n        var shift = 0;\n        if (group.shift) {\n            shift = units_calculateSize(group.shift, options);\n        }\n\n        var width = units_calculateSize(group.width, options);\n        var height = units_calculateSize(group.height, options);\n\n        // Style the rule to the right size\n        rule.style.borderRightWidth = width + \"em\";\n        rule.style.borderTopWidth = height + \"em\";\n        rule.style.bottom = shift + \"em\";\n\n        // Record the height and width\n        rule.width = width;\n        rule.height = height + shift;\n        rule.depth = -shift;\n        // Font size is the number large enough that the browser will\n        // reserve at least `absHeight` space above the baseline.\n        // The 1.125 factor was empirically determined\n        rule.maxFontSize = height * 1.125 * options.sizeMultiplier;\n\n        return rule;\n    },\n    mathmlBuilder: function mathmlBuilder(group, options) {\n        // TODO(emily): Figure out if there's an actual way to draw black boxes\n        // in MathML.\n        var node = new mathMLTree.MathNode(\"mrow\");\n\n        return node;\n    }\n});\n// CONCATENATED MODULE: ./src/functions/smash.js\n\n// smash, with optional [tb], as in AMS\n\n\n\n\n\n\n\n\ndefineFunction({\n    type: \"smash\",\n    names: [\"\\\\smash\"],\n    props: {\n        numArgs: 1,\n        numOptionalArgs: 1,\n        allowedInText: true\n    },\n    handler: function handler(_ref, args, optArgs) {\n        var parser = _ref.parser;\n\n        var smashHeight = false;\n        var smashDepth = false;\n        var tbArg = optArgs[0] && assertNodeType(optArgs[0], \"ordgroup\");\n        if (tbArg) {\n            // Optional [tb] argument is engaged.\n            // ref: amsmath: \\renewcommand{\\smash}[1][tb]{%\n            //               def\\mb@t{\\ht}\\def\\mb@b{\\dp}\\def\\mb@tb{\\ht\\z@\\z@\\dp}%\n            var letter = \"\";\n            for (var i = 0; i < tbArg.body.length; ++i) {\n                var node = tbArg.body[i];\n                // $FlowFixMe: Not every node type has a `text` property.\n                letter = node.text;\n                if (letter === \"t\") {\n                    smashHeight = true;\n                } else if (letter === \"b\") {\n                    smashDepth = true;\n                } else {\n                    smashHeight = false;\n                    smashDepth = false;\n                    break;\n                }\n            }\n        } else {\n            smashHeight = true;\n            smashDepth = true;\n        }\n\n        var body = args[0];\n        return {\n            type: \"smash\",\n            mode: parser.mode,\n            body: body,\n            smashHeight: smashHeight,\n            smashDepth: smashDepth\n        };\n    },\n    htmlBuilder: function htmlBuilder(group, options) {\n        var node = buildCommon.makeSpan([\"mord\"], [buildHTML_buildGroup(group.body, options)]);\n\n        if (!group.smashHeight && !group.smashDepth) {\n            return node;\n        }\n\n        if (group.smashHeight) {\n            node.height = 0;\n            // In order to influence makeVList, we have to reset the children.\n            if (node.children) {\n                for (var i = 0; i < node.children.length; i++) {\n                    node.children[i].height = 0;\n                }\n            }\n        }\n\n        if (group.smashDepth) {\n            node.depth = 0;\n            if (node.children) {\n                for (var _i = 0; _i < node.children.length; _i++) {\n                    node.children[_i].depth = 0;\n                }\n            }\n        }\n\n        // At this point, we've reset the TeX-like height and depth values.\n        // But the span still has an HTML line height.\n        // makeVList applies \"display: table-cell\", which prevents the browser\n        // from acting on that line height. So we'll call makeVList now.\n\n        return buildCommon.makeVList({\n            positionType: \"firstBaseline\",\n            children: [{ type: \"elem\", elem: node }]\n        }, options);\n    },\n    mathmlBuilder: function mathmlBuilder(group, options) {\n        var node = new mathMLTree.MathNode(\"mpadded\", [buildMathML_buildGroup(group.body, options)]);\n\n        if (group.smashHeight) {\n            node.setAttribute(\"height\", \"0px\");\n        }\n\n        if (group.smashDepth) {\n            node.setAttribute(\"depth\", \"0px\");\n        }\n\n        return node;\n    }\n});\n// CONCATENATED MODULE: ./src/functions/sqrt.js\n\n\n\n\n\n\n\n\n\n\ndefineFunction({\n    type: \"sqrt\",\n    names: [\"\\\\sqrt\"],\n    props: {\n        numArgs: 1,\n        numOptionalArgs: 1\n    },\n    handler: function handler(_ref, args, optArgs) {\n        var parser = _ref.parser;\n\n        var index = optArgs[0];\n        var body = args[0];\n        return {\n            type: \"sqrt\",\n            mode: parser.mode,\n            body: body,\n            index: index\n        };\n    },\n    htmlBuilder: function htmlBuilder(group, options) {\n        // Square roots are handled in the TeXbook pg. 443, Rule 11.\n\n        // First, we do the same steps as in overline to build the inner group\n        // and line\n        var inner = buildHTML_buildGroup(group.body, options.havingCrampedStyle());\n        if (inner.height === 0) {\n            // Render a small surd.\n            inner.height = options.fontMetrics().xHeight;\n        }\n\n        // Some groups can return document fragments.  Handle those by wrapping\n        // them in a span.\n        if (inner instanceof tree_DocumentFragment) {\n            inner = buildCommon.makeSpan([], [inner], options);\n        }\n\n        // Calculate the minimum size for the \\surd delimiter\n        var metrics = options.fontMetrics();\n        var theta = metrics.defaultRuleThickness;\n\n        var phi = theta;\n        if (options.style.id < src_Style.TEXT.id) {\n            phi = options.fontMetrics().xHeight;\n        }\n\n        // Calculate the clearance between the body and line\n        var lineClearance = theta + phi / 4;\n\n        var minDelimiterHeight = inner.height + inner.depth + lineClearance + theta;\n\n        // Create a sqrt SVG of the required minimum size\n\n        var _delimiter$sqrtImage = delimiter.sqrtImage(minDelimiterHeight, options),\n            img = _delimiter$sqrtImage.span,\n            ruleWidth = _delimiter$sqrtImage.ruleWidth,\n            advanceWidth = _delimiter$sqrtImage.advanceWidth;\n\n        var delimDepth = img.height - ruleWidth;\n\n        // Adjust the clearance based on the delimiter size\n        if (delimDepth > inner.height + inner.depth + lineClearance) {\n            lineClearance = (lineClearance + delimDepth - inner.height - inner.depth) / 2;\n        }\n\n        // Shift the sqrt image\n        var imgShift = img.height - inner.height - lineClearance - ruleWidth;\n\n        inner.style.paddingLeft = advanceWidth + \"em\";\n\n        // Overlay the image and the argument.\n        var body = buildCommon.makeVList({\n            positionType: \"firstBaseline\",\n            children: [{ type: \"elem\", elem: inner, wrapperClasses: [\"svg-align\"] }, { type: \"kern\", size: -(inner.height + imgShift) }, { type: \"elem\", elem: img }, { type: \"kern\", size: ruleWidth }]\n        }, options);\n\n        if (!group.index) {\n            return buildCommon.makeSpan([\"mord\", \"sqrt\"], [body], options);\n        } else {\n            // Handle the optional root index\n\n            // The index is always in scriptscript style\n            var newOptions = options.havingStyle(src_Style.SCRIPTSCRIPT);\n            var rootm = buildHTML_buildGroup(group.index, newOptions, options);\n\n            // The amount the index is shifted by. This is taken from the TeX\n            // source, in the definition of `\\r@@t`.\n            var toShift = 0.6 * (body.height - body.depth);\n\n            // Build a VList with the superscript shifted up correctly\n            var rootVList = buildCommon.makeVList({\n                positionType: \"shift\",\n                positionData: -toShift,\n                children: [{ type: \"elem\", elem: rootm }]\n            }, options);\n            // Add a class surrounding it so we can add on the appropriate\n            // kerning\n            var rootVListWrap = buildCommon.makeSpan([\"root\"], [rootVList]);\n\n            return buildCommon.makeSpan([\"mord\", \"sqrt\"], [rootVListWrap, body], options);\n        }\n    },\n    mathmlBuilder: function mathmlBuilder(group, options) {\n        var body = group.body,\n            index = group.index;\n\n        return index ? new mathMLTree.MathNode(\"mroot\", [buildMathML_buildGroup(body, options), buildMathML_buildGroup(index, options)]) : new mathMLTree.MathNode(\"msqrt\", [buildMathML_buildGroup(body, options)]);\n    }\n});\n// CONCATENATED MODULE: ./src/functions/styling.js\n\n\n\n\n\n\n\nvar styling_styleMap = {\n    \"display\": src_Style.DISPLAY,\n    \"text\": src_Style.TEXT,\n    \"script\": src_Style.SCRIPT,\n    \"scriptscript\": src_Style.SCRIPTSCRIPT\n};\n\ndefineFunction({\n    type: \"styling\",\n    names: [\"\\\\displaystyle\", \"\\\\textstyle\", \"\\\\scriptstyle\", \"\\\\scriptscriptstyle\"],\n    props: {\n        numArgs: 0,\n        allowedInText: true\n    },\n    handler: function handler(_ref, args) {\n        var breakOnTokenText = _ref.breakOnTokenText,\n            funcName = _ref.funcName,\n            parser = _ref.parser;\n\n        // parse out the implicit body\n        parser.consumeSpaces();\n        var body = parser.parseExpression(true, breakOnTokenText);\n\n        // TODO: Refactor to avoid duplicating styleMap in multiple places (e.g.\n        // here and in buildHTML and de-dupe the enumeration of all the styles).\n        // $FlowFixMe: The names above exactly match the styles.\n        var style = funcName.slice(1, funcName.length - 5);\n        return {\n            type: \"styling\",\n            mode: parser.mode,\n            // Figure out what style to use by pulling out the style from\n            // the function name\n            style: style,\n            body: body\n        };\n    },\n    htmlBuilder: function htmlBuilder(group, options) {\n        // Style changes are handled in the TeXbook on pg. 442, Rule 3.\n        var newStyle = styling_styleMap[group.style];\n        var newOptions = options.havingStyle(newStyle).withFont('');\n        return sizingGroup(group.body, newOptions, options);\n    },\n    mathmlBuilder: function mathmlBuilder(group, options) {\n        // Figure out what style we're changing to.\n        // TODO(kevinb): dedupe this with buildHTML.js\n        // This will be easier of handling of styling nodes is in the same file.\n        var styleMap = {\n            \"display\": src_Style.DISPLAY,\n            \"text\": src_Style.TEXT,\n            \"script\": src_Style.SCRIPT,\n            \"scriptscript\": src_Style.SCRIPTSCRIPT\n        };\n\n        var newStyle = styleMap[group.style];\n        var newOptions = options.havingStyle(newStyle);\n\n        var inner = buildMathML_buildExpression(group.body, newOptions);\n\n        var node = new mathMLTree.MathNode(\"mstyle\", inner);\n\n        var styleAttributes = {\n            \"display\": [\"0\", \"true\"],\n            \"text\": [\"0\", \"false\"],\n            \"script\": [\"1\", \"false\"],\n            \"scriptscript\": [\"2\", \"false\"]\n        };\n\n        var attr = styleAttributes[group.style];\n\n        node.setAttribute(\"scriptlevel\", attr[0]);\n        node.setAttribute(\"displaystyle\", attr[1]);\n\n        return node;\n    }\n});\n// CONCATENATED MODULE: ./src/functions/supsub.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Sometimes, groups perform special rules when they have superscripts or\n * subscripts attached to them. This function lets the `supsub` group know that\n * Sometimes, groups perform special rules when they have superscripts or\n * its inner element should handle the superscripts and subscripts instead of\n * handling them itself.\n */\nvar supsub_htmlBuilderDelegate = function htmlBuilderDelegate(group, options) {\n    var base = group.base;\n    if (!base) {\n        return null;\n    } else if (base.type === \"op\") {\n        // Operators handle supsubs differently when they have limits\n        // (e.g. `\\displaystyle\\sum_2^3`)\n        var delegate = base.limits && (options.style.size === src_Style.DISPLAY.size || base.alwaysHandleSupSub);\n        return delegate ? op_htmlBuilder : null;\n    } else if (base.type === \"accent\") {\n        return utils.isCharacterBox(base.base) ? accent_htmlBuilder : null;\n    } else if (base.type === \"horizBrace\") {\n        var isSup = !group.sub;\n        return isSup === base.isOver ? horizBrace_htmlBuilder : null;\n    } else {\n        return null;\n    }\n};\n\n// Super scripts and subscripts, whose precise placement can depend on other\n// functions that precede them.\ndefineFunctionBuilders({\n    type: \"supsub\",\n    htmlBuilder: function htmlBuilder(group, options) {\n        // Superscript and subscripts are handled in the TeXbook on page\n        // 445-446, rules 18(a-f).\n\n        // Here is where we defer to the inner group if it should handle\n        // superscripts and subscripts itself.\n        var builderDelegate = supsub_htmlBuilderDelegate(group, options);\n        if (builderDelegate) {\n            return builderDelegate(group, options);\n        }\n\n        var valueBase = group.base,\n            valueSup = group.sup,\n            valueSub = group.sub;\n\n        var base = buildHTML_buildGroup(valueBase, options);\n        var supm = void 0;\n        var subm = void 0;\n\n        var metrics = options.fontMetrics();\n\n        // Rule 18a\n        var supShift = 0;\n        var subShift = 0;\n\n        var isCharacterBox = valueBase && utils.isCharacterBox(valueBase);\n        if (valueSup) {\n            var newOptions = options.havingStyle(options.style.sup());\n            supm = buildHTML_buildGroup(valueSup, newOptions, options);\n            if (!isCharacterBox) {\n                supShift = base.height - newOptions.fontMetrics().supDrop * newOptions.sizeMultiplier / options.sizeMultiplier;\n            }\n        }\n\n        if (valueSub) {\n            var _newOptions = options.havingStyle(options.style.sub());\n            subm = buildHTML_buildGroup(valueSub, _newOptions, options);\n            if (!isCharacterBox) {\n                subShift = base.depth + _newOptions.fontMetrics().subDrop * _newOptions.sizeMultiplier / options.sizeMultiplier;\n            }\n        }\n\n        // Rule 18c\n        var minSupShift = void 0;\n        if (options.style === src_Style.DISPLAY) {\n            minSupShift = metrics.sup1;\n        } else if (options.style.cramped) {\n            minSupShift = metrics.sup3;\n        } else {\n            minSupShift = metrics.sup2;\n        }\n\n        // scriptspace is a font-size-independent size, so scale it\n        // appropriately for use as the marginRight.\n        var multiplier = options.sizeMultiplier;\n        var marginRight = 0.5 / metrics.ptPerEm / multiplier + \"em\";\n\n        var marginLeft = null;\n        if (subm) {\n            // Subscripts shouldn't be shifted by the base's italic correction.\n            // Account for that by shifting the subscript back the appropriate\n            // amount. Note we only do this when the base is a single symbol.\n            var isOiint = group.base && group.base.type === \"op\" && group.base.name && (group.base.name === \"\\\\oiint\" || group.base.name === \"\\\\oiiint\");\n            if (base instanceof domTree_SymbolNode || isOiint) {\n                // $FlowFixMe\n                marginLeft = -base.italic + \"em\";\n            }\n        }\n\n        var supsub = void 0;\n        if (supm && subm) {\n            supShift = Math.max(supShift, minSupShift, supm.depth + 0.25 * metrics.xHeight);\n            subShift = Math.max(subShift, metrics.sub2);\n\n            var ruleWidth = metrics.defaultRuleThickness;\n\n            // Rule 18e\n            var maxWidth = 4 * ruleWidth;\n            if (supShift - supm.depth - (subm.height - subShift) < maxWidth) {\n                subShift = maxWidth - (supShift - supm.depth) + subm.height;\n                var psi = 0.8 * metrics.xHeight - (supShift - supm.depth);\n                if (psi > 0) {\n                    supShift += psi;\n                    subShift -= psi;\n                }\n            }\n\n            var vlistElem = [{ type: \"elem\", elem: subm, shift: subShift, marginRight: marginRight,\n                marginLeft: marginLeft }, { type: \"elem\", elem: supm, shift: -supShift, marginRight: marginRight }];\n\n            supsub = buildCommon.makeVList({\n                positionType: \"individualShift\",\n                children: vlistElem\n            }, options);\n        } else if (subm) {\n            // Rule 18b\n            subShift = Math.max(subShift, metrics.sub1, subm.height - 0.8 * metrics.xHeight);\n\n            var _vlistElem = [{ type: \"elem\", elem: subm, marginLeft: marginLeft, marginRight: marginRight }];\n\n            supsub = buildCommon.makeVList({\n                positionType: \"shift\",\n                positionData: subShift,\n                children: _vlistElem\n            }, options);\n        } else if (supm) {\n            // Rule 18c, d\n            supShift = Math.max(supShift, minSupShift, supm.depth + 0.25 * metrics.xHeight);\n\n            supsub = buildCommon.makeVList({\n                positionType: \"shift\",\n                positionData: -supShift,\n                children: [{ type: \"elem\", elem: supm, marginRight: marginRight }]\n            }, options);\n        } else {\n            throw new Error(\"supsub must have either sup or sub.\");\n        }\n\n        // Wrap the supsub vlist in a span.msupsub to reset text-align.\n        var mclass = getTypeOfDomTree(base, \"right\") || \"mord\";\n        return buildCommon.makeSpan([mclass], [base, buildCommon.makeSpan([\"msupsub\"], [supsub])], options);\n    },\n    mathmlBuilder: function mathmlBuilder(group, options) {\n        // Is the inner group a relevant horizonal brace?\n        var isBrace = false;\n        var isOver = void 0;\n        var isSup = void 0;\n\n        var horizBrace = checkNodeType(group.base, \"horizBrace\");\n        if (horizBrace) {\n            isSup = !!group.sup;\n            if (isSup === horizBrace.isOver) {\n                isBrace = true;\n                isOver = horizBrace.isOver;\n            }\n        }\n\n        var children = [buildMathML_buildGroup(group.base, options)];\n\n        if (group.sub) {\n            children.push(buildMathML_buildGroup(group.sub, options));\n        }\n\n        if (group.sup) {\n            children.push(buildMathML_buildGroup(group.sup, options));\n        }\n\n        var nodeType = void 0;\n        if (isBrace) {\n            nodeType = isOver ? \"mover\" : \"munder\";\n        } else if (!group.sub) {\n            var base = group.base;\n            if (base && base.type === \"op\" && base.limits && options.style === src_Style.DISPLAY) {\n                nodeType = \"mover\";\n            } else {\n                nodeType = \"msup\";\n            }\n        } else if (!group.sup) {\n            var _base = group.base;\n            if (_base && _base.type === \"op\" && _base.limits && options.style === src_Style.DISPLAY) {\n                nodeType = \"munder\";\n            } else {\n                nodeType = \"msub\";\n            }\n        } else {\n            var _base2 = group.base;\n            if (_base2 && _base2.type === \"op\" && _base2.limits && options.style === src_Style.DISPLAY) {\n                nodeType = \"munderover\";\n            } else {\n                nodeType = \"msubsup\";\n            }\n        }\n\n        var node = new mathMLTree.MathNode(nodeType, children);\n\n        return node;\n    }\n});\n// CONCATENATED MODULE: ./src/functions/symbolsOp.js\n\n\n\n\n\n\n// Operator ParseNodes created in Parser.js from symbol Groups in src/symbols.js.\n\ndefineFunctionBuilders({\n    type: \"atom\",\n    htmlBuilder: function htmlBuilder(group, options) {\n        return buildCommon.mathsym(group.text, group.mode, options, [\"m\" + group.family]);\n    },\n    mathmlBuilder: function mathmlBuilder(group, options) {\n        var node = new mathMLTree.MathNode(\"mo\", [buildMathML_makeText(group.text, group.mode)]);\n        if (group.family === \"bin\") {\n            var variant = buildMathML_getVariant(group, options);\n            if (variant === \"bold-italic\") {\n                node.setAttribute(\"mathvariant\", variant);\n            }\n        } else if (group.family === \"punct\") {\n            node.setAttribute(\"separator\", \"true\");\n        }\n        return node;\n    }\n});\n// CONCATENATED MODULE: ./src/functions/symbolsOrd.js\n\n\n\n\n\n\n// \"mathord\" and \"textord\" ParseNodes created in Parser.js from symbol Groups in\n// src/symbols.js.\n\nvar defaultVariant = {\n    \"mi\": \"italic\",\n    \"mn\": \"normal\",\n    \"mtext\": \"normal\"\n};\n\ndefineFunctionBuilders({\n    type: \"mathord\",\n    htmlBuilder: function htmlBuilder(group, options) {\n        return buildCommon.makeOrd(group, options, \"mathord\");\n    },\n    mathmlBuilder: function mathmlBuilder(group, options) {\n        var node = new mathMLTree.MathNode(\"mi\", [buildMathML_makeText(group.text, group.mode, options)]);\n\n        var variant = buildMathML_getVariant(group, options) || \"italic\";\n        if (variant !== defaultVariant[node.type]) {\n            node.setAttribute(\"mathvariant\", variant);\n        }\n        return node;\n    }\n});\n\ndefineFunctionBuilders({\n    type: \"textord\",\n    htmlBuilder: function htmlBuilder(group, options) {\n        return buildCommon.makeOrd(group, options, \"textord\");\n    },\n    mathmlBuilder: function mathmlBuilder(group, options) {\n        var text = buildMathML_makeText(group.text, group.mode, options);\n        var variant = buildMathML_getVariant(group, options) || \"normal\";\n\n        var node = void 0;\n        if (group.mode === 'text') {\n            node = new mathMLTree.MathNode(\"mtext\", [text]);\n        } else if (/[0-9]/.test(group.text)) {\n            // TODO(kevinb) merge adjacent <mn> nodes\n            // do it as a post processing step\n            node = new mathMLTree.MathNode(\"mn\", [text]);\n        } else if (group.text === \"\\\\prime\") {\n            node = new mathMLTree.MathNode(\"mo\", [text]);\n        } else {\n            node = new mathMLTree.MathNode(\"mi\", [text]);\n        }\n        if (variant !== defaultVariant[node.type]) {\n            node.setAttribute(\"mathvariant\", variant);\n        }\n\n        return node;\n    }\n});\n// CONCATENATED MODULE: ./src/functions/symbolsSpacing.js\n\n\n\n\n\n// ParseNode<\"spacing\"> created in Parser.js from the \"spacing\" symbol Groups in\n// src/symbols.js.\ndefineFunctionBuilders({\n    type: \"spacing\",\n    htmlBuilder: function htmlBuilder(group, options) {\n        if (buildCommon.regularSpace.hasOwnProperty(group.text)) {\n            var className = buildCommon.regularSpace[group.text].className || \"\";\n            // Spaces are generated by adding an actual space. Each of these\n            // things has an entry in the symbols table, so these will be turned\n            // into appropriate outputs.\n            if (group.mode === \"text\") {\n                var ord = buildCommon.makeOrd(group, options, \"textord\");\n                ord.classes.push(className);\n                return ord;\n            } else {\n                return buildCommon.makeSpan([\"mspace\", className], [buildCommon.mathsym(group.text, group.mode, options)], options);\n            }\n        } else if (buildCommon.cssSpace.hasOwnProperty(group.text)) {\n            // Spaces based on just a CSS class.\n            return buildCommon.makeSpan([\"mspace\", buildCommon.cssSpace[group.text]], [], options);\n        } else {\n            throw new src_ParseError(\"Unknown type of space \\\"\" + group.text + \"\\\"\");\n        }\n    },\n    mathmlBuilder: function mathmlBuilder(group, options) {\n        var node = void 0;\n\n        if (buildCommon.regularSpace.hasOwnProperty(group.text)) {\n            node = new mathMLTree.MathNode(\"mtext\", [new mathMLTree.TextNode(\"\\xA0\")]);\n        } else if (buildCommon.cssSpace.hasOwnProperty(group.text)) {\n            // CSS-based MathML spaces (\\nobreak, \\allowbreak) are ignored\n            return new mathMLTree.MathNode(\"mspace\");\n        } else {\n            throw new src_ParseError(\"Unknown type of space \\\"\" + group.text + \"\\\"\");\n        }\n\n        return node;\n    }\n});\n// CONCATENATED MODULE: ./src/functions/tag.js\n\n\n\n\n\ndefineFunctionBuilders({\n    type: \"tag\",\n    mathmlBuilder: function mathmlBuilder(group, options) {\n        var table = new mathMLTree.MathNode(\"mtable\", [new mathMLTree.MathNode(\"mlabeledtr\", [new mathMLTree.MathNode(\"mtd\", [buildExpressionRow(group.tag, options)]), new mathMLTree.MathNode(\"mtd\", [buildExpressionRow(group.body, options)])])]);\n        table.setAttribute(\"side\", \"right\");\n        return table;\n    }\n});\n// CONCATENATED MODULE: ./src/functions/text.js\n\n\n\n\n\n\n// Non-mathy text, possibly in a font\nvar textFontFamilies = {\n    \"\\\\text\": undefined, \"\\\\textrm\": \"textrm\", \"\\\\textsf\": \"textsf\",\n    \"\\\\texttt\": \"texttt\", \"\\\\textnormal\": \"textrm\"\n};\n\nvar textFontWeights = {\n    \"\\\\textbf\": \"textbf\"\n};\n\nvar textFontShapes = {\n    \"\\\\textit\": \"textit\"\n};\n\nvar optionsWithFont = function optionsWithFont(group, options) {\n    var font = group.font;\n    // Checks if the argument is a font family or a font style.\n    if (!font) {\n        return options;\n    } else if (textFontFamilies[font]) {\n        return options.withTextFontFamily(textFontFamilies[font]);\n    } else if (textFontWeights[font]) {\n        return options.withTextFontWeight(textFontWeights[font]);\n    } else {\n        return options.withTextFontShape(textFontShapes[font]);\n    }\n};\n\ndefineFunction({\n    type: \"text\",\n    names: [\n    // Font families\n    \"\\\\text\", \"\\\\textrm\", \"\\\\textsf\", \"\\\\texttt\", \"\\\\textnormal\",\n    // Font weights\n    \"\\\\textbf\",\n    // Font Shapes\n    \"\\\\textit\"],\n    props: {\n        numArgs: 1,\n        argTypes: [\"text\"],\n        greediness: 2,\n        allowedInText: true,\n        consumeMode: \"text\"\n    },\n    handler: function handler(_ref, args) {\n        var parser = _ref.parser,\n            funcName = _ref.funcName;\n\n        var body = args[0];\n        return {\n            type: \"text\",\n            mode: parser.mode,\n            body: defineFunction_ordargument(body),\n            font: funcName\n        };\n    },\n    htmlBuilder: function htmlBuilder(group, options) {\n        var newOptions = optionsWithFont(group, options);\n        var inner = buildHTML_buildExpression(group.body, newOptions, true);\n        buildCommon.tryCombineChars(inner);\n        return buildCommon.makeSpan([\"mord\", \"text\"], inner, newOptions);\n    },\n    mathmlBuilder: function mathmlBuilder(group, options) {\n        var newOptions = optionsWithFont(group, options);\n        return buildExpressionRow(group.body, newOptions);\n    }\n});\n// CONCATENATED MODULE: ./src/functions/underline.js\n\n\n\n\n\n\n\ndefineFunction({\n    type: \"underline\",\n    names: [\"\\\\underline\"],\n    props: {\n        numArgs: 1,\n        allowedInText: true\n    },\n    handler: function handler(_ref, args) {\n        var parser = _ref.parser;\n\n        return {\n            type: \"underline\",\n            mode: parser.mode,\n            body: args[0]\n        };\n    },\n    htmlBuilder: function htmlBuilder(group, options) {\n        // Underlines are handled in the TeXbook pg 443, Rule 10.\n        // Build the inner group.\n        var innerGroup = buildHTML_buildGroup(group.body, options);\n\n        // Create the line to go below the body\n        var line = buildCommon.makeLineSpan(\"underline-line\", options);\n\n        // Generate the vlist, with the appropriate kerns\n        var vlist = buildCommon.makeVList({\n            positionType: \"top\",\n            positionData: innerGroup.height,\n            children: [{ type: \"kern\", size: line.height }, { type: \"elem\", elem: line }, { type: \"kern\", size: 3 * line.height }, { type: \"elem\", elem: innerGroup }]\n        }, options);\n\n        return buildCommon.makeSpan([\"mord\", \"underline\"], [vlist], options);\n    },\n    mathmlBuilder: function mathmlBuilder(group, options) {\n        var operator = new mathMLTree.MathNode(\"mo\", [new mathMLTree.TextNode(\"\\u203E\")]);\n        operator.setAttribute(\"stretchy\", \"true\");\n\n        var node = new mathMLTree.MathNode(\"munder\", [buildMathML_buildGroup(group.body, options), operator]);\n        node.setAttribute(\"accentunder\", \"true\");\n\n        return node;\n    }\n});\n// CONCATENATED MODULE: ./src/functions/verb.js\n\n\n\n\n\ndefineFunction({\n    type: \"verb\",\n    names: [\"\\\\verb\"],\n    props: {\n        numArgs: 0,\n        allowedInText: true\n    },\n    handler: function handler(context, args, optArgs) {\n        // \\verb and \\verb* are dealt with directly in Parser.js.\n        // If we end up here, it's because of a failure to match the two delimiters\n        // in the regex in Lexer.js.  LaTeX raises the following error when \\verb is\n        // terminated by end of line (or file).\n        throw new src_ParseError(\"\\\\verb ended by end of line instead of matching delimiter\");\n    },\n    htmlBuilder: function htmlBuilder(group, options) {\n        var text = buildCommon.makeVerb(group, options);\n        var body = [];\n        // \\verb enters text mode and therefore is sized like \\textstyle\n        var newOptions = options.havingStyle(options.style.text());\n        for (var i = 0; i < text.length; i++) {\n            var c = text[i];\n            if (c === '~') {\n                c = '\\\\textasciitilde';\n            }\n            body.push(buildCommon.makeSymbol(c, \"Typewriter-Regular\", group.mode, newOptions, [\"mord\", \"texttt\"]));\n        }\n        buildCommon.tryCombineChars(body);\n        return buildCommon.makeSpan([\"mord\", \"text\"].concat(newOptions.sizingClasses(options)), body, newOptions);\n    },\n    mathmlBuilder: function mathmlBuilder(group, options) {\n        var text = new mathMLTree.TextNode(buildCommon.makeVerb(group, options));\n        var node = new mathMLTree.MathNode(\"mtext\", [text]);\n        node.setAttribute(\"mathvariant\", \"monospace\");\n        return node;\n    }\n});\n// CONCATENATED MODULE: ./src/functions.js\n\n/** Include this to ensure that all functions are defined. */\n\n\nvar functions = _functions;\n/* harmony default export */ var src_functions = (functions);\n\n// TODO(kevinb): have functions return an object and call defineFunction with\n// that object in this file instead of relying on side-effects.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// CONCATENATED MODULE: ./src/defineEnvironment.js\n\n\n/**\n * The context contains the following properties:\n *  - mode: current parsing mode.\n *  - envName: the name of the environment, one of the listed names.\n *  - parser: the parser object.\n */\n\n\n/**\n *  - context: information and references provided by the parser\n *  - args: an array of arguments passed to \\begin{name}\n *  - optArgs: an array of optional arguments passed to \\begin{name}\n */\n\n\n/**\n *  - numArgs: (default 0) The number of arguments after the \\begin{name} function.\n *  - argTypes: (optional) Just like for a function\n *  - allowedInText: (default false) Whether or not the environment is allowed\n *                   inside text mode (not enforced yet).\n *  - numOptionalArgs: (default 0) Just like for a function\n */\n\n\n/**\n * Final enviornment spec for use at parse time.\n * This is almost identical to `EnvDefSpec`, except it\n * 1. includes the function handler\n * 2. requires all arguments except argType\n * It is generated by `defineEnvironment()` below.\n */\n\n\n/**\n * All registered environments.\n * `environments.js` exports this same dictionary again and makes it public.\n * `Parser.js` requires this dictionary via `environments.js`.\n */\nvar _environments = {};\n\nfunction defineEnvironment(_ref) {\n    var type = _ref.type,\n        names = _ref.names,\n        props = _ref.props,\n        handler = _ref.handler,\n        htmlBuilder = _ref.htmlBuilder,\n        mathmlBuilder = _ref.mathmlBuilder;\n\n    // Set default values of environments.\n    var data = {\n        type: type,\n        numArgs: props.numArgs || 0,\n        greediness: 1,\n        allowedInText: false,\n        numOptionalArgs: 0,\n        handler: handler\n    };\n    for (var i = 0; i < names.length; ++i) {\n        // TODO: The value type of _environments should be a type union of all\n        // possible `EnvSpec<>` possibilities instead of `EnvSpec<*>`, which is\n        // an existential type.\n        // $FlowFixMe\n        _environments[names[i]] = data;\n    }\n    if (htmlBuilder) {\n        _htmlGroupBuilders[type] = htmlBuilder;\n    }\n    if (mathmlBuilder) {\n        _mathmlGroupBuilders[type] = mathmlBuilder;\n    }\n}\n// CONCATENATED MODULE: ./src/environments/array.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Data stored in the ParseNode associated with the environment.\n\n\nfunction getHLines(parser) {\n    // Return an array. The array length = number of hlines.\n    // Each element in the array tells if the line is dashed.\n    var hlineInfo = [];\n    parser.consumeSpaces();\n    var nxt = parser.nextToken.text;\n    while (nxt === \"\\\\hline\" || nxt === \"\\\\hdashline\") {\n        parser.consume();\n        hlineInfo.push(nxt === \"\\\\hdashline\");\n        parser.consumeSpaces();\n        nxt = parser.nextToken.text;\n    }\n    return hlineInfo;\n}\n\n/**\n * Parse the body of the environment, with rows delimited by \\\\ and\n * columns delimited by &, and create a nested list in row-major order\n * with one group per cell.  If given an optional argument style\n * (\"text\", \"display\", etc.), then each cell is cast into that style.\n */\nfunction parseArray(parser, _ref, style) {\n    var hskipBeforeAndAfter = _ref.hskipBeforeAndAfter,\n        addJot = _ref.addJot,\n        cols = _ref.cols,\n        arraystretch = _ref.arraystretch;\n\n    // Parse body of array with \\\\ temporarily mapped to \\cr\n    parser.gullet.beginGroup();\n    parser.gullet.macros.set(\"\\\\\\\\\", \"\\\\cr\");\n\n    // Get current arraystretch if it's not set by the environment\n    if (!arraystretch) {\n        var stretch = parser.gullet.expandMacroAsText(\"\\\\arraystretch\");\n        if (stretch == null) {\n            // Default \\arraystretch from lttab.dtx\n            arraystretch = 1;\n        } else {\n            arraystretch = parseFloat(stretch);\n            if (!arraystretch || arraystretch < 0) {\n                throw new src_ParseError(\"Invalid \\\\arraystretch: \" + stretch);\n            }\n        }\n    }\n\n    var row = [];\n    var body = [row];\n    var rowGaps = [];\n    var hLinesBeforeRow = [];\n\n    // Test for \\hline at the top of the array.\n    hLinesBeforeRow.push(getHLines(parser));\n\n    while (true) {\n        // eslint-disable-line no-constant-condition\n        var cell = parser.parseExpression(false, \"\\\\cr\");\n        cell = {\n            type: \"ordgroup\",\n            mode: parser.mode,\n            body: cell\n        };\n        if (style) {\n            cell = {\n                type: \"styling\",\n                mode: parser.mode,\n                style: style,\n                body: [cell]\n            };\n        }\n        row.push(cell);\n        var next = parser.nextToken.text;\n        if (next === \"&\") {\n            parser.consume();\n        } else if (next === \"\\\\end\") {\n            // Arrays terminate newlines with `\\crcr` which consumes a `\\cr` if\n            // the last line is empty.\n            // NOTE: Currently, `cell` is the last item added into `row`.\n            if (row.length === 1 && cell.type === \"styling\" && cell.body[0].body.length === 0) {\n                body.pop();\n            }\n            if (hLinesBeforeRow.length < body.length + 1) {\n                hLinesBeforeRow.push([]);\n            }\n            break;\n        } else if (next === \"\\\\cr\") {\n            var cr = parser.parseFunction();\n            if (!cr) {\n                throw new src_ParseError(\"Failed to parse function after \" + next);\n            }\n            rowGaps.push(assertNodeType(cr, \"cr\").size);\n\n            // check for \\hline(s) following the row separator\n            hLinesBeforeRow.push(getHLines(parser));\n\n            row = [];\n            body.push(row);\n        } else {\n            throw new src_ParseError(\"Expected & or \\\\\\\\ or \\\\cr or \\\\end\", parser.nextToken);\n        }\n    }\n    parser.gullet.endGroup();\n    return {\n        type: \"array\",\n        mode: parser.mode,\n        addJot: addJot,\n        arraystretch: arraystretch,\n        body: body,\n        cols: cols,\n        rowGaps: rowGaps,\n        hskipBeforeAndAfter: hskipBeforeAndAfter,\n        hLinesBeforeRow: hLinesBeforeRow\n    };\n}\n\n// Decides on a style for cells in an array according to whether the given\n// environment name starts with the letter 'd'.\nfunction dCellStyle(envName) {\n    if (envName.substr(0, 1) === \"d\") {\n        return \"display\";\n    } else {\n        return \"text\";\n    }\n}\n\nvar array_htmlBuilder = function htmlBuilder(group, options) {\n    var r = void 0;\n    var c = void 0;\n    var nr = group.body.length;\n    var hLinesBeforeRow = group.hLinesBeforeRow;\n    var nc = 0;\n    var body = new Array(nr);\n    var hlines = [];\n\n    // Horizontal spacing\n    var pt = 1 / options.fontMetrics().ptPerEm;\n    var arraycolsep = 5 * pt; // \\arraycolsep in article.cls\n\n    // Vertical spacing\n    var baselineskip = 12 * pt; // see size10.clo\n    // Default \\jot from ltmath.dtx\n    // TODO(edemaine): allow overriding \\jot via \\setlength (#687)\n    var jot = 3 * pt;\n    var arrayskip = group.arraystretch * baselineskip;\n    var arstrutHeight = 0.7 * arrayskip; // \\strutbox in ltfsstrc.dtx and\n    var arstrutDepth = 0.3 * arrayskip; // \\@arstrutbox in lttab.dtx\n\n    var totalHeight = 0;\n\n    // Set a position for \\hline(s) at the top of the array, if any.\n    function setHLinePos(hlinesInGap) {\n        for (var i = 0; i < hlinesInGap.length; ++i) {\n            if (i > 0) {\n                totalHeight += 0.25;\n            }\n            hlines.push({ pos: totalHeight, isDashed: hlinesInGap[i] });\n        }\n    }\n    setHLinePos(hLinesBeforeRow[0]);\n\n    for (r = 0; r < group.body.length; ++r) {\n        var inrow = group.body[r];\n        var _height = arstrutHeight; // \\@array adds an \\@arstrut\n        var _depth = arstrutDepth; // to each tow (via the template)\n\n        if (nc < inrow.length) {\n            nc = inrow.length;\n        }\n\n        var outrow = new Array(inrow.length);\n        for (c = 0; c < inrow.length; ++c) {\n            var elt = buildHTML_buildGroup(inrow[c], options);\n            if (_depth < elt.depth) {\n                _depth = elt.depth;\n            }\n            if (_height < elt.height) {\n                _height = elt.height;\n            }\n            outrow[c] = elt;\n        }\n\n        var rowGap = group.rowGaps[r];\n        var gap = 0;\n        if (rowGap) {\n            gap = units_calculateSize(rowGap, options);\n            if (gap > 0) {\n                // \\@argarraycr\n                gap += arstrutDepth;\n                if (_depth < gap) {\n                    _depth = gap; // \\@xargarraycr\n                }\n                gap = 0;\n            }\n        }\n        // In AMS multiline environments such as aligned and gathered, rows\n        // correspond to lines that have additional \\jot added to the\n        // \\baselineskip via \\openup.\n        if (group.addJot) {\n            _depth += jot;\n        }\n\n        outrow.height = _height;\n        outrow.depth = _depth;\n        totalHeight += _height;\n        outrow.pos = totalHeight;\n        totalHeight += _depth + gap; // \\@yargarraycr\n        body[r] = outrow;\n\n        // Set a position for \\hline(s), if any.\n        setHLinePos(hLinesBeforeRow[r + 1]);\n    }\n\n    var offset = totalHeight / 2 + options.fontMetrics().axisHeight;\n    var colDescriptions = group.cols || [];\n    var cols = [];\n    var colSep = void 0;\n    var colDescrNum = void 0;\n    for (c = 0, colDescrNum = 0;\n    // Continue while either there are more columns or more column\n    // descriptions, so trailing separators don't get lost.\n    c < nc || colDescrNum < colDescriptions.length; ++c, ++colDescrNum) {\n\n        var colDescr = colDescriptions[colDescrNum] || {};\n\n        var firstSeparator = true;\n        while (colDescr.type === \"separator\") {\n            // If there is more than one separator in a row, add a space\n            // between them.\n            if (!firstSeparator) {\n                colSep = buildCommon.makeSpan([\"arraycolsep\"], []);\n                colSep.style.width = options.fontMetrics().doubleRuleSep + \"em\";\n                cols.push(colSep);\n            }\n\n            if (colDescr.separator === \"|\") {\n                var _separator = buildCommon.makeSpan([\"vertical-separator\"], [], options);\n                _separator.style.height = totalHeight + \"em\";\n                _separator.style.verticalAlign = -(totalHeight - offset) + \"em\";\n\n                cols.push(_separator);\n            } else if (colDescr.separator === \":\") {\n                var _separator2 = buildCommon.makeSpan([\"vertical-separator\", \"vs-dashed\"], [], options);\n                _separator2.style.height = totalHeight + \"em\";\n                _separator2.style.verticalAlign = -(totalHeight - offset) + \"em\";\n\n                cols.push(_separator2);\n            } else {\n                throw new src_ParseError(\"Invalid separator type: \" + colDescr.separator);\n            }\n\n            colDescrNum++;\n            colDescr = colDescriptions[colDescrNum] || {};\n            firstSeparator = false;\n        }\n\n        if (c >= nc) {\n            continue;\n        }\n\n        var sepwidth = void 0;\n        if (c > 0 || group.hskipBeforeAndAfter) {\n            sepwidth = utils.deflt(colDescr.pregap, arraycolsep);\n            if (sepwidth !== 0) {\n                colSep = buildCommon.makeSpan([\"arraycolsep\"], []);\n                colSep.style.width = sepwidth + \"em\";\n                cols.push(colSep);\n            }\n        }\n\n        var col = [];\n        for (r = 0; r < nr; ++r) {\n            var row = body[r];\n            var elem = row[c];\n            if (!elem) {\n                continue;\n            }\n            var shift = row.pos - offset;\n            elem.depth = row.depth;\n            elem.height = row.height;\n            col.push({ type: \"elem\", elem: elem, shift: shift });\n        }\n\n        col = buildCommon.makeVList({\n            positionType: \"individualShift\",\n            children: col\n        }, options);\n        col = buildCommon.makeSpan([\"col-align-\" + (colDescr.align || \"c\")], [col]);\n        cols.push(col);\n\n        if (c < nc - 1 || group.hskipBeforeAndAfter) {\n            sepwidth = utils.deflt(colDescr.postgap, arraycolsep);\n            if (sepwidth !== 0) {\n                colSep = buildCommon.makeSpan([\"arraycolsep\"], []);\n                colSep.style.width = sepwidth + \"em\";\n                cols.push(colSep);\n            }\n        }\n    }\n    body = buildCommon.makeSpan([\"mtable\"], cols);\n\n    // Add \\hline(s), if any.\n    if (hlines.length > 0) {\n        var line = buildCommon.makeLineSpan(\"hline\", options, 0.05);\n        var dashes = buildCommon.makeLineSpan(\"hdashline\", options, 0.05);\n        var vListElems = [{ type: \"elem\", elem: body, shift: 0 }];\n        while (hlines.length > 0) {\n            var hline = hlines.pop();\n            var lineShift = hline.pos - offset;\n            if (hline.isDashed) {\n                vListElems.push({ type: \"elem\", elem: dashes, shift: lineShift });\n            } else {\n                vListElems.push({ type: \"elem\", elem: line, shift: lineShift });\n            }\n        }\n        body = buildCommon.makeVList({\n            positionType: \"individualShift\",\n            children: vListElems\n        }, options);\n    }\n\n    return buildCommon.makeSpan([\"mord\"], [body], options);\n};\n\nvar array_mathmlBuilder = function mathmlBuilder(group, options) {\n    return new mathMLTree.MathNode(\"mtable\", group.body.map(function (row) {\n        return new mathMLTree.MathNode(\"mtr\", row.map(function (cell) {\n            return new mathMLTree.MathNode(\"mtd\", [buildMathML_buildGroup(cell, options)]);\n        }));\n    }));\n};\n\n// Convenience function for aligned and alignedat environments.\nvar array_alignedHandler = function alignedHandler(context, args) {\n    var cols = [];\n    var res = parseArray(context.parser, { cols: cols, addJot: true }, \"display\");\n\n    // Determining number of columns.\n    // 1. If the first argument is given, we use it as a number of columns,\n    //    and makes sure that each row doesn't exceed that number.\n    // 2. Otherwise, just count number of columns = maximum number\n    //    of cells in each row (\"aligned\" mode -- isAligned will be true).\n    //\n    // At the same time, prepend empty group {} at beginning of every second\n    // cell in each row (starting with second cell) so that operators become\n    // binary.  This behavior is implemented in amsmath's \\start@aligned.\n    var numMaths = void 0;\n    var numCols = 0;\n    var emptyGroup = {\n        type: \"ordgroup\",\n        mode: context.mode,\n        body: []\n    };\n    var ordgroup = checkNodeType(args[0], \"ordgroup\");\n    if (ordgroup) {\n        var arg0 = \"\";\n        for (var i = 0; i < ordgroup.body.length; i++) {\n            var textord = assertNodeType(ordgroup.body[i], \"textord\");\n            arg0 += textord.text;\n        }\n        numMaths = Number(arg0);\n        numCols = numMaths * 2;\n    }\n    var isAligned = !numCols;\n    res.body.forEach(function (row) {\n        for (var _i = 1; _i < row.length; _i += 2) {\n            // Modify ordgroup node within styling node\n            var styling = assertNodeType(row[_i], \"styling\");\n            var _ordgroup = assertNodeType(styling.body[0], \"ordgroup\");\n            _ordgroup.body.unshift(emptyGroup);\n        }\n        if (!isAligned) {\n            // Case 1\n            var curMaths = row.length / 2;\n            if (numMaths < curMaths) {\n                throw new src_ParseError(\"Too many math in a row: \" + (\"expected \" + numMaths + \", but got \" + curMaths), row[0]);\n            }\n        } else if (numCols < row.length) {\n            // Case 2\n            numCols = row.length;\n        }\n    });\n\n    // Adjusting alignment.\n    // In aligned mode, we add one \\qquad between columns;\n    // otherwise we add nothing.\n    for (var _i2 = 0; _i2 < numCols; ++_i2) {\n        var _align = \"r\";\n        var _pregap = 0;\n        if (_i2 % 2 === 1) {\n            _align = \"l\";\n        } else if (_i2 > 0 && isAligned) {\n            // \"aligned\" mode.\n            _pregap = 1; // add one \\quad\n        }\n        cols[_i2] = {\n            type: \"align\",\n            align: _align,\n            pregap: _pregap,\n            postgap: 0\n        };\n    }\n    return res;\n};\n\n// Arrays are part of LaTeX, defined in lttab.dtx so its documentation\n// is part of the source2e.pdf file of LaTeX2e source documentation.\n// {darray} is an {array} environment where cells are set in \\displaystyle,\n// as defined in nccmath.sty.\ndefineEnvironment({\n    type: \"array\",\n    names: [\"array\", \"darray\"],\n    props: {\n        numArgs: 1\n    },\n    handler: function handler(context, args) {\n        // Since no types are specified above, the two possibilities are\n        // - The argument is wrapped in {} or [], in which case Parser's\n        //   parseGroup() returns an \"ordgroup\" wrapping some symbol node.\n        // - The argument is a bare symbol node.\n        var symNode = checkSymbolNodeType(args[0]);\n        var colalign = symNode ? [args[0]] : assertNodeType(args[0], \"ordgroup\").body;\n        var cols = colalign.map(function (nde) {\n            var node = assertSymbolNodeType(nde);\n            var ca = node.text;\n            if (\"lcr\".indexOf(ca) !== -1) {\n                return {\n                    type: \"align\",\n                    align: ca\n                };\n            } else if (ca === \"|\") {\n                return {\n                    type: \"separator\",\n                    separator: \"|\"\n                };\n            } else if (ca === \":\") {\n                return {\n                    type: \"separator\",\n                    separator: \":\"\n                };\n            }\n            throw new src_ParseError(\"Unknown column alignment: \" + ca, nde);\n        });\n        var res = {\n            cols: cols,\n            hskipBeforeAndAfter: true // \\@preamble in lttab.dtx\n        };\n        return parseArray(context.parser, res, dCellStyle(context.envName));\n    },\n\n    htmlBuilder: array_htmlBuilder,\n    mathmlBuilder: array_mathmlBuilder\n});\n\n// The matrix environments of amsmath builds on the array environment\n// of LaTeX, which is discussed above.\ndefineEnvironment({\n    type: \"array\",\n    names: [\"matrix\", \"pmatrix\", \"bmatrix\", \"Bmatrix\", \"vmatrix\", \"Vmatrix\"],\n    props: {\n        numArgs: 0\n    },\n    handler: function handler(context) {\n        var delimiters = {\n            \"matrix\": null,\n            \"pmatrix\": [\"(\", \")\"],\n            \"bmatrix\": [\"[\", \"]\"],\n            \"Bmatrix\": [\"\\\\{\", \"\\\\}\"],\n            \"vmatrix\": [\"|\", \"|\"],\n            \"Vmatrix\": [\"\\\\Vert\", \"\\\\Vert\"]\n        }[context.envName];\n        // \\hskip -\\arraycolsep in amsmath\n        var payload = { hskipBeforeAndAfter: false };\n        var res = parseArray(context.parser, payload, dCellStyle(context.envName));\n        return delimiters ? {\n            type: \"leftright\",\n            mode: context.mode,\n            body: [res],\n            left: delimiters[0],\n            right: delimiters[1]\n        } : res;\n    },\n\n    htmlBuilder: array_htmlBuilder,\n    mathmlBuilder: array_mathmlBuilder\n});\n\n// A cases environment (in amsmath.sty) is almost equivalent to\n// \\def\\arraystretch{1.2}%\n// \\left\\{\\begin{array}{@{}l@{\\quad}l@{}} … \\end{array}\\right.\n// {dcases} is a {cases} environment where cells are set in \\displaystyle,\n// as defined in mathtools.sty.\ndefineEnvironment({\n    type: \"array\",\n    names: [\"cases\", \"dcases\"],\n    props: {\n        numArgs: 0\n    },\n    handler: function handler(context) {\n        var payload = {\n            arraystretch: 1.2,\n            cols: [{\n                type: \"align\",\n                align: \"l\",\n                pregap: 0,\n                // TODO(kevinb) get the current style.\n                // For now we use the metrics for TEXT style which is what we were\n                // doing before.  Before attempting to get the current style we\n                // should look at TeX's behavior especially for \\over and matrices.\n                postgap: 1.0 /* 1em quad */\n            }, {\n                type: \"align\",\n                align: \"l\",\n                pregap: 0,\n                postgap: 0\n            }]\n        };\n        var res = parseArray(context.parser, payload, dCellStyle(context.envName));\n        return {\n            type: \"leftright\",\n            mode: context.mode,\n            body: [res],\n            left: \"\\\\{\",\n            right: \".\"\n        };\n    },\n\n    htmlBuilder: array_htmlBuilder,\n    mathmlBuilder: array_mathmlBuilder\n});\n\n// An aligned environment is like the align* environment\n// except it operates within math mode.\n// Note that we assume \\nomallineskiplimit to be zero,\n// so that \\strut@ is the same as \\strut.\ndefineEnvironment({\n    type: \"array\",\n    names: [\"aligned\"],\n    props: {\n        numArgs: 0\n    },\n    handler: array_alignedHandler,\n    htmlBuilder: array_htmlBuilder,\n    mathmlBuilder: array_mathmlBuilder\n});\n\n// A gathered environment is like an array environment with one centered\n// column, but where rows are considered lines so get \\jot line spacing\n// and contents are set in \\displaystyle.\ndefineEnvironment({\n    type: \"array\",\n    names: [\"gathered\"],\n    props: {\n        numArgs: 0\n    },\n    handler: function handler(context) {\n        var res = {\n            cols: [{\n                type: \"align\",\n                align: \"c\"\n            }],\n            addJot: true\n        };\n        return parseArray(context.parser, res, \"display\");\n    },\n\n    htmlBuilder: array_htmlBuilder,\n    mathmlBuilder: array_mathmlBuilder\n});\n\n// alignat environment is like an align environment, but one must explicitly\n// specify maximum number of columns in each row, and can adjust spacing between\n// each columns.\ndefineEnvironment({\n    type: \"array\",\n    names: [\"alignedat\"],\n    // One for numbered and for unnumbered;\n    // but, KaTeX doesn't supports math numbering yet,\n    // they make no difference for now.\n    props: {\n        numArgs: 1\n    },\n    handler: array_alignedHandler,\n    htmlBuilder: array_htmlBuilder,\n    mathmlBuilder: array_mathmlBuilder\n});\n\n// Catch \\hline outside array environment\ndefineFunction({\n    type: \"text\", // Doesn't matter what this is.\n    names: [\"\\\\hline\", \"\\\\hdashline\"],\n    props: {\n        numArgs: 0,\n        allowedInText: true,\n        allowedInMath: true\n    },\n    handler: function handler(context, args) {\n        throw new src_ParseError(context.funcName + \" valid only within array environment\");\n    }\n});\n// CONCATENATED MODULE: ./src/environments.js\n\n\nvar environments = _environments;\n\n/* harmony default export */ var src_environments = (environments);\n\n// All environment definitions should be imported below\n\n// CONCATENATED MODULE: ./src/Lexer.js\n\n\n/**\n * The Lexer class handles tokenizing the input in various ways. Since our\n * parser expects us to be able to backtrack, the lexer allows lexing from any\n * given starting point.\n *\n * Its main exposed function is the `lex` function, which takes a position to\n * lex from and a type of token to lex. It defers to the appropriate `_innerLex`\n * function.\n *\n * The various `_innerLex` functions perform the actual lexing of different\n * kinds.\n */\n\n\n\n\n\n/* The following tokenRegex\n * - matches typical whitespace (but not NBSP etc.) using its first group\n * - matches comments (must have trailing newlines)\n * - does not match any control character \\x00-\\x1f except whitespace\n * - does not match a bare backslash\n * - matches any ASCII character except those just mentioned\n * - does not match the BMP private use area \\uE000-\\uF8FF\n * - does not match bare surrogate code units\n * - matches any BMP character except for those just described\n * - matches any valid Unicode surrogate pair\n * - matches a backslash followed by one or more letters\n * - matches a backslash followed by any BMP character, including newline\n * Just because the Lexer matches something doesn't mean it's valid input:\n * If there is no matching function or symbol definition, the Parser will\n * still reject the input.\n */\nvar spaceRegexString = \"[ \\r\\n\\t]\";\nvar commentRegexString = \"%[^\\n]*(?:\\n|$)\";\nvar controlWordRegexString = \"\\\\\\\\[a-zA-Z@]+\";\nvar controlSymbolRegexString = \"\\\\\\\\[^\\uD800-\\uDFFF]\";\nvar controlWordWhitespaceRegexString = \"\" + controlWordRegexString + spaceRegexString + \"*\";\nvar controlWordWhitespaceRegex = new RegExp(\"^(\" + controlWordRegexString + \")\" + spaceRegexString + \"*$\");\nvar combiningDiacriticalMarkString = \"[\\u0300-\\u036F]\";\nvar combiningDiacriticalMarksEndRegex = new RegExp(combiningDiacriticalMarkString + \"+$\");\nvar urlFunctionRegexString = \"(\\\\\\\\href|\\\\\\\\url)\" + (\"(?:\" + spaceRegexString + \"*\\\\{((?:[^{}\\\\\\\\]|\\\\\\\\[^]|{[^{}]*})*)\\\\}\") + (\"|\" + spaceRegexString + \"+([^{}])\") + (\"|\" + spaceRegexString + \"*([^{}a-zA-Z]))\");\nvar tokenRegexString = \"(\" + spaceRegexString + \"+)|\" + ( // whitespace\n\"(\" + commentRegexString) + // comments\n\"|[!-\\\\[\\\\]-\\u2027\\u202A-\\uD7FF\\uF900-\\uFFFF]\" + ( // single codepoint\ncombiningDiacriticalMarkString + \"*\") + // ...plus accents\n\"|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]\" + ( // surrogate pair\ncombiningDiacriticalMarkString + \"*\") + // ...plus accents\n\"|\\\\\\\\verb\\\\*([^]).*?\\\\3\" + // \\verb*\n\"|\\\\\\\\verb([^*a-zA-Z]).*?\\\\4\" + ( // \\verb unstarred\n\"|\" + urlFunctionRegexString) + ( // URL arguments\n\"|\" + controlWordWhitespaceRegexString) + ( // \\macroName + spaces\n\"|\" + controlSymbolRegexString + \")\"); // \\\\, \\', etc.\n\n// These regexs are for matching results from tokenRegex,\n// so they do have ^ markers.\nvar controlWordRegex = new RegExp(\"^\" + controlWordRegexString);\nvar urlFunctionRegex = new RegExp(\"^\" + urlFunctionRegexString);\n\n/** Main Lexer class */\n\nvar Lexer_Lexer = function () {\n    function Lexer(input, settings) {\n        classCallCheck_default()(this, Lexer);\n\n        // Separate accents from characters\n        this.input = input;\n        this.settings = settings;\n        this.tokenRegex = new RegExp(tokenRegexString, 'g');\n    }\n\n    /**\n     * This function lexes a single token.\n     */\n\n\n    Lexer.prototype.lex = function lex() {\n        var input = this.input;\n        var pos = this.tokenRegex.lastIndex;\n        if (pos === input.length) {\n            return new Token_Token(\"EOF\", new src_SourceLocation(this, pos, pos));\n        }\n        var match = this.tokenRegex.exec(input);\n        if (match === null || match.index !== pos) {\n            throw new src_ParseError(\"Unexpected character: '\" + input[pos] + \"'\", new Token_Token(input[pos], new src_SourceLocation(this, pos, pos + 1)));\n        }\n        var text = match[2] || \" \";\n\n        // Trim any trailing whitespace from control word match\n        var controlMatch = text.match(controlWordWhitespaceRegex);\n        if (controlMatch) {\n            text = controlMatch[1] + text.slice(controlMatch[0].length);\n        }\n\n        if (text[0] === \"%\") {\n            if (text[text.length - 1] !== \"\\n\") {\n                this.settings.reportNonstrict(\"commentAtEnd\", \"% comment has no terminating newline; LaTeX would \" + \"fail because of commenting the end of math mode (e.g. $)\");\n            }\n            return this.lex();\n        } else {\n            return new Token_Token(text, new src_SourceLocation(this, pos, this.tokenRegex.lastIndex));\n        }\n    };\n\n    return Lexer;\n}();\n\n/* harmony default export */ var src_Lexer = (Lexer_Lexer);\n// CONCATENATED MODULE: ./src/Namespace.js\n\n\n\n/**\n * A `Namespace` refers to a space of nameable things like macros or lengths,\n * which can be `set` either globally or local to a nested group, using an\n * undo stack similar to how TeX implements this functionality.\n * Performance-wise, `get` and local `set` take constant time, while global\n * `set` takes time proportional to the depth of group nesting.\n */\n\n\n\nvar Namespace_Namespace = function () {\n\n    /**\n     * Both arguments are optional.  The first argument is an object of\n     * built-in mappings which never change.  The second argument is an object\n     * of initial (global-level) mappings, which will constantly change\n     * according to any global/top-level `set`s done.\n     */\n    function Namespace() {\n        var builtins = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        var globalMacros = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n        classCallCheck_default()(this, Namespace);\n\n        this.current = globalMacros;\n        this.builtins = builtins;\n        this.undefStack = [];\n    }\n\n    /**\n     * Start a new nested group, affecting future local `set`s.\n     */\n\n\n    Namespace.prototype.beginGroup = function beginGroup() {\n        this.undefStack.push({});\n    };\n\n    /**\n     * End current nested group, restoring values before the group began.\n     */\n\n\n    Namespace.prototype.endGroup = function endGroup() {\n        if (this.undefStack.length === 0) {\n            throw new src_ParseError(\"Unbalanced namespace destruction: attempt \" + \"to pop global namespace; please report this as a bug\");\n        }\n        var undefs = this.undefStack.pop();\n        for (var undef in undefs) {\n            if (undefs.hasOwnProperty(undef)) {\n                if (undefs[undef] === undefined) {\n                    delete this.current[undef];\n                } else {\n                    this.current[undef] = undefs[undef];\n                }\n            }\n        }\n    };\n\n    /**\n     * Detect whether `name` has a definition.  Equivalent to\n     * `get(name) != null`.\n     */\n\n\n    Namespace.prototype.has = function has(name) {\n        return this.current.hasOwnProperty(name) || this.builtins.hasOwnProperty(name);\n    };\n\n    /**\n     * Get the current value of a name, or `undefined` if there is no value.\n     *\n     * Note: Do not use `if (namespace.get(...))` to detect whether a macro\n     * is defined, as the definition may be the empty string which evaluates\n     * to `false` in JavaScript.  Use `if (namespace.get(...) != null)` or\n     * `if (namespace.has(...))`.\n     */\n\n\n    Namespace.prototype.get = function get(name) {\n        if (this.current.hasOwnProperty(name)) {\n            return this.current[name];\n        } else {\n            return this.builtins[name];\n        }\n    };\n\n    /**\n     * Set the current value of a name, and optionally set it globally too.\n     * Local set() sets the current value and (when appropriate) adds an undo\n     * operation to the undo stack.  Global set() may change the undo\n     * operation at every level, so takes time linear in their number.\n     */\n\n\n    Namespace.prototype.set = function set(name, value) {\n        var global = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n        if (global) {\n            // Global set is equivalent to setting in all groups.  Simulate this\n            // by destroying any undos currently scheduled for this name,\n            // and adding an undo with the *new* value (in case it later gets\n            // locally reset within this environment).\n            for (var i = 0; i < this.undefStack.length; i++) {\n                delete this.undefStack[i][name];\n            }\n            if (this.undefStack.length > 0) {\n                this.undefStack[this.undefStack.length - 1][name] = value;\n            }\n        } else {\n            // Undo this set at end of this group (possibly to `undefined`),\n            // unless an undo is already in place, in which case that older\n            // value is the correct one.\n            var top = this.undefStack[this.undefStack.length - 1];\n            if (top && !top.hasOwnProperty(name)) {\n                top[name] = this.current[name];\n            }\n        }\n        this.current[name] = value;\n    };\n\n    return Namespace;\n}();\n\n/* harmony default export */ var src_Namespace = (Namespace_Namespace);\n// CONCATENATED MODULE: ./src/macros.js\n\n/**\n * Predefined macros for KaTeX.\n * This can be used to define some commands in terms of others.\n */\n\n\n\n\n\n\n\n/**\n * Provides context to macros defined by functions. Implemented by\n * MacroExpander.\n */\n\n\n/** Macro tokens (in reverse order). */\n\n\nvar builtinMacros = {};\n/* harmony default export */ var macros = (builtinMacros);\n\n// This function might one day accept an additional argument and do more things.\nfunction defineMacro(name, body) {\n    builtinMacros[name] = body;\n}\n\n//////////////////////////////////////////////////////////////////////\n// macro tools\n\n// LaTeX's \\@firstoftwo{#1}{#2} expands to #1, skipping #2\n// TeX source: \\long\\def\\@firstoftwo#1#2{#1}\ndefineMacro(\"\\\\@firstoftwo\", function (context) {\n    var args = context.consumeArgs(2);\n    return { tokens: args[0], numArgs: 0 };\n});\n\n// LaTeX's \\@secondoftwo{#1}{#2} expands to #2, skipping #1\n// TeX source: \\long\\def\\@secondoftwo#1#2{#2}\ndefineMacro(\"\\\\@secondoftwo\", function (context) {\n    var args = context.consumeArgs(2);\n    return { tokens: args[1], numArgs: 0 };\n});\n\n// LaTeX's \\@ifnextchar{#1}{#2}{#3} looks ahead to the next (unexpanded)\n// symbol.  If it matches #1, then the macro expands to #2; otherwise, #3.\n// Note, however, that it does not consume the next symbol in either case.\ndefineMacro(\"\\\\@ifnextchar\", function (context) {\n    var args = context.consumeArgs(3); // symbol, if, else\n    var nextToken = context.future();\n    if (args[0].length === 1 && args[0][0].text === nextToken.text) {\n        return { tokens: args[1], numArgs: 0 };\n    } else {\n        return { tokens: args[2], numArgs: 0 };\n    }\n});\n\n// LaTeX's \\@ifstar{#1}{#2} looks ahead to the next (unexpanded) symbol.\n// If it is `*`, then it consumes the symbol, and the macro expands to #1;\n// otherwise, the macro expands to #2 (without consuming the symbol).\n// TeX source: \\def\\@ifstar#1{\\@ifnextchar *{\\@firstoftwo{#1}}}\ndefineMacro(\"\\\\@ifstar\", \"\\\\@ifnextchar *{\\\\@firstoftwo{#1}}\");\n\n// LaTeX's \\TextOrMath{#1}{#2} expands to #1 in text mode, #2 in math mode\ndefineMacro(\"\\\\TextOrMath\", function (context) {\n    var args = context.consumeArgs(2);\n    if (context.mode === 'text') {\n        return { tokens: args[0], numArgs: 0 };\n    } else {\n        return { tokens: args[1], numArgs: 0 };\n    }\n});\n\n// Lookup table for parsing numbers in base 8 through 16\nvar digitToNumber = {\n    \"0\": 0, \"1\": 1, \"2\": 2, \"3\": 3, \"4\": 4, \"5\": 5, \"6\": 6, \"7\": 7, \"8\": 8,\n    \"9\": 9, \"a\": 10, \"A\": 10, \"b\": 11, \"B\": 11, \"c\": 12, \"C\": 12,\n    \"d\": 13, \"D\": 13, \"e\": 14, \"E\": 14, \"f\": 15, \"F\": 15\n};\n\n// TeX \\char makes a literal character (catcode 12) using the following forms:\n// (see The TeXBook, p. 43)\n//   \\char123  -- decimal\n//   \\char'123 -- octal\n//   \\char\"123 -- hex\n//   \\char`x   -- character that can be written (i.e. isn't active)\n//   \\char`\\x  -- character that cannot be written (e.g. %)\n// These all refer to characters from the font, so we turn them into special\n// calls to a function \\@char dealt with in the Parser.\ndefineMacro(\"\\\\char\", function (context) {\n    var token = context.popToken();\n    var base = void 0;\n    var number = '';\n    if (token.text === \"'\") {\n        base = 8;\n        token = context.popToken();\n    } else if (token.text === '\"') {\n        base = 16;\n        token = context.popToken();\n    } else if (token.text === \"`\") {\n        token = context.popToken();\n        if (token.text[0] === \"\\\\\") {\n            number = token.text.charCodeAt(1);\n        } else if (token.text === \"EOF\") {\n            throw new src_ParseError(\"\\\\char` missing argument\");\n        } else {\n            number = token.text.charCodeAt(0);\n        }\n    } else {\n        base = 10;\n    }\n    if (base) {\n        // Parse a number in the given base, starting with first `token`.\n        number = digitToNumber[token.text];\n        if (number == null || number >= base) {\n            throw new src_ParseError(\"Invalid base-\" + base + \" digit \" + token.text);\n        }\n        var digit = void 0;\n        while ((digit = digitToNumber[context.future().text]) != null && digit < base) {\n            number *= base;\n            number += digit;\n            context.popToken();\n        }\n    }\n    return \"\\\\@char{\" + number + \"}\";\n});\n\n// Basic support for macro definitions:\n//     \\def\\macro{expansion}\n//     \\def\\macro#1{expansion}\n//     \\def\\macro#1#2{expansion}\n//     \\def\\macro#1#2#3#4#5#6#7#8#9{expansion}\n// Also the \\gdef and \\global\\def equivalents\nvar macros_def = function def(context, global) {\n    var arg = context.consumeArgs(1)[0];\n    if (arg.length !== 1) {\n        throw new src_ParseError(\"\\\\gdef's first argument must be a macro name\");\n    }\n    var name = arg[0].text;\n    // Count argument specifiers, and check they are in the order #1 #2 ...\n    var numArgs = 0;\n    arg = context.consumeArgs(1)[0];\n    while (arg.length === 1 && arg[0].text === \"#\") {\n        arg = context.consumeArgs(1)[0];\n        if (arg.length !== 1) {\n            throw new src_ParseError(\"Invalid argument number length \\\"\" + arg.length + \"\\\"\");\n        }\n        if (!/^[1-9]$/.test(arg[0].text)) {\n            throw new src_ParseError(\"Invalid argument number \\\"\" + arg[0].text + \"\\\"\");\n        }\n        numArgs++;\n        if (parseInt(arg[0].text) !== numArgs) {\n            throw new src_ParseError(\"Argument number \\\"\" + arg[0].text + \"\\\" out of order\");\n        }\n        arg = context.consumeArgs(1)[0];\n    }\n    // Final arg is the expansion of the macro\n    context.macros.set(name, {\n        tokens: arg,\n        numArgs: numArgs\n    }, global);\n    return '';\n};\ndefineMacro(\"\\\\gdef\", function (context) {\n    return macros_def(context, true);\n});\ndefineMacro(\"\\\\def\", function (context) {\n    return macros_def(context, false);\n});\ndefineMacro(\"\\\\global\", function (context) {\n    var next = context.consumeArgs(1)[0];\n    if (next.length !== 1) {\n        throw new src_ParseError(\"Invalid command after \\\\global\");\n    }\n    var command = next[0].text;\n    // TODO: Should expand command\n    if (command === \"\\\\def\") {\n        // \\global\\def is equivalent to \\gdef\n        return macros_def(context, true);\n    } else {\n        throw new src_ParseError(\"Invalid command '\" + command + \"' after \\\\global\");\n    }\n});\n\n// \\newcommand{\\macro}[args]{definition}\n// \\renewcommand{\\macro}[args]{definition}\n// TODO: Optional arguments: \\newcommand{\\macro}[args][default]{definition}\nvar macros_newcommand = function newcommand(context, existsOK, nonexistsOK) {\n    var arg = context.consumeArgs(1)[0];\n    if (arg.length !== 1) {\n        throw new src_ParseError(\"\\\\newcommand's first argument must be a macro name\");\n    }\n    var name = arg[0].text;\n\n    var exists = context.isDefined(name);\n    if (exists && !existsOK) {\n        throw new src_ParseError(\"\\\\newcommand{\" + name + \"} attempting to redefine \" + (name + \"; use \\\\renewcommand\"));\n    }\n    if (!exists && !nonexistsOK) {\n        throw new src_ParseError(\"\\\\renewcommand{\" + name + \"} when command \" + name + \" \" + \"does not yet exist; use \\\\newcommand\");\n    }\n\n    var numArgs = 0;\n    arg = context.consumeArgs(1)[0];\n    if (arg.length === 1 && arg[0].text === \"[\") {\n        var argText = '';\n        var token = context.expandNextToken();\n        while (token.text !== \"]\" && token.text !== \"EOF\") {\n            // TODO: Should properly expand arg, e.g., ignore {}s\n            argText += token.text;\n            token = context.expandNextToken();\n        }\n        if (!argText.match(/^\\s*[0-9]+\\s*$/)) {\n            throw new src_ParseError(\"Invalid number of arguments: \" + argText);\n        }\n        numArgs = parseInt(argText);\n        arg = context.consumeArgs(1)[0];\n    }\n\n    // Final arg is the expansion of the macro\n    context.macros.set(name, {\n        tokens: arg,\n        numArgs: numArgs\n    });\n    return '';\n};\ndefineMacro(\"\\\\newcommand\", function (context) {\n    return macros_newcommand(context, false, true);\n});\ndefineMacro(\"\\\\renewcommand\", function (context) {\n    return macros_newcommand(context, true, false);\n});\ndefineMacro(\"\\\\providecommand\", function (context) {\n    return macros_newcommand(context, true, true);\n});\n\n//////////////////////////////////////////////////////////////////////\n// Grouping\n// \\let\\bgroup={ \\let\\egroup=}\ndefineMacro(\"\\\\bgroup\", \"{\");\ndefineMacro(\"\\\\egroup\", \"}\");\ndefineMacro(\"\\\\begingroup\", \"{\");\ndefineMacro(\"\\\\endgroup\", \"}\");\n\n// Symbols from latex.ltx:\n// \\def\\lq{`}\n// \\def\\rq{'}\n// \\def \\aa {\\r a}\n// \\def \\AA {\\r A}\ndefineMacro(\"\\\\lq\", \"`\");\ndefineMacro(\"\\\\rq\", \"'\");\ndefineMacro(\"\\\\aa\", \"\\\\r a\");\ndefineMacro(\"\\\\AA\", \"\\\\r A\");\n\n// Copyright (C) and registered (R) symbols. Use raw symbol in MathML.\n// \\DeclareTextCommandDefault{\\textcopyright}{\\textcircled{c}}\n// \\DeclareTextCommandDefault{\\textregistered}{\\textcircled{%\n//      \\check@mathfonts\\fontsize\\sf@size\\z@\\math@fontsfalse\\selectfont R}}\n// \\DeclareRobustCommand{\\copyright}{%\n//    \\ifmmode{\\nfss@text{\\textcopyright}}\\else\\textcopyright\\fi}\ndefineMacro(\"\\\\textcopyright\", \"\\\\html@mathml{\\\\textcircled{c}}{\\\\char`©}\");\ndefineMacro(\"\\\\copyright\", \"\\\\TextOrMath{\\\\textcopyright}{\\\\text{\\\\textcopyright}}\");\ndefineMacro(\"\\\\textregistered\", \"\\\\html@mathml{\\\\textcircled{\\\\scriptsize R}}{\\\\char`®}\");\n\n// Unicode double-struck letters\ndefineMacro(\"\\u2102\", \"\\\\mathbb{C}\");\ndefineMacro(\"\\u210D\", \"\\\\mathbb{H}\");\ndefineMacro(\"\\u2115\", \"\\\\mathbb{N}\");\ndefineMacro(\"\\u2119\", \"\\\\mathbb{P}\");\ndefineMacro(\"\\u211A\", \"\\\\mathbb{Q}\");\ndefineMacro(\"\\u211D\", \"\\\\mathbb{R}\");\ndefineMacro(\"\\u2124\", \"\\\\mathbb{Z}\");\n\ndefineMacro(\"\\u210E\", \"\\\\mathit{h}\"); // Planck constant\n\n// Characters omitted from Unicode range 1D400–1D7FF\ndefineMacro(\"\\u212C\", \"\\\\mathscr{B}\"); // script\ndefineMacro(\"\\u2130\", \"\\\\mathscr{E}\");\ndefineMacro(\"\\u2131\", \"\\\\mathscr{F}\");\ndefineMacro(\"\\u210B\", \"\\\\mathscr{H}\");\ndefineMacro(\"\\u2110\", \"\\\\mathscr{I}\");\ndefineMacro(\"\\u2112\", \"\\\\mathscr{L}\");\ndefineMacro(\"\\u2133\", \"\\\\mathscr{M}\");\ndefineMacro(\"\\u211B\", \"\\\\mathscr{R}\");\ndefineMacro(\"\\u212D\", \"\\\\mathfrak{C}\"); // Fraktur\ndefineMacro(\"\\u210C\", \"\\\\mathfrak{H}\");\ndefineMacro(\"\\u2128\", \"\\\\mathfrak{Z}\");\n\n// Unicode middle dot\n// The KaTeX fonts do not contain U+00B7. Instead, \\cdotp displays\n// the dot at U+22C5 and gives it punct spacing.\ndefineMacro(\"\\xB7\", \"\\\\cdotp\");\n\n// \\llap and \\rlap render their contents in text mode\ndefineMacro(\"\\\\llap\", \"\\\\mathllap{\\\\textrm{#1}}\");\ndefineMacro(\"\\\\rlap\", \"\\\\mathrlap{\\\\textrm{#1}}\");\ndefineMacro(\"\\\\clap\", \"\\\\mathclap{\\\\textrm{#1}}\");\n\n// \\not is defined by base/fontmath.ltx via\n// \\DeclareMathSymbol{\\not}{\\mathrel}{symbols}{\"36}\n// It's thus treated like a \\mathrel, but defined by a symbol that has zero\n// width but extends to the right.  We use \\rlap to get that spacing.\ndefineMacro(\"\\\\not\", '\\\\mathrel{\\\\mathrlap\\\\@not}');\n\n// Negated symbols from base/fontmath.ltx:\n// \\def\\neq{\\not=} \\let\\ne=\\neq\n// \\DeclareRobustCommand\n//   \\notin{\\mathrel{\\m@th\\mathpalette\\c@ncel\\in}}\n// \\def\\c@ncel#1#2{\\m@th\\ooalign{$\\hfil#1\\mkern1mu/\\hfil$\\crcr$#1#2$}}\ndefineMacro(\"\\\\neq\", \"\\\\html@mathml{\\\\mathrel{\\\\not=}}{\\\\mathrel{\\\\char`≠}}\");\ndefineMacro(\"\\\\ne\", \"\\\\neq\");\ndefineMacro(\"\\u2260\", \"\\\\neq\");\ndefineMacro(\"\\\\notin\", \"\\\\html@mathml{\\\\mathrel{{\\\\in}\\\\mathllap{/\\\\mskip1mu}}}\" + \"{\\\\mathrel{\\\\char`∉}}\");\ndefineMacro(\"\\u2209\", \"\\\\notin\");\n\n// Unicode stacked relations\ndefineMacro(\"\\u2258\", \"\\\\html@mathml{\" + \"\\\\mathrel{=\\\\kern{-1em}\\\\raisebox{0.4em}{$\\\\scriptsize\\\\frown$}}\" + \"}{\\\\mathrel{\\\\char`\\u2258}}\");\ndefineMacro(\"\\u2259\", \"\\\\html@mathml{\\\\stackrel{\\\\tiny\\\\wedge}{=}}{\\\\mathrel{\\\\char`\\u2258}}\");\ndefineMacro(\"\\u225A\", \"\\\\html@mathml{\\\\stackrel{\\\\tiny\\\\vee}{=}}{\\\\mathrel{\\\\char`\\u225A}}\");\ndefineMacro(\"\\u225B\", \"\\\\html@mathml{\\\\stackrel{\\\\scriptsize\\\\star}{=}}\" + \"{\\\\mathrel{\\\\char`\\u225B}}\");\ndefineMacro(\"\\u225D\", \"\\\\html@mathml{\\\\stackrel{\\\\tiny\\\\mathrm{def}}{=}}\" + \"{\\\\mathrel{\\\\char`\\u225D}}\");\ndefineMacro(\"\\u225E\", \"\\\\html@mathml{\\\\stackrel{\\\\tiny\\\\mathrm{m}}{=}}\" + \"{\\\\mathrel{\\\\char`\\u225E}}\");\ndefineMacro(\"\\u225F\", \"\\\\html@mathml{\\\\stackrel{\\\\tiny?}{=}}{\\\\mathrel{\\\\char`\\u225F}}\");\n\n// Misc Unicode\ndefineMacro(\"\\u27C2\", \"\\\\perp\");\ndefineMacro(\"\\u203C\", \"\\\\mathclose{!\\\\mkern-0.8mu!}\");\ndefineMacro(\"\\u220C\", \"\\\\notni\");\ndefineMacro(\"\\u231C\", \"\\\\ulcorner\");\ndefineMacro(\"\\u231D\", \"\\\\urcorner\");\ndefineMacro(\"\\u231E\", \"\\\\llcorner\");\ndefineMacro(\"\\u231F\", \"\\\\lrcorner\");\ndefineMacro(\"\\xA9\", \"\\\\copyright\");\ndefineMacro(\"\\xAE\", \"\\\\textregistered\");\ndefineMacro(\"\\uFE0F\", \"\\\\textregistered\");\n\n//////////////////////////////////////////////////////////////////////\n// LaTeX_2ε\n\n// \\vdots{\\vbox{\\baselineskip4\\p@  \\lineskiplimit\\z@\n// \\kern6\\p@\\hbox{.}\\hbox{.}\\hbox{.}}}\n// We'll call \\varvdots, which gets a glyph from symbols.js.\n// The zero-width rule gets us an equivalent to the vertical 6pt kern.\ndefineMacro(\"\\\\vdots\", \"\\\\mathord{\\\\varvdots\\\\rule{0pt}{15pt}}\");\ndefineMacro(\"\\u22EE\", \"\\\\vdots\");\n\n//////////////////////////////////////////////////////////////////////\n// amsmath.sty\n// http://mirrors.concertpass.com/tex-archive/macros/latex/required/amsmath/amsmath.pdf\n\n// Italic Greek capital letters.  AMS defines these with \\DeclareMathSymbol,\n// but they are equivalent to \\mathit{\\Letter}.\ndefineMacro(\"\\\\varGamma\", \"\\\\mathit{\\\\Gamma}\");\ndefineMacro(\"\\\\varDelta\", \"\\\\mathit{\\\\Delta}\");\ndefineMacro(\"\\\\varTheta\", \"\\\\mathit{\\\\Theta}\");\ndefineMacro(\"\\\\varLambda\", \"\\\\mathit{\\\\Lambda}\");\ndefineMacro(\"\\\\varXi\", \"\\\\mathit{\\\\Xi}\");\ndefineMacro(\"\\\\varPi\", \"\\\\mathit{\\\\Pi}\");\ndefineMacro(\"\\\\varSigma\", \"\\\\mathit{\\\\Sigma}\");\ndefineMacro(\"\\\\varUpsilon\", \"\\\\mathit{\\\\Upsilon}\");\ndefineMacro(\"\\\\varPhi\", \"\\\\mathit{\\\\Phi}\");\ndefineMacro(\"\\\\varPsi\", \"\\\\mathit{\\\\Psi}\");\ndefineMacro(\"\\\\varOmega\", \"\\\\mathit{\\\\Omega}\");\n\n// \\renewcommand{\\colon}{\\nobreak\\mskip2mu\\mathpunct{}\\nonscript\n// \\mkern-\\thinmuskip{:}\\mskip6muplus1mu\\relax}\ndefineMacro(\"\\\\colon\", \"\\\\nobreak\\\\mskip2mu\\\\mathpunct{}\" + \"\\\\mathchoice{\\\\mkern-3mu}{\\\\mkern-3mu}{}{}{:}\\\\mskip6mu\");\n\n// \\newcommand{\\boxed}[1]{\\fbox{\\m@th$\\displaystyle#1$}}\ndefineMacro(\"\\\\boxed\", \"\\\\fbox{$\\\\displaystyle{#1}$}\");\n\n// \\def\\iff{\\DOTSB\\;\\Longleftrightarrow\\;}\n// \\def\\implies{\\DOTSB\\;\\Longrightarrow\\;}\n// \\def\\impliedby{\\DOTSB\\;\\Longleftarrow\\;}\ndefineMacro(\"\\\\iff\", \"\\\\DOTSB\\\\;\\\\Longleftrightarrow\\\\;\");\ndefineMacro(\"\\\\implies\", \"\\\\DOTSB\\\\;\\\\Longrightarrow\\\\;\");\ndefineMacro(\"\\\\impliedby\", \"\\\\DOTSB\\\\;\\\\Longleftarrow\\\\;\");\n\n// AMSMath's automatic \\dots, based on \\mdots@@ macro.\nvar dotsByToken = {\n    ',': '\\\\dotsc',\n    '\\\\not': '\\\\dotsb',\n    // \\keybin@ checks for the following:\n    '+': '\\\\dotsb',\n    '=': '\\\\dotsb',\n    '<': '\\\\dotsb',\n    '>': '\\\\dotsb',\n    '-': '\\\\dotsb',\n    '*': '\\\\dotsb',\n    ':': '\\\\dotsb',\n    // Symbols whose definition starts with \\DOTSB:\n    '\\\\DOTSB': '\\\\dotsb',\n    '\\\\coprod': '\\\\dotsb',\n    '\\\\bigvee': '\\\\dotsb',\n    '\\\\bigwedge': '\\\\dotsb',\n    '\\\\biguplus': '\\\\dotsb',\n    '\\\\bigcap': '\\\\dotsb',\n    '\\\\bigcup': '\\\\dotsb',\n    '\\\\prod': '\\\\dotsb',\n    '\\\\sum': '\\\\dotsb',\n    '\\\\bigotimes': '\\\\dotsb',\n    '\\\\bigoplus': '\\\\dotsb',\n    '\\\\bigodot': '\\\\dotsb',\n    '\\\\bigsqcup': '\\\\dotsb',\n    '\\\\And': '\\\\dotsb',\n    '\\\\longrightarrow': '\\\\dotsb',\n    '\\\\Longrightarrow': '\\\\dotsb',\n    '\\\\longleftarrow': '\\\\dotsb',\n    '\\\\Longleftarrow': '\\\\dotsb',\n    '\\\\longleftrightarrow': '\\\\dotsb',\n    '\\\\Longleftrightarrow': '\\\\dotsb',\n    '\\\\mapsto': '\\\\dotsb',\n    '\\\\longmapsto': '\\\\dotsb',\n    '\\\\hookrightarrow': '\\\\dotsb',\n    '\\\\doteq': '\\\\dotsb',\n    // Symbols whose definition starts with \\mathbin:\n    '\\\\mathbin': '\\\\dotsb',\n    // Symbols whose definition starts with \\mathrel:\n    '\\\\mathrel': '\\\\dotsb',\n    '\\\\relbar': '\\\\dotsb',\n    '\\\\Relbar': '\\\\dotsb',\n    '\\\\xrightarrow': '\\\\dotsb',\n    '\\\\xleftarrow': '\\\\dotsb',\n    // Symbols whose definition starts with \\DOTSI:\n    '\\\\DOTSI': '\\\\dotsi',\n    '\\\\int': '\\\\dotsi',\n    '\\\\oint': '\\\\dotsi',\n    '\\\\iint': '\\\\dotsi',\n    '\\\\iiint': '\\\\dotsi',\n    '\\\\iiiint': '\\\\dotsi',\n    '\\\\idotsint': '\\\\dotsi',\n    // Symbols whose definition starts with \\DOTSX:\n    '\\\\DOTSX': '\\\\dotsx'\n};\n\ndefineMacro(\"\\\\dots\", function (context) {\n    // TODO: If used in text mode, should expand to \\textellipsis.\n    // However, in KaTeX, \\textellipsis and \\ldots behave the same\n    // (in text mode), and it's unlikely we'd see any of the math commands\n    // that affect the behavior of \\dots when in text mode.  So fine for now\n    // (until we support \\ifmmode ... \\else ... \\fi).\n    var thedots = '\\\\dotso';\n    var next = context.expandAfterFuture().text;\n    if (next in dotsByToken) {\n        thedots = dotsByToken[next];\n    } else if (next.substr(0, 4) === '\\\\not') {\n        thedots = '\\\\dotsb';\n    } else if (next in src_symbols.math) {\n        if (utils.contains(['bin', 'rel'], src_symbols.math[next].group)) {\n            thedots = '\\\\dotsb';\n        }\n    }\n    return thedots;\n});\n\nvar spaceAfterDots = {\n    // \\rightdelim@ checks for the following:\n    ')': true,\n    ']': true,\n    '\\\\rbrack': true,\n    '\\\\}': true,\n    '\\\\rbrace': true,\n    '\\\\rangle': true,\n    '\\\\rceil': true,\n    '\\\\rfloor': true,\n    '\\\\rgroup': true,\n    '\\\\rmoustache': true,\n    '\\\\right': true,\n    '\\\\bigr': true,\n    '\\\\biggr': true,\n    '\\\\Bigr': true,\n    '\\\\Biggr': true,\n    // \\extra@ also tests for the following:\n    '$': true,\n    // \\extrap@ checks for the following:\n    ';': true,\n    '.': true,\n    ',': true\n};\n\ndefineMacro(\"\\\\dotso\", function (context) {\n    var next = context.future().text;\n    if (next in spaceAfterDots) {\n        return \"\\\\ldots\\\\,\";\n    } else {\n        return \"\\\\ldots\";\n    }\n});\n\ndefineMacro(\"\\\\dotsc\", function (context) {\n    var next = context.future().text;\n    // \\dotsc uses \\extra@ but not \\extrap@, instead specially checking for\n    // ';' and '.', but doesn't check for ','.\n    if (next in spaceAfterDots && next !== ',') {\n        return \"\\\\ldots\\\\,\";\n    } else {\n        return \"\\\\ldots\";\n    }\n});\n\ndefineMacro(\"\\\\cdots\", function (context) {\n    var next = context.future().text;\n    if (next in spaceAfterDots) {\n        return \"\\\\@cdots\\\\,\";\n    } else {\n        return \"\\\\@cdots\";\n    }\n});\n\ndefineMacro(\"\\\\dotsb\", \"\\\\cdots\");\ndefineMacro(\"\\\\dotsm\", \"\\\\cdots\");\ndefineMacro(\"\\\\dotsi\", \"\\\\!\\\\cdots\");\n// amsmath doesn't actually define \\dotsx, but \\dots followed by a macro\n// starting with \\DOTSX implies \\dotso, and then \\extra@ detects this case\n// and forces the added `\\,`.\ndefineMacro(\"\\\\dotsx\", \"\\\\ldots\\\\,\");\n\n// \\let\\DOTSI\\relax\n// \\let\\DOTSB\\relax\n// \\let\\DOTSX\\relax\ndefineMacro(\"\\\\DOTSI\", \"\\\\relax\");\ndefineMacro(\"\\\\DOTSB\", \"\\\\relax\");\ndefineMacro(\"\\\\DOTSX\", \"\\\\relax\");\n\n// Spacing, based on amsmath.sty's override of LaTeX defaults\n// \\DeclareRobustCommand{\\tmspace}[3]{%\n//   \\ifmmode\\mskip#1#2\\else\\kern#1#3\\fi\\relax}\ndefineMacro(\"\\\\tmspace\", \"\\\\TextOrMath{\\\\kern#1#3}{\\\\mskip#1#2}\\\\relax\");\n// \\renewcommand{\\,}{\\tmspace+\\thinmuskip{.1667em}}\n// TODO: math mode should use \\thinmuskip\ndefineMacro(\"\\\\,\", \"\\\\tmspace+{3mu}{.1667em}\");\n// \\let\\thinspace\\,\ndefineMacro(\"\\\\thinspace\", \"\\\\,\");\n// \\renewcommand{\\:}{\\tmspace+\\medmuskip{.2222em}}\n// TODO: math mode should use \\medmuskip = 4mu plus 2mu minus 4mu\ndefineMacro(\"\\\\:\", \"\\\\tmspace+{4mu}{.2222em}\");\n// \\let\\medspace\\:\ndefineMacro(\"\\\\medspace\", \"\\\\:\");\n// \\renewcommand{\\;}{\\tmspace+\\thickmuskip{.2777em}}\n// TODO: math mode should use \\thickmuskip = 5mu plus 5mu\ndefineMacro(\"\\\\;\", \"\\\\tmspace+{5mu}{.2777em}\");\n// \\let\\thickspace\\;\ndefineMacro(\"\\\\thickspace\", \"\\\\;\");\n// \\renewcommand{\\!}{\\tmspace-\\thinmuskip{.1667em}}\n// TODO: math mode should use \\thinmuskip\ndefineMacro(\"\\\\!\", \"\\\\tmspace-{3mu}{.1667em}\");\n// \\let\\negthinspace\\!\ndefineMacro(\"\\\\negthinspace\", \"\\\\!\");\n// \\newcommand{\\negmedspace}{\\tmspace-\\medmuskip{.2222em}}\n// TODO: math mode should use \\medmuskip\ndefineMacro(\"\\\\negmedspace\", \"\\\\tmspace-{4mu}{.2222em}\");\n// \\newcommand{\\negthickspace}{\\tmspace-\\thickmuskip{.2777em}}\n// TODO: math mode should use \\thickmuskip\ndefineMacro(\"\\\\negthickspace\", \"\\\\tmspace-{5mu}{.277em}\");\n// \\def\\enspace{\\kern.5em }\ndefineMacro(\"\\\\enspace\", \"\\\\kern.5em \");\n// \\def\\enskip{\\hskip.5em\\relax}\ndefineMacro(\"\\\\enskip\", \"\\\\hskip.5em\\\\relax\");\n// \\def\\quad{\\hskip1em\\relax}\ndefineMacro(\"\\\\quad\", \"\\\\hskip1em\\\\relax\");\n// \\def\\qquad{\\hskip2em\\relax}\ndefineMacro(\"\\\\qquad\", \"\\\\hskip2em\\\\relax\");\n\n// \\tag@in@display form of \\tag\ndefineMacro(\"\\\\tag\", \"\\\\@ifstar\\\\tag@literal\\\\tag@paren\");\ndefineMacro(\"\\\\tag@paren\", \"\\\\tag@literal{({#1})}\");\ndefineMacro(\"\\\\tag@literal\", function (context) {\n    if (context.macros.get(\"\\\\df@tag\")) {\n        throw new src_ParseError(\"Multiple \\\\tag\");\n    }\n    return \"\\\\gdef\\\\df@tag{\\\\text{#1}}\";\n});\n\n// \\renewcommand{\\bmod}{\\nonscript\\mskip-\\medmuskip\\mkern5mu\\mathbin\n//   {\\operator@font mod}\\penalty900\n//   \\mkern5mu\\nonscript\\mskip-\\medmuskip}\n// \\newcommand{\\pod}[1]{\\allowbreak\n//   \\if@display\\mkern18mu\\else\\mkern8mu\\fi(#1)}\n// \\renewcommand{\\pmod}[1]{\\pod{{\\operator@font mod}\\mkern6mu#1}}\n// \\newcommand{\\mod}[1]{\\allowbreak\\if@display\\mkern18mu\n//   \\else\\mkern12mu\\fi{\\operator@font mod}\\,\\,#1}\n// TODO: math mode should use \\medmuskip = 4mu plus 2mu minus 4mu\ndefineMacro(\"\\\\bmod\", \"\\\\mathchoice{\\\\mskip1mu}{\\\\mskip1mu}{\\\\mskip5mu}{\\\\mskip5mu}\" + \"\\\\mathbin{\\\\rm mod}\" + \"\\\\mathchoice{\\\\mskip1mu}{\\\\mskip1mu}{\\\\mskip5mu}{\\\\mskip5mu}\");\ndefineMacro(\"\\\\pod\", \"\\\\allowbreak\" + \"\\\\mathchoice{\\\\mkern18mu}{\\\\mkern8mu}{\\\\mkern8mu}{\\\\mkern8mu}(#1)\");\ndefineMacro(\"\\\\pmod\", \"\\\\pod{{\\\\rm mod}\\\\mkern6mu#1}\");\ndefineMacro(\"\\\\mod\", \"\\\\allowbreak\" + \"\\\\mathchoice{\\\\mkern18mu}{\\\\mkern12mu}{\\\\mkern12mu}{\\\\mkern12mu}\" + \"{\\\\rm mod}\\\\,\\\\,#1\");\n\n// \\pmb    --   A simulation of bold.\n// It works by typesetting three copies of the argument with small offsets.\n// Ref: a rather lengthy macro in ambsy.sty\ndefineMacro(\"\\\\pmb\", \"\\\\html@mathml{\\\\@binrel{#1}{\" + \"\\\\mathrlap{#1}\" + \"\\\\mathrlap{\\\\mkern0.4mu\\\\raisebox{0.4mu}{$#1$}}\" + \"{\\\\mkern0.8mu#1}\" + \"}}{\\\\mathbf{#1}}\");\n\n//////////////////////////////////////////////////////////////////////\n// LaTeX source2e\n\n// \\\\ defaults to \\newline, but changes to \\cr within array environment\ndefineMacro(\"\\\\\\\\\", \"\\\\newline\");\n\n// \\def\\TeX{T\\kern-.1667em\\lower.5ex\\hbox{E}\\kern-.125emX\\@}\n// TODO: Doesn't normally work in math mode because \\@ fails.  KaTeX doesn't\n// support \\@ yet, so that's omitted, and we add \\text so that the result\n// doesn't look funny in math mode.\ndefineMacro(\"\\\\TeX\", \"\\\\textrm{\\\\html@mathml{\" + \"T\\\\kern-.1667em\\\\raisebox{-.5ex}{E}\\\\kern-.125emX\" + \"}{TeX}}\");\n\n// \\DeclareRobustCommand{\\LaTeX}{L\\kern-.36em%\n//         {\\sbox\\z@ T%\n//          \\vbox to\\ht\\z@{\\hbox{\\check@mathfonts\n//                               \\fontsize\\sf@size\\z@\n//                               \\math@fontsfalse\\selectfont\n//                               A}%\n//                         \\vss}%\n//         }%\n//         \\kern-.15em%\n//         \\TeX}\n// This code aligns the top of the A with the T (from the perspective of TeX's\n// boxes, though visually the A appears to extend above slightly).\n// We compute the corresponding \\raisebox when A is rendered at \\scriptsize,\n// which is size3, which has a scale factor of 0.7 (see Options.js).\nvar latexRaiseA = fontMetricsData['Main-Regular'][\"T\".charCodeAt(0)][1] - 0.7 * fontMetricsData['Main-Regular'][\"A\".charCodeAt(0)][1] + \"em\";\ndefineMacro(\"\\\\LaTeX\", \"\\\\textrm{\\\\html@mathml{\" + (\"L\\\\kern-.36em\\\\raisebox{\" + latexRaiseA + \"}{\\\\scriptsize A}\") + \"\\\\kern-.15em\\\\TeX}{LaTeX}}\");\n\n// New KaTeX logo based on tweaking LaTeX logo\ndefineMacro(\"\\\\KaTeX\", \"\\\\textrm{\\\\html@mathml{\" + (\"K\\\\kern-.17em\\\\raisebox{\" + latexRaiseA + \"}{\\\\scriptsize A}\") + \"\\\\kern-.15em\\\\TeX}{KaTeX}}\");\n\n// \\DeclareRobustCommand\\hspace{\\@ifstar\\@hspacer\\@hspace}\n// \\def\\@hspace#1{\\hskip  #1\\relax}\n// \\def\\@hspacer#1{\\vrule \\@width\\z@\\nobreak\n//                 \\hskip #1\\hskip \\z@skip}\ndefineMacro(\"\\\\hspace\", \"\\\\@ifstar\\\\@hspacer\\\\@hspace\");\ndefineMacro(\"\\\\@hspace\", \"\\\\hskip #1\\\\relax\");\ndefineMacro(\"\\\\@hspacer\", \"\\\\rule{0pt}{0pt}\\\\hskip #1\\\\relax\");\n\n//////////////////////////////////////////////////////////////////////\n// mathtools.sty\n\n//\\providecommand\\ordinarycolon{:}\ndefineMacro(\"\\\\ordinarycolon\", \":\");\n//\\def\\vcentcolon{\\mathrel{\\mathop\\ordinarycolon}}\n//TODO(edemaine): Not yet centered. Fix via \\raisebox or #726\ndefineMacro(\"\\\\vcentcolon\", \"\\\\mathrel{\\\\mathop\\\\ordinarycolon}\");\n// \\providecommand*\\dblcolon{\\vcentcolon\\mathrel{\\mkern-.9mu}\\vcentcolon}\ndefineMacro(\"\\\\dblcolon\", \"\\\\mathrel{\\\\vcentcolon\\\\mathrel{\\\\mkern-.9mu}\\\\vcentcolon}\");\n// \\providecommand*\\coloneqq{\\vcentcolon\\mathrel{\\mkern-1.2mu}=}\ndefineMacro(\"\\\\coloneqq\", \"\\\\mathrel{\\\\vcentcolon\\\\mathrel{\\\\mkern-1.2mu}=}\");\n// \\providecommand*\\Coloneqq{\\dblcolon\\mathrel{\\mkern-1.2mu}=}\ndefineMacro(\"\\\\Coloneqq\", \"\\\\mathrel{\\\\dblcolon\\\\mathrel{\\\\mkern-1.2mu}=}\");\n// \\providecommand*\\coloneq{\\vcentcolon\\mathrel{\\mkern-1.2mu}\\mathrel{-}}\ndefineMacro(\"\\\\coloneq\", \"\\\\mathrel{\\\\vcentcolon\\\\mathrel{\\\\mkern-1.2mu}\\\\mathrel{-}}\");\n// \\providecommand*\\Coloneq{\\dblcolon\\mathrel{\\mkern-1.2mu}\\mathrel{-}}\ndefineMacro(\"\\\\Coloneq\", \"\\\\mathrel{\\\\dblcolon\\\\mathrel{\\\\mkern-1.2mu}\\\\mathrel{-}}\");\n// \\providecommand*\\eqqcolon{=\\mathrel{\\mkern-1.2mu}\\vcentcolon}\ndefineMacro(\"\\\\eqqcolon\", \"\\\\mathrel{=\\\\mathrel{\\\\mkern-1.2mu}\\\\vcentcolon}\");\n// \\providecommand*\\Eqqcolon{=\\mathrel{\\mkern-1.2mu}\\dblcolon}\ndefineMacro(\"\\\\Eqqcolon\", \"\\\\mathrel{=\\\\mathrel{\\\\mkern-1.2mu}\\\\dblcolon}\");\n// \\providecommand*\\eqcolon{\\mathrel{-}\\mathrel{\\mkern-1.2mu}\\vcentcolon}\ndefineMacro(\"\\\\eqcolon\", \"\\\\mathrel{\\\\mathrel{-}\\\\mathrel{\\\\mkern-1.2mu}\\\\vcentcolon}\");\n// \\providecommand*\\Eqcolon{\\mathrel{-}\\mathrel{\\mkern-1.2mu}\\dblcolon}\ndefineMacro(\"\\\\Eqcolon\", \"\\\\mathrel{\\\\mathrel{-}\\\\mathrel{\\\\mkern-1.2mu}\\\\dblcolon}\");\n// \\providecommand*\\colonapprox{\\vcentcolon\\mathrel{\\mkern-1.2mu}\\approx}\ndefineMacro(\"\\\\colonapprox\", \"\\\\mathrel{\\\\vcentcolon\\\\mathrel{\\\\mkern-1.2mu}\\\\approx}\");\n// \\providecommand*\\Colonapprox{\\dblcolon\\mathrel{\\mkern-1.2mu}\\approx}\ndefineMacro(\"\\\\Colonapprox\", \"\\\\mathrel{\\\\dblcolon\\\\mathrel{\\\\mkern-1.2mu}\\\\approx}\");\n// \\providecommand*\\colonsim{\\vcentcolon\\mathrel{\\mkern-1.2mu}\\sim}\ndefineMacro(\"\\\\colonsim\", \"\\\\mathrel{\\\\vcentcolon\\\\mathrel{\\\\mkern-1.2mu}\\\\sim}\");\n// \\providecommand*\\Colonsim{\\dblcolon\\mathrel{\\mkern-1.2mu}\\sim}\ndefineMacro(\"\\\\Colonsim\", \"\\\\mathrel{\\\\dblcolon\\\\mathrel{\\\\mkern-1.2mu}\\\\sim}\");\n\n// Some Unicode characters are implemented with macros to mathtools functions.\ndefineMacro(\"\\u2254\", \"\\\\coloneqq\"); // :=\ndefineMacro(\"\\u2255\", \"\\\\eqqcolon\"); // =:\ndefineMacro(\"\\u2A74\", \"\\\\Coloneqq\"); // ::=\n\n//////////////////////////////////////////////////////////////////////\n// colonequals.sty\n\n// Alternate names for mathtools's macros:\ndefineMacro(\"\\\\ratio\", \"\\\\vcentcolon\");\ndefineMacro(\"\\\\coloncolon\", \"\\\\dblcolon\");\ndefineMacro(\"\\\\colonequals\", \"\\\\coloneqq\");\ndefineMacro(\"\\\\coloncolonequals\", \"\\\\Coloneqq\");\ndefineMacro(\"\\\\equalscolon\", \"\\\\eqqcolon\");\ndefineMacro(\"\\\\equalscoloncolon\", \"\\\\Eqqcolon\");\ndefineMacro(\"\\\\colonminus\", \"\\\\coloneq\");\ndefineMacro(\"\\\\coloncolonminus\", \"\\\\Coloneq\");\ndefineMacro(\"\\\\minuscolon\", \"\\\\eqcolon\");\ndefineMacro(\"\\\\minuscoloncolon\", \"\\\\Eqcolon\");\n// \\colonapprox name is same in mathtools and colonequals.\ndefineMacro(\"\\\\coloncolonapprox\", \"\\\\Colonapprox\");\n// \\colonsim name is same in mathtools and colonequals.\ndefineMacro(\"\\\\coloncolonsim\", \"\\\\Colonsim\");\n\n// Additional macros, implemented by analogy with mathtools definitions:\ndefineMacro(\"\\\\simcolon\", \"\\\\mathrel{\\\\sim\\\\mathrel{\\\\mkern-1.2mu}\\\\vcentcolon}\");\ndefineMacro(\"\\\\simcoloncolon\", \"\\\\mathrel{\\\\sim\\\\mathrel{\\\\mkern-1.2mu}\\\\dblcolon}\");\ndefineMacro(\"\\\\approxcolon\", \"\\\\mathrel{\\\\approx\\\\mathrel{\\\\mkern-1.2mu}\\\\vcentcolon}\");\ndefineMacro(\"\\\\approxcoloncolon\", \"\\\\mathrel{\\\\approx\\\\mathrel{\\\\mkern-1.2mu}\\\\dblcolon}\");\n\n// Present in newtxmath, pxfonts and txfonts\ndefineMacro(\"\\\\notni\", \"\\\\html@mathml{\\\\not\\\\ni}{\\\\mathrel{\\\\char`\\u220C}}\");\ndefineMacro(\"\\\\limsup\", \"\\\\DOTSB\\\\mathop{\\\\operatorname{lim\\\\,sup}}\\\\limits\");\ndefineMacro(\"\\\\liminf\", \"\\\\DOTSB\\\\mathop{\\\\operatorname{lim\\\\,inf}}\\\\limits\");\n\n//////////////////////////////////////////////////////////////////////\n// texvc.sty\n\n// The texvc package contains macros available in mediawiki pages.\n// We omit the functions deprecated at\n// https://en.wikipedia.org/wiki/Help:Displaying_a_formula#Deprecated_syntax\n\n// We also omit texvc's \\O, which conflicts with \\text{\\O}\n\ndefineMacro(\"\\\\darr\", \"\\\\downarrow\");\ndefineMacro(\"\\\\dArr\", \"\\\\Downarrow\");\ndefineMacro(\"\\\\Darr\", \"\\\\Downarrow\");\ndefineMacro(\"\\\\lang\", \"\\\\langle\");\ndefineMacro(\"\\\\rang\", \"\\\\rangle\");\ndefineMacro(\"\\\\uarr\", \"\\\\uparrow\");\ndefineMacro(\"\\\\uArr\", \"\\\\Uparrow\");\ndefineMacro(\"\\\\Uarr\", \"\\\\Uparrow\");\ndefineMacro(\"\\\\N\", \"\\\\mathbb{N}\");\ndefineMacro(\"\\\\R\", \"\\\\mathbb{R}\");\ndefineMacro(\"\\\\Z\", \"\\\\mathbb{Z}\");\ndefineMacro(\"\\\\alef\", \"\\\\aleph\");\ndefineMacro(\"\\\\alefsym\", \"\\\\aleph\");\ndefineMacro(\"\\\\Alpha\", \"\\\\mathrm{A}\");\ndefineMacro(\"\\\\Beta\", \"\\\\mathrm{B}\");\ndefineMacro(\"\\\\bull\", \"\\\\bullet\");\ndefineMacro(\"\\\\Chi\", \"\\\\mathrm{X}\");\ndefineMacro(\"\\\\clubs\", \"\\\\clubsuit\");\ndefineMacro(\"\\\\cnums\", \"\\\\mathbb{C}\");\ndefineMacro(\"\\\\Complex\", \"\\\\mathbb{C}\");\ndefineMacro(\"\\\\Dagger\", \"\\\\ddagger\");\ndefineMacro(\"\\\\diamonds\", \"\\\\diamondsuit\");\ndefineMacro(\"\\\\empty\", \"\\\\emptyset\");\ndefineMacro(\"\\\\Epsilon\", \"\\\\mathrm{E}\");\ndefineMacro(\"\\\\Eta\", \"\\\\mathrm{H}\");\ndefineMacro(\"\\\\exist\", \"\\\\exists\");\ndefineMacro(\"\\\\harr\", \"\\\\leftrightarrow\");\ndefineMacro(\"\\\\hArr\", \"\\\\Leftrightarrow\");\ndefineMacro(\"\\\\Harr\", \"\\\\Leftrightarrow\");\ndefineMacro(\"\\\\hearts\", \"\\\\heartsuit\");\ndefineMacro(\"\\\\image\", \"\\\\Im\");\ndefineMacro(\"\\\\infin\", \"\\\\infty\");\ndefineMacro(\"\\\\Iota\", \"\\\\mathrm{I}\");\ndefineMacro(\"\\\\isin\", \"\\\\in\");\ndefineMacro(\"\\\\Kappa\", \"\\\\mathrm{K}\");\ndefineMacro(\"\\\\larr\", \"\\\\leftarrow\");\ndefineMacro(\"\\\\lArr\", \"\\\\Leftarrow\");\ndefineMacro(\"\\\\Larr\", \"\\\\Leftarrow\");\ndefineMacro(\"\\\\lrarr\", \"\\\\leftrightarrow\");\ndefineMacro(\"\\\\lrArr\", \"\\\\Leftrightarrow\");\ndefineMacro(\"\\\\Lrarr\", \"\\\\Leftrightarrow\");\ndefineMacro(\"\\\\Mu\", \"\\\\mathrm{M}\");\ndefineMacro(\"\\\\natnums\", \"\\\\mathbb{N}\");\ndefineMacro(\"\\\\Nu\", \"\\\\mathrm{N}\");\ndefineMacro(\"\\\\Omicron\", \"\\\\mathrm{O}\");\ndefineMacro(\"\\\\plusmn\", \"\\\\pm\");\ndefineMacro(\"\\\\rarr\", \"\\\\rightarrow\");\ndefineMacro(\"\\\\rArr\", \"\\\\Rightarrow\");\ndefineMacro(\"\\\\Rarr\", \"\\\\Rightarrow\");\ndefineMacro(\"\\\\real\", \"\\\\Re\");\ndefineMacro(\"\\\\reals\", \"\\\\mathbb{R}\");\ndefineMacro(\"\\\\Reals\", \"\\\\mathbb{R}\");\ndefineMacro(\"\\\\Rho\", \"\\\\mathrm{R}\");\ndefineMacro(\"\\\\sdot\", \"\\\\cdot\");\ndefineMacro(\"\\\\sect\", \"\\\\S\");\ndefineMacro(\"\\\\spades\", \"\\\\spadesuit\");\ndefineMacro(\"\\\\sub\", \"\\\\subset\");\ndefineMacro(\"\\\\sube\", \"\\\\subseteq\");\ndefineMacro(\"\\\\supe\", \"\\\\supseteq\");\ndefineMacro(\"\\\\Tau\", \"\\\\mathrm{T}\");\ndefineMacro(\"\\\\thetasym\", \"\\\\vartheta\");\n// TODO: defineMacro(\"\\\\varcoppa\", \"\\\\\\mbox{\\\\coppa}\");\ndefineMacro(\"\\\\weierp\", \"\\\\wp\");\ndefineMacro(\"\\\\Zeta\", \"\\\\mathrm{Z}\");\n// CONCATENATED MODULE: ./src/MacroExpander.js\n\n\n/**\n * This file contains the “gullet” where macros are expanded\n * until only non-macro tokens remain.\n */\n\n\n\n\n\n\n\n\n\n\n// List of commands that act like macros but aren't defined as a macro,\n// function, or symbol.  Used in `isDefined`.\nvar implicitCommands = {\n    \"\\\\relax\": true, // MacroExpander.js\n    \"^\": true, // Parser.js\n    \"_\": true, // Parser.js\n    \"\\\\limits\": true, // Parser.js\n    \"\\\\nolimits\": true // Parser.js\n};\n\nvar MacroExpander_MacroExpander = function () {\n    function MacroExpander(input, settings, mode) {\n        classCallCheck_default()(this, MacroExpander);\n\n        this.settings = settings;\n        this.expansionCount = 0;\n        this.feed(input);\n        // Make new global namespace\n        this.macros = new src_Namespace(macros, settings.macros);\n        this.mode = mode;\n        this.stack = []; // contains tokens in REVERSE order\n    }\n\n    /**\n     * Feed a new input string to the same MacroExpander\n     * (with existing macros etc.).\n     */\n\n\n    MacroExpander.prototype.feed = function feed(input) {\n        this.lexer = new src_Lexer(input, this.settings);\n    };\n\n    /**\n     * Switches between \"text\" and \"math\" modes.\n     */\n\n\n    MacroExpander.prototype.switchMode = function switchMode(newMode) {\n        this.mode = newMode;\n    };\n\n    /**\n     * Start a new group nesting within all namespaces.\n     */\n\n\n    MacroExpander.prototype.beginGroup = function beginGroup() {\n        this.macros.beginGroup();\n    };\n\n    /**\n     * End current group nesting within all namespaces.\n     */\n\n\n    MacroExpander.prototype.endGroup = function endGroup() {\n        this.macros.endGroup();\n    };\n\n    /**\n     * Returns the topmost token on the stack, without expanding it.\n     * Similar in behavior to TeX's `\\futurelet`.\n     */\n\n\n    MacroExpander.prototype.future = function future() {\n        if (this.stack.length === 0) {\n            this.pushToken(this.lexer.lex());\n        }\n        return this.stack[this.stack.length - 1];\n    };\n\n    /**\n     * Remove and return the next unexpanded token.\n     */\n\n\n    MacroExpander.prototype.popToken = function popToken() {\n        this.future(); // ensure non-empty stack\n        return this.stack.pop();\n    };\n\n    /**\n     * Add a given token to the token stack.  In particular, this get be used\n     * to put back a token returned from one of the other methods.\n     */\n\n\n    MacroExpander.prototype.pushToken = function pushToken(token) {\n        this.stack.push(token);\n    };\n\n    /**\n     * Append an array of tokens to the token stack.\n     */\n\n\n    MacroExpander.prototype.pushTokens = function pushTokens(tokens) {\n        var _stack;\n\n        (_stack = this.stack).push.apply(_stack, tokens);\n    };\n\n    /**\n     * Consume all following space tokens, without expansion.\n     */\n\n\n    MacroExpander.prototype.consumeSpaces = function consumeSpaces() {\n        for (;;) {\n            var token = this.future();\n            if (token.text === \" \") {\n                this.stack.pop();\n            } else {\n                break;\n            }\n        }\n    };\n\n    /**\n     * Consume the specified number of arguments from the token stream,\n     * and return the resulting array of arguments.\n     */\n\n\n    MacroExpander.prototype.consumeArgs = function consumeArgs(numArgs) {\n        var args = [];\n        // obtain arguments, either single token or balanced {…} group\n        for (var i = 0; i < numArgs; ++i) {\n            this.consumeSpaces(); // ignore spaces before each argument\n            var startOfArg = this.popToken();\n            if (startOfArg.text === \"{\") {\n                var arg = [];\n                var depth = 1;\n                while (depth !== 0) {\n                    var tok = this.popToken();\n                    arg.push(tok);\n                    if (tok.text === \"{\") {\n                        ++depth;\n                    } else if (tok.text === \"}\") {\n                        --depth;\n                    } else if (tok.text === \"EOF\") {\n                        throw new src_ParseError(\"End of input in macro argument\", startOfArg);\n                    }\n                }\n                arg.pop(); // remove last }\n                arg.reverse(); // like above, to fit in with stack order\n                args[i] = arg;\n            } else if (startOfArg.text === \"EOF\") {\n                throw new src_ParseError(\"End of input expecting macro argument\");\n            } else {\n                args[i] = [startOfArg];\n            }\n        }\n        return args;\n    };\n\n    /**\n     * Expand the next token only once if possible.\n     *\n     * If the token is expanded, the resulting tokens will be pushed onto\n     * the stack in reverse order and will be returned as an array,\n     * also in reverse order.\n     *\n     * If not, the next token will be returned without removing it\n     * from the stack.  This case can be detected by a `Token` return value\n     * instead of an `Array` return value.\n     *\n     * In either case, the next token will be on the top of the stack,\n     * or the stack will be empty.\n     *\n     * Used to implement `expandAfterFuture` and `expandNextToken`.\n     *\n     * At the moment, macro expansion doesn't handle delimited macros,\n     * i.e. things like those defined by \\def\\foo#1\\end{…}.\n     * See the TeX book page 202ff. for details on how those should behave.\n     */\n\n\n    MacroExpander.prototype.expandOnce = function expandOnce() {\n        var topToken = this.popToken();\n        var name = topToken.text;\n        var expansion = this._getExpansion(name);\n        if (expansion == null) {\n            // mainly checking for undefined here\n            // Fully expanded\n            this.pushToken(topToken);\n            return topToken;\n        }\n        this.expansionCount++;\n        if (this.expansionCount > this.settings.maxExpand) {\n            throw new src_ParseError(\"Too many expansions: infinite loop or \" + \"need to increase maxExpand setting\");\n        }\n        var tokens = expansion.tokens;\n        if (expansion.numArgs) {\n            var args = this.consumeArgs(expansion.numArgs);\n            // paste arguments in place of the placeholders\n            tokens = tokens.slice(); // make a shallow copy\n            for (var i = tokens.length - 1; i >= 0; --i) {\n                var tok = tokens[i];\n                if (tok.text === \"#\") {\n                    if (i === 0) {\n                        throw new src_ParseError(\"Incomplete placeholder at end of macro body\", tok);\n                    }\n                    tok = tokens[--i]; // next token on stack\n                    if (tok.text === \"#\") {\n                        // ## → #\n                        tokens.splice(i + 1, 1); // drop first #\n                    } else if (/^[1-9]$/.test(tok.text)) {\n                        var _tokens;\n\n                        // replace the placeholder with the indicated argument\n                        (_tokens = tokens).splice.apply(_tokens, [i, 2].concat(args[+tok.text - 1]));\n                    } else {\n                        throw new src_ParseError(\"Not a valid argument number\", tok);\n                    }\n                }\n            }\n        }\n        // Concatenate expansion onto top of stack.\n        this.pushTokens(tokens);\n        return tokens;\n    };\n\n    /**\n     * Expand the next token only once (if possible), and return the resulting\n     * top token on the stack (without removing anything from the stack).\n     * Similar in behavior to TeX's `\\expandafter\\futurelet`.\n     * Equivalent to expandOnce() followed by future().\n     */\n\n\n    MacroExpander.prototype.expandAfterFuture = function expandAfterFuture() {\n        this.expandOnce();\n        return this.future();\n    };\n\n    /**\n     * Recursively expand first token, then return first non-expandable token.\n     */\n\n\n    MacroExpander.prototype.expandNextToken = function expandNextToken() {\n        for (;;) {\n            var expanded = this.expandOnce();\n            // expandOnce returns Token if and only if it's fully expanded.\n            if (expanded instanceof Token_Token) {\n                // \\relax stops the expansion, but shouldn't get returned (a\n                // null return value couldn't get implemented as a function).\n                if (expanded.text === \"\\\\relax\") {\n                    this.stack.pop();\n                } else {\n                    return this.stack.pop(); // === expanded\n                }\n            }\n        }\n\n        // Flow unable to figure out that this pathway is impossible.\n        // https://github.com/facebook/flow/issues/4808\n        throw new Error(); // eslint-disable-line no-unreachable\n    };\n\n    /**\n     * Fully expand the given macro name and return the resulting list of\n     * tokens, or return `undefined` if no such macro is defined.\n     */\n\n\n    MacroExpander.prototype.expandMacro = function expandMacro(name) {\n        if (!this.macros.get(name)) {\n            return undefined;\n        }\n        var output = [];\n        var oldStackLength = this.stack.length;\n        this.pushToken(new Token_Token(name));\n        while (this.stack.length > oldStackLength) {\n            var expanded = this.expandOnce();\n            // expandOnce returns Token if and only if it's fully expanded.\n            if (expanded instanceof Token_Token) {\n                output.push(this.stack.pop());\n            }\n        }\n        return output;\n    };\n\n    /**\n     * Fully expand the given macro name and return the result as a string,\n     * or return `undefined` if no such macro is defined.\n     */\n\n\n    MacroExpander.prototype.expandMacroAsText = function expandMacroAsText(name) {\n        var tokens = this.expandMacro(name);\n        if (tokens) {\n            return tokens.map(function (token) {\n                return token.text;\n            }).join(\"\");\n        } else {\n            return tokens;\n        }\n    };\n\n    /**\n     * Returns the expanded macro as a reversed array of tokens and a macro\n     * argument count.  Or returns `null` if no such macro.\n     */\n\n\n    MacroExpander.prototype._getExpansion = function _getExpansion(name) {\n        var definition = this.macros.get(name);\n        if (definition == null) {\n            // mainly checking for undefined here\n            return definition;\n        }\n        var expansion = typeof definition === \"function\" ? definition(this) : definition;\n        if (typeof expansion === \"string\") {\n            var numArgs = 0;\n            if (expansion.indexOf(\"#\") !== -1) {\n                var stripped = expansion.replace(/##/g, \"\");\n                while (stripped.indexOf(\"#\" + (numArgs + 1)) !== -1) {\n                    ++numArgs;\n                }\n            }\n            var bodyLexer = new src_Lexer(expansion, this.settings);\n            var tokens = [];\n            var tok = bodyLexer.lex();\n            while (tok.text !== \"EOF\") {\n                tokens.push(tok);\n                tok = bodyLexer.lex();\n            }\n            tokens.reverse(); // to fit in with stack using push and pop\n            var expanded = { tokens: tokens, numArgs: numArgs };\n            return expanded;\n        }\n\n        return expansion;\n    };\n\n    /**\n     * Determine whether a command is currently \"defined\" (has some\n     * functionality), meaning that it's a macro (in the current group),\n     * a function, a symbol, or one of the special commands listed in\n     * `implicitCommands`.\n     */\n\n\n    MacroExpander.prototype.isDefined = function isDefined(name) {\n        return this.macros.has(name) || src_functions.hasOwnProperty(name) || src_symbols.math.hasOwnProperty(name) || src_symbols.text.hasOwnProperty(name) || implicitCommands.hasOwnProperty(name);\n    };\n\n    return MacroExpander;\n}();\n\n/* harmony default export */ var src_MacroExpander = (MacroExpander_MacroExpander);\n// CONCATENATED MODULE: ./src/unicodeAccents.js\n// Mapping of Unicode accent characters to their LaTeX equivalent in text and\n// math mode (when they exist).\n/* harmony default export */ var unicodeAccents = ({\n    '\\u0301': { text: \"\\\\'\", math: '\\\\acute' },\n    '\\u0300': { text: '\\\\`', math: '\\\\grave' },\n    '\\u0308': { text: '\\\\\"', math: '\\\\ddot' },\n    '\\u0303': { text: '\\\\~', math: '\\\\tilde' },\n    '\\u0304': { text: '\\\\=', math: '\\\\bar' },\n    '\\u0306': { text: '\\\\u', math: '\\\\breve' },\n    '\\u030C': { text: '\\\\v', math: '\\\\check' },\n    '\\u0302': { text: '\\\\^', math: '\\\\hat' },\n    '\\u0307': { text: '\\\\.', math: '\\\\dot' },\n    '\\u030A': { text: '\\\\r', math: '\\\\mathring' },\n    '\\u030B': { text: '\\\\H' }\n});\n// CONCATENATED MODULE: ./src/unicodeSymbols.js\n\n// This file is GENERATED by unicodeMake.js. DO NOT MODIFY.\n\n/* harmony default export */ var unicodeSymbols = ({\n    \"\\xE1\": \"a\\u0301\", // á = \\'{a}\n    \"\\xE0\": \"a\\u0300\", // à = \\`{a}\n    \"\\xE4\": \"a\\u0308\", // ä = \\\"{a}\n    \"\\u01DF\": \"a\\u0308\\u0304\", // ǟ = \\\"\\={a}\n    \"\\xE3\": \"a\\u0303\", // ã = \\~{a}\n    \"\\u0101\": \"a\\u0304\", // ā = \\={a}\n    \"\\u0103\": \"a\\u0306\", // ă = \\u{a}\n    \"\\u1EAF\": \"a\\u0306\\u0301\", // ắ = \\u\\'{a}\n    \"\\u1EB1\": \"a\\u0306\\u0300\", // ằ = \\u\\`{a}\n    \"\\u1EB5\": \"a\\u0306\\u0303\", // ẵ = \\u\\~{a}\n    \"\\u01CE\": \"a\\u030C\", // ǎ = \\v{a}\n    \"\\xE2\": \"a\\u0302\", // â = \\^{a}\n    \"\\u1EA5\": \"a\\u0302\\u0301\", // ấ = \\^\\'{a}\n    \"\\u1EA7\": \"a\\u0302\\u0300\", // ầ = \\^\\`{a}\n    \"\\u1EAB\": \"a\\u0302\\u0303\", // ẫ = \\^\\~{a}\n    \"\\u0227\": \"a\\u0307\", // ȧ = \\.{a}\n    \"\\u01E1\": \"a\\u0307\\u0304\", // ǡ = \\.\\={a}\n    \"\\xE5\": \"a\\u030A\", // å = \\r{a}\n    \"\\u01FB\": \"a\\u030A\\u0301\", // ǻ = \\r\\'{a}\n    \"\\u1E03\": \"b\\u0307\", // ḃ = \\.{b}\n    \"\\u0107\": \"c\\u0301\", // ć = \\'{c}\n    \"\\u010D\": \"c\\u030C\", // č = \\v{c}\n    \"\\u0109\": \"c\\u0302\", // ĉ = \\^{c}\n    \"\\u010B\": \"c\\u0307\", // ċ = \\.{c}\n    \"\\u010F\": \"d\\u030C\", // ď = \\v{d}\n    \"\\u1E0B\": \"d\\u0307\", // ḋ = \\.{d}\n    \"\\xE9\": \"e\\u0301\", // é = \\'{e}\n    \"\\xE8\": \"e\\u0300\", // è = \\`{e}\n    \"\\xEB\": \"e\\u0308\", // ë = \\\"{e}\n    \"\\u1EBD\": \"e\\u0303\", // ẽ = \\~{e}\n    \"\\u0113\": \"e\\u0304\", // ē = \\={e}\n    \"\\u1E17\": \"e\\u0304\\u0301\", // ḗ = \\=\\'{e}\n    \"\\u1E15\": \"e\\u0304\\u0300\", // ḕ = \\=\\`{e}\n    \"\\u0115\": \"e\\u0306\", // ĕ = \\u{e}\n    \"\\u011B\": \"e\\u030C\", // ě = \\v{e}\n    \"\\xEA\": \"e\\u0302\", // ê = \\^{e}\n    \"\\u1EBF\": \"e\\u0302\\u0301\", // ế = \\^\\'{e}\n    \"\\u1EC1\": \"e\\u0302\\u0300\", // ề = \\^\\`{e}\n    \"\\u1EC5\": \"e\\u0302\\u0303\", // ễ = \\^\\~{e}\n    \"\\u0117\": \"e\\u0307\", // ė = \\.{e}\n    \"\\u1E1F\": \"f\\u0307\", // ḟ = \\.{f}\n    \"\\u01F5\": \"g\\u0301\", // ǵ = \\'{g}\n    \"\\u1E21\": \"g\\u0304\", // ḡ = \\={g}\n    \"\\u011F\": \"g\\u0306\", // ğ = \\u{g}\n    \"\\u01E7\": \"g\\u030C\", // ǧ = \\v{g}\n    \"\\u011D\": \"g\\u0302\", // ĝ = \\^{g}\n    \"\\u0121\": \"g\\u0307\", // ġ = \\.{g}\n    \"\\u1E27\": \"h\\u0308\", // ḧ = \\\"{h}\n    \"\\u021F\": \"h\\u030C\", // ȟ = \\v{h}\n    \"\\u0125\": \"h\\u0302\", // ĥ = \\^{h}\n    \"\\u1E23\": \"h\\u0307\", // ḣ = \\.{h}\n    \"\\xED\": \"i\\u0301\", // í = \\'{i}\n    \"\\xEC\": \"i\\u0300\", // ì = \\`{i}\n    \"\\xEF\": \"i\\u0308\", // ï = \\\"{i}\n    \"\\u1E2F\": \"i\\u0308\\u0301\", // ḯ = \\\"\\'{i}\n    \"\\u0129\": \"i\\u0303\", // ĩ = \\~{i}\n    \"\\u012B\": \"i\\u0304\", // ī = \\={i}\n    \"\\u012D\": \"i\\u0306\", // ĭ = \\u{i}\n    \"\\u01D0\": \"i\\u030C\", // ǐ = \\v{i}\n    \"\\xEE\": \"i\\u0302\", // î = \\^{i}\n    \"\\u01F0\": \"j\\u030C\", // ǰ = \\v{j}\n    \"\\u0135\": \"j\\u0302\", // ĵ = \\^{j}\n    \"\\u1E31\": \"k\\u0301\", // ḱ = \\'{k}\n    \"\\u01E9\": \"k\\u030C\", // ǩ = \\v{k}\n    \"\\u013A\": \"l\\u0301\", // ĺ = \\'{l}\n    \"\\u013E\": \"l\\u030C\", // ľ = \\v{l}\n    \"\\u1E3F\": \"m\\u0301\", // ḿ = \\'{m}\n    \"\\u1E41\": \"m\\u0307\", // ṁ = \\.{m}\n    \"\\u0144\": \"n\\u0301\", // ń = \\'{n}\n    \"\\u01F9\": \"n\\u0300\", // ǹ = \\`{n}\n    \"\\xF1\": \"n\\u0303\", // ñ = \\~{n}\n    \"\\u0148\": \"n\\u030C\", // ň = \\v{n}\n    \"\\u1E45\": \"n\\u0307\", // ṅ = \\.{n}\n    \"\\xF3\": \"o\\u0301\", // ó = \\'{o}\n    \"\\xF2\": \"o\\u0300\", // ò = \\`{o}\n    \"\\xF6\": \"o\\u0308\", // ö = \\\"{o}\n    \"\\u022B\": \"o\\u0308\\u0304\", // ȫ = \\\"\\={o}\n    \"\\xF5\": \"o\\u0303\", // õ = \\~{o}\n    \"\\u1E4D\": \"o\\u0303\\u0301\", // ṍ = \\~\\'{o}\n    \"\\u1E4F\": \"o\\u0303\\u0308\", // ṏ = \\~\\\"{o}\n    \"\\u022D\": \"o\\u0303\\u0304\", // ȭ = \\~\\={o}\n    \"\\u014D\": \"o\\u0304\", // ō = \\={o}\n    \"\\u1E53\": \"o\\u0304\\u0301\", // ṓ = \\=\\'{o}\n    \"\\u1E51\": \"o\\u0304\\u0300\", // ṑ = \\=\\`{o}\n    \"\\u014F\": \"o\\u0306\", // ŏ = \\u{o}\n    \"\\u01D2\": \"o\\u030C\", // ǒ = \\v{o}\n    \"\\xF4\": \"o\\u0302\", // ô = \\^{o}\n    \"\\u1ED1\": \"o\\u0302\\u0301\", // ố = \\^\\'{o}\n    \"\\u1ED3\": \"o\\u0302\\u0300\", // ồ = \\^\\`{o}\n    \"\\u1ED7\": \"o\\u0302\\u0303\", // ỗ = \\^\\~{o}\n    \"\\u022F\": \"o\\u0307\", // ȯ = \\.{o}\n    \"\\u0231\": \"o\\u0307\\u0304\", // ȱ = \\.\\={o}\n    \"\\u0151\": \"o\\u030B\", // ő = \\H{o}\n    \"\\u1E55\": \"p\\u0301\", // ṕ = \\'{p}\n    \"\\u1E57\": \"p\\u0307\", // ṗ = \\.{p}\n    \"\\u0155\": \"r\\u0301\", // ŕ = \\'{r}\n    \"\\u0159\": \"r\\u030C\", // ř = \\v{r}\n    \"\\u1E59\": \"r\\u0307\", // ṙ = \\.{r}\n    \"\\u015B\": \"s\\u0301\", // ś = \\'{s}\n    \"\\u1E65\": \"s\\u0301\\u0307\", // ṥ = \\'\\.{s}\n    \"\\u0161\": \"s\\u030C\", // š = \\v{s}\n    \"\\u1E67\": \"s\\u030C\\u0307\", // ṧ = \\v\\.{s}\n    \"\\u015D\": \"s\\u0302\", // ŝ = \\^{s}\n    \"\\u1E61\": \"s\\u0307\", // ṡ = \\.{s}\n    \"\\u1E97\": \"t\\u0308\", // ẗ = \\\"{t}\n    \"\\u0165\": \"t\\u030C\", // ť = \\v{t}\n    \"\\u1E6B\": \"t\\u0307\", // ṫ = \\.{t}\n    \"\\xFA\": \"u\\u0301\", // ú = \\'{u}\n    \"\\xF9\": \"u\\u0300\", // ù = \\`{u}\n    \"\\xFC\": \"u\\u0308\", // ü = \\\"{u}\n    \"\\u01D8\": \"u\\u0308\\u0301\", // ǘ = \\\"\\'{u}\n    \"\\u01DC\": \"u\\u0308\\u0300\", // ǜ = \\\"\\`{u}\n    \"\\u01D6\": \"u\\u0308\\u0304\", // ǖ = \\\"\\={u}\n    \"\\u01DA\": \"u\\u0308\\u030C\", // ǚ = \\\"\\v{u}\n    \"\\u0169\": \"u\\u0303\", // ũ = \\~{u}\n    \"\\u1E79\": \"u\\u0303\\u0301\", // ṹ = \\~\\'{u}\n    \"\\u016B\": \"u\\u0304\", // ū = \\={u}\n    \"\\u1E7B\": \"u\\u0304\\u0308\", // ṻ = \\=\\\"{u}\n    \"\\u016D\": \"u\\u0306\", // ŭ = \\u{u}\n    \"\\u01D4\": \"u\\u030C\", // ǔ = \\v{u}\n    \"\\xFB\": \"u\\u0302\", // û = \\^{u}\n    \"\\u016F\": \"u\\u030A\", // ů = \\r{u}\n    \"\\u0171\": \"u\\u030B\", // ű = \\H{u}\n    \"\\u1E7D\": \"v\\u0303\", // ṽ = \\~{v}\n    \"\\u1E83\": \"w\\u0301\", // ẃ = \\'{w}\n    \"\\u1E81\": \"w\\u0300\", // ẁ = \\`{w}\n    \"\\u1E85\": \"w\\u0308\", // ẅ = \\\"{w}\n    \"\\u0175\": \"w\\u0302\", // ŵ = \\^{w}\n    \"\\u1E87\": \"w\\u0307\", // ẇ = \\.{w}\n    \"\\u1E98\": \"w\\u030A\", // ẘ = \\r{w}\n    \"\\u1E8D\": \"x\\u0308\", // ẍ = \\\"{x}\n    \"\\u1E8B\": \"x\\u0307\", // ẋ = \\.{x}\n    \"\\xFD\": \"y\\u0301\", // ý = \\'{y}\n    \"\\u1EF3\": \"y\\u0300\", // ỳ = \\`{y}\n    \"\\xFF\": \"y\\u0308\", // ÿ = \\\"{y}\n    \"\\u1EF9\": \"y\\u0303\", // ỹ = \\~{y}\n    \"\\u0233\": \"y\\u0304\", // ȳ = \\={y}\n    \"\\u0177\": \"y\\u0302\", // ŷ = \\^{y}\n    \"\\u1E8F\": \"y\\u0307\", // ẏ = \\.{y}\n    \"\\u1E99\": \"y\\u030A\", // ẙ = \\r{y}\n    \"\\u017A\": \"z\\u0301\", // ź = \\'{z}\n    \"\\u017E\": \"z\\u030C\", // ž = \\v{z}\n    \"\\u1E91\": \"z\\u0302\", // ẑ = \\^{z}\n    \"\\u017C\": \"z\\u0307\", // ż = \\.{z}\n    \"\\xC1\": \"A\\u0301\", // Á = \\'{A}\n    \"\\xC0\": \"A\\u0300\", // À = \\`{A}\n    \"\\xC4\": \"A\\u0308\", // Ä = \\\"{A}\n    \"\\u01DE\": \"A\\u0308\\u0304\", // Ǟ = \\\"\\={A}\n    \"\\xC3\": \"A\\u0303\", // Ã = \\~{A}\n    \"\\u0100\": \"A\\u0304\", // Ā = \\={A}\n    \"\\u0102\": \"A\\u0306\", // Ă = \\u{A}\n    \"\\u1EAE\": \"A\\u0306\\u0301\", // Ắ = \\u\\'{A}\n    \"\\u1EB0\": \"A\\u0306\\u0300\", // Ằ = \\u\\`{A}\n    \"\\u1EB4\": \"A\\u0306\\u0303\", // Ẵ = \\u\\~{A}\n    \"\\u01CD\": \"A\\u030C\", // Ǎ = \\v{A}\n    \"\\xC2\": \"A\\u0302\", // Â = \\^{A}\n    \"\\u1EA4\": \"A\\u0302\\u0301\", // Ấ = \\^\\'{A}\n    \"\\u1EA6\": \"A\\u0302\\u0300\", // Ầ = \\^\\`{A}\n    \"\\u1EAA\": \"A\\u0302\\u0303\", // Ẫ = \\^\\~{A}\n    \"\\u0226\": \"A\\u0307\", // Ȧ = \\.{A}\n    \"\\u01E0\": \"A\\u0307\\u0304\", // Ǡ = \\.\\={A}\n    \"\\xC5\": \"A\\u030A\", // Å = \\r{A}\n    \"\\u01FA\": \"A\\u030A\\u0301\", // Ǻ = \\r\\'{A}\n    \"\\u1E02\": \"B\\u0307\", // Ḃ = \\.{B}\n    \"\\u0106\": \"C\\u0301\", // Ć = \\'{C}\n    \"\\u010C\": \"C\\u030C\", // Č = \\v{C}\n    \"\\u0108\": \"C\\u0302\", // Ĉ = \\^{C}\n    \"\\u010A\": \"C\\u0307\", // Ċ = \\.{C}\n    \"\\u010E\": \"D\\u030C\", // Ď = \\v{D}\n    \"\\u1E0A\": \"D\\u0307\", // Ḋ = \\.{D}\n    \"\\xC9\": \"E\\u0301\", // É = \\'{E}\n    \"\\xC8\": \"E\\u0300\", // È = \\`{E}\n    \"\\xCB\": \"E\\u0308\", // Ë = \\\"{E}\n    \"\\u1EBC\": \"E\\u0303\", // Ẽ = \\~{E}\n    \"\\u0112\": \"E\\u0304\", // Ē = \\={E}\n    \"\\u1E16\": \"E\\u0304\\u0301\", // Ḗ = \\=\\'{E}\n    \"\\u1E14\": \"E\\u0304\\u0300\", // Ḕ = \\=\\`{E}\n    \"\\u0114\": \"E\\u0306\", // Ĕ = \\u{E}\n    \"\\u011A\": \"E\\u030C\", // Ě = \\v{E}\n    \"\\xCA\": \"E\\u0302\", // Ê = \\^{E}\n    \"\\u1EBE\": \"E\\u0302\\u0301\", // Ế = \\^\\'{E}\n    \"\\u1EC0\": \"E\\u0302\\u0300\", // Ề = \\^\\`{E}\n    \"\\u1EC4\": \"E\\u0302\\u0303\", // Ễ = \\^\\~{E}\n    \"\\u0116\": \"E\\u0307\", // Ė = \\.{E}\n    \"\\u1E1E\": \"F\\u0307\", // Ḟ = \\.{F}\n    \"\\u01F4\": \"G\\u0301\", // Ǵ = \\'{G}\n    \"\\u1E20\": \"G\\u0304\", // Ḡ = \\={G}\n    \"\\u011E\": \"G\\u0306\", // Ğ = \\u{G}\n    \"\\u01E6\": \"G\\u030C\", // Ǧ = \\v{G}\n    \"\\u011C\": \"G\\u0302\", // Ĝ = \\^{G}\n    \"\\u0120\": \"G\\u0307\", // Ġ = \\.{G}\n    \"\\u1E26\": \"H\\u0308\", // Ḧ = \\\"{H}\n    \"\\u021E\": \"H\\u030C\", // Ȟ = \\v{H}\n    \"\\u0124\": \"H\\u0302\", // Ĥ = \\^{H}\n    \"\\u1E22\": \"H\\u0307\", // Ḣ = \\.{H}\n    \"\\xCD\": \"I\\u0301\", // Í = \\'{I}\n    \"\\xCC\": \"I\\u0300\", // Ì = \\`{I}\n    \"\\xCF\": \"I\\u0308\", // Ï = \\\"{I}\n    \"\\u1E2E\": \"I\\u0308\\u0301\", // Ḯ = \\\"\\'{I}\n    \"\\u0128\": \"I\\u0303\", // Ĩ = \\~{I}\n    \"\\u012A\": \"I\\u0304\", // Ī = \\={I}\n    \"\\u012C\": \"I\\u0306\", // Ĭ = \\u{I}\n    \"\\u01CF\": \"I\\u030C\", // Ǐ = \\v{I}\n    \"\\xCE\": \"I\\u0302\", // Î = \\^{I}\n    \"\\u0130\": \"I\\u0307\", // İ = \\.{I}\n    \"\\u0134\": \"J\\u0302\", // Ĵ = \\^{J}\n    \"\\u1E30\": \"K\\u0301\", // Ḱ = \\'{K}\n    \"\\u01E8\": \"K\\u030C\", // Ǩ = \\v{K}\n    \"\\u0139\": \"L\\u0301\", // Ĺ = \\'{L}\n    \"\\u013D\": \"L\\u030C\", // Ľ = \\v{L}\n    \"\\u1E3E\": \"M\\u0301\", // Ḿ = \\'{M}\n    \"\\u1E40\": \"M\\u0307\", // Ṁ = \\.{M}\n    \"\\u0143\": \"N\\u0301\", // Ń = \\'{N}\n    \"\\u01F8\": \"N\\u0300\", // Ǹ = \\`{N}\n    \"\\xD1\": \"N\\u0303\", // Ñ = \\~{N}\n    \"\\u0147\": \"N\\u030C\", // Ň = \\v{N}\n    \"\\u1E44\": \"N\\u0307\", // Ṅ = \\.{N}\n    \"\\xD3\": \"O\\u0301\", // Ó = \\'{O}\n    \"\\xD2\": \"O\\u0300\", // Ò = \\`{O}\n    \"\\xD6\": \"O\\u0308\", // Ö = \\\"{O}\n    \"\\u022A\": \"O\\u0308\\u0304\", // Ȫ = \\\"\\={O}\n    \"\\xD5\": \"O\\u0303\", // Õ = \\~{O}\n    \"\\u1E4C\": \"O\\u0303\\u0301\", // Ṍ = \\~\\'{O}\n    \"\\u1E4E\": \"O\\u0303\\u0308\", // Ṏ = \\~\\\"{O}\n    \"\\u022C\": \"O\\u0303\\u0304\", // Ȭ = \\~\\={O}\n    \"\\u014C\": \"O\\u0304\", // Ō = \\={O}\n    \"\\u1E52\": \"O\\u0304\\u0301\", // Ṓ = \\=\\'{O}\n    \"\\u1E50\": \"O\\u0304\\u0300\", // Ṑ = \\=\\`{O}\n    \"\\u014E\": \"O\\u0306\", // Ŏ = \\u{O}\n    \"\\u01D1\": \"O\\u030C\", // Ǒ = \\v{O}\n    \"\\xD4\": \"O\\u0302\", // Ô = \\^{O}\n    \"\\u1ED0\": \"O\\u0302\\u0301\", // Ố = \\^\\'{O}\n    \"\\u1ED2\": \"O\\u0302\\u0300\", // Ồ = \\^\\`{O}\n    \"\\u1ED6\": \"O\\u0302\\u0303\", // Ỗ = \\^\\~{O}\n    \"\\u022E\": \"O\\u0307\", // Ȯ = \\.{O}\n    \"\\u0230\": \"O\\u0307\\u0304\", // Ȱ = \\.\\={O}\n    \"\\u0150\": \"O\\u030B\", // Ő = \\H{O}\n    \"\\u1E54\": \"P\\u0301\", // Ṕ = \\'{P}\n    \"\\u1E56\": \"P\\u0307\", // Ṗ = \\.{P}\n    \"\\u0154\": \"R\\u0301\", // Ŕ = \\'{R}\n    \"\\u0158\": \"R\\u030C\", // Ř = \\v{R}\n    \"\\u1E58\": \"R\\u0307\", // Ṙ = \\.{R}\n    \"\\u015A\": \"S\\u0301\", // Ś = \\'{S}\n    \"\\u1E64\": \"S\\u0301\\u0307\", // Ṥ = \\'\\.{S}\n    \"\\u0160\": \"S\\u030C\", // Š = \\v{S}\n    \"\\u1E66\": \"S\\u030C\\u0307\", // Ṧ = \\v\\.{S}\n    \"\\u015C\": \"S\\u0302\", // Ŝ = \\^{S}\n    \"\\u1E60\": \"S\\u0307\", // Ṡ = \\.{S}\n    \"\\u0164\": \"T\\u030C\", // Ť = \\v{T}\n    \"\\u1E6A\": \"T\\u0307\", // Ṫ = \\.{T}\n    \"\\xDA\": \"U\\u0301\", // Ú = \\'{U}\n    \"\\xD9\": \"U\\u0300\", // Ù = \\`{U}\n    \"\\xDC\": \"U\\u0308\", // Ü = \\\"{U}\n    \"\\u01D7\": \"U\\u0308\\u0301\", // Ǘ = \\\"\\'{U}\n    \"\\u01DB\": \"U\\u0308\\u0300\", // Ǜ = \\\"\\`{U}\n    \"\\u01D5\": \"U\\u0308\\u0304\", // Ǖ = \\\"\\={U}\n    \"\\u01D9\": \"U\\u0308\\u030C\", // Ǚ = \\\"\\v{U}\n    \"\\u0168\": \"U\\u0303\", // Ũ = \\~{U}\n    \"\\u1E78\": \"U\\u0303\\u0301\", // Ṹ = \\~\\'{U}\n    \"\\u016A\": \"U\\u0304\", // Ū = \\={U}\n    \"\\u1E7A\": \"U\\u0304\\u0308\", // Ṻ = \\=\\\"{U}\n    \"\\u016C\": \"U\\u0306\", // Ŭ = \\u{U}\n    \"\\u01D3\": \"U\\u030C\", // Ǔ = \\v{U}\n    \"\\xDB\": \"U\\u0302\", // Û = \\^{U}\n    \"\\u016E\": \"U\\u030A\", // Ů = \\r{U}\n    \"\\u0170\": \"U\\u030B\", // Ű = \\H{U}\n    \"\\u1E7C\": \"V\\u0303\", // Ṽ = \\~{V}\n    \"\\u1E82\": \"W\\u0301\", // Ẃ = \\'{W}\n    \"\\u1E80\": \"W\\u0300\", // Ẁ = \\`{W}\n    \"\\u1E84\": \"W\\u0308\", // Ẅ = \\\"{W}\n    \"\\u0174\": \"W\\u0302\", // Ŵ = \\^{W}\n    \"\\u1E86\": \"W\\u0307\", // Ẇ = \\.{W}\n    \"\\u1E8C\": \"X\\u0308\", // Ẍ = \\\"{X}\n    \"\\u1E8A\": \"X\\u0307\", // Ẋ = \\.{X}\n    \"\\xDD\": \"Y\\u0301\", // Ý = \\'{Y}\n    \"\\u1EF2\": \"Y\\u0300\", // Ỳ = \\`{Y}\n    \"\\u0178\": \"Y\\u0308\", // Ÿ = \\\"{Y}\n    \"\\u1EF8\": \"Y\\u0303\", // Ỹ = \\~{Y}\n    \"\\u0232\": \"Y\\u0304\", // Ȳ = \\={Y}\n    \"\\u0176\": \"Y\\u0302\", // Ŷ = \\^{Y}\n    \"\\u1E8E\": \"Y\\u0307\", // Ẏ = \\.{Y}\n    \"\\u0179\": \"Z\\u0301\", // Ź = \\'{Z}\n    \"\\u017D\": \"Z\\u030C\", // Ž = \\v{Z}\n    \"\\u1E90\": \"Z\\u0302\", // Ẑ = \\^{Z}\n    \"\\u017B\": \"Z\\u0307\", // Ż = \\.{Z}\n    \"\\u03AC\": \"\\u03B1\\u0301\", // ά = \\'{α}\n    \"\\u1F70\": \"\\u03B1\\u0300\", // ὰ = \\`{α}\n    \"\\u1FB1\": \"\\u03B1\\u0304\", // ᾱ = \\={α}\n    \"\\u1FB0\": \"\\u03B1\\u0306\", // ᾰ = \\u{α}\n    \"\\u03AD\": \"\\u03B5\\u0301\", // έ = \\'{ε}\n    \"\\u1F72\": \"\\u03B5\\u0300\", // ὲ = \\`{ε}\n    \"\\u03AE\": \"\\u03B7\\u0301\", // ή = \\'{η}\n    \"\\u1F74\": \"\\u03B7\\u0300\", // ὴ = \\`{η}\n    \"\\u03AF\": \"\\u03B9\\u0301\", // ί = \\'{ι}\n    \"\\u1F76\": \"\\u03B9\\u0300\", // ὶ = \\`{ι}\n    \"\\u03CA\": \"\\u03B9\\u0308\", // ϊ = \\\"{ι}\n    \"\\u0390\": \"\\u03B9\\u0308\\u0301\", // ΐ = \\\"\\'{ι}\n    \"\\u1FD2\": \"\\u03B9\\u0308\\u0300\", // ῒ = \\\"\\`{ι}\n    \"\\u1FD1\": \"\\u03B9\\u0304\", // ῑ = \\={ι}\n    \"\\u1FD0\": \"\\u03B9\\u0306\", // ῐ = \\u{ι}\n    \"\\u03CC\": \"\\u03BF\\u0301\", // ό = \\'{ο}\n    \"\\u1F78\": \"\\u03BF\\u0300\", // ὸ = \\`{ο}\n    \"\\u03CD\": \"\\u03C5\\u0301\", // ύ = \\'{υ}\n    \"\\u1F7A\": \"\\u03C5\\u0300\", // ὺ = \\`{υ}\n    \"\\u03CB\": \"\\u03C5\\u0308\", // ϋ = \\\"{υ}\n    \"\\u03B0\": \"\\u03C5\\u0308\\u0301\", // ΰ = \\\"\\'{υ}\n    \"\\u1FE2\": \"\\u03C5\\u0308\\u0300\", // ῢ = \\\"\\`{υ}\n    \"\\u1FE1\": \"\\u03C5\\u0304\", // ῡ = \\={υ}\n    \"\\u1FE0\": \"\\u03C5\\u0306\", // ῠ = \\u{υ}\n    \"\\u03CE\": \"\\u03C9\\u0301\", // ώ = \\'{ω}\n    \"\\u1F7C\": \"\\u03C9\\u0300\", // ὼ = \\`{ω}\n    \"\\u038E\": \"\\u03A5\\u0301\", // Ύ = \\'{Υ}\n    \"\\u1FEA\": \"\\u03A5\\u0300\", // Ὺ = \\`{Υ}\n    \"\\u03AB\": \"\\u03A5\\u0308\", // Ϋ = \\\"{Υ}\n    \"\\u1FE9\": \"\\u03A5\\u0304\", // Ῡ = \\={Υ}\n    \"\\u1FE8\": \"\\u03A5\\u0306\", // Ῠ = \\u{Υ}\n    \"\\u038F\": \"\\u03A9\\u0301\", // Ώ = \\'{Ω}\n    \"\\u1FFA\": \"\\u03A9\\u0300\" // Ὼ = \\`{Ω}\n});\n// CONCATENATED MODULE: ./src/Parser.js\n\n\n/* eslint no-constant-condition:0 */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * This file contains the parser used to parse out a TeX expression from the\n * input. Since TeX isn't context-free, standard parsers don't work particularly\n * well.\n *\n * The strategy of this parser is as such:\n *\n * The main functions (the `.parse...` ones) take a position in the current\n * parse string to parse tokens from. The lexer (found in Lexer.js, stored at\n * this.gullet.lexer) also supports pulling out tokens at arbitrary places. When\n * individual tokens are needed at a position, the lexer is called to pull out a\n * token, which is then used.\n *\n * The parser has a property called \"mode\" indicating the mode that\n * the parser is currently in. Currently it has to be one of \"math\" or\n * \"text\", which denotes whether the current environment is a math-y\n * one or a text-y one (e.g. inside \\text). Currently, this serves to\n * limit the functions which can be used in text mode.\n *\n * The main functions then return an object which contains the useful data that\n * was parsed at its given point, and a new position at the end of the parsed\n * data. The main functions can call each other and continue the parsing by\n * using the returned position as a new starting point.\n *\n * There are also extra `.handle...` functions, which pull out some reused\n * functionality into self-contained functions.\n *\n * The earlier functions return ParseNodes.\n * The later functions (which are called deeper in the parse) sometimes return\n * ParsedFuncOrArg, which contain a ParseNode as well as some data about\n * whether the parsed object is a function which is missing some arguments, or a\n * standalone object which can be used as an argument to another function.\n */\n\nfunction newArgument(result, token) {\n    return { type: \"arg\", result: result, token: token };\n}\n\nfunction newFunction(token) {\n    return { type: \"fn\", result: token.text, token: token };\n}\n\nvar Parser_Parser = function () {\n    function Parser(input, settings) {\n        classCallCheck_default()(this, Parser);\n\n        // Start in math mode\n        this.mode = \"math\";\n        // Create a new macro expander (gullet) and (indirectly via that) also a\n        // new lexer (mouth) for this parser (stomach, in the language of TeX)\n        this.gullet = new src_MacroExpander(input, settings, this.mode);\n        // Store the settings for use in parsing\n        this.settings = settings;\n        // Count leftright depth (for \\middle errors)\n        this.leftrightDepth = 0;\n    }\n\n    /**\n     * Checks a result to make sure it has the right type, and throws an\n     * appropriate error otherwise.\n     */\n\n\n    Parser.prototype.expect = function expect(text) {\n        var consume = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n        if (this.nextToken.text !== text) {\n            throw new src_ParseError(\"Expected '\" + text + \"', got '\" + this.nextToken.text + \"'\", this.nextToken);\n        }\n        if (consume) {\n            this.consume();\n        }\n    };\n\n    /**\n     * Considers the current look ahead token as consumed,\n     * and fetches the one after that as the new look ahead.\n     */\n\n\n    Parser.prototype.consume = function consume() {\n        this.nextToken = this.gullet.expandNextToken();\n    };\n\n    /**\n     * Switches between \"text\" and \"math\" modes.\n     */\n\n\n    Parser.prototype.switchMode = function switchMode(newMode) {\n        this.mode = newMode;\n        this.gullet.switchMode(newMode);\n    };\n\n    /**\n     * Main parsing function, which parses an entire input.\n     */\n\n\n    Parser.prototype.parse = function parse() {\n        // Create a group namespace for the math expression.\n        // (LaTeX creates a new group for every $...$, $$...$$, \\[...\\].)\n        this.gullet.beginGroup();\n\n        // Use old \\color behavior (same as LaTeX's \\textcolor) if requested.\n        // We do this within the group for the math expression, so it doesn't\n        // pollute settings.macros.\n        if (this.settings.colorIsTextColor) {\n            this.gullet.macros.set(\"\\\\color\", \"\\\\textcolor\");\n        }\n\n        // Try to parse the input\n        this.consume();\n        var parse = this.parseExpression(false);\n\n        // If we succeeded, make sure there's an EOF at the end\n        this.expect(\"EOF\", false);\n\n        // End the group namespace for the expression\n        this.gullet.endGroup();\n        return parse;\n    };\n\n    /**\n     * Parses an \"expression\", which is a list of atoms.\n     *\n     * `breakOnInfix`: Should the parsing stop when we hit infix nodes? This\n     *                 happens when functions have higher precendence han infix\n     *                 nodes in implicit parses.\n     *\n     * `breakOnTokenText`: The text of the token that the expression should end\n     *                     with, or `null` if something else should end the\n     *                     expression.\n     */\n    Parser.prototype.parseExpression = function parseExpression(breakOnInfix, breakOnTokenText) {\n        var body = [];\n        // Keep adding atoms to the body until we can't parse any more atoms (either\n        // we reached the end, a }, or a \\right)\n        while (true) {\n            // Ignore spaces in math mode\n            if (this.mode === \"math\") {\n                this.consumeSpaces();\n            }\n            var lex = this.nextToken;\n            if (Parser.endOfExpression.indexOf(lex.text) !== -1) {\n                break;\n            }\n            if (breakOnTokenText && lex.text === breakOnTokenText) {\n                break;\n            }\n            if (breakOnInfix && src_functions[lex.text] && src_functions[lex.text].infix) {\n                break;\n            }\n            var atom = this.parseAtom(breakOnTokenText);\n            if (!atom) {\n                if (!this.settings.throwOnError && lex.text[0] === \"\\\\\") {\n                    var errorNode = this.handleUnsupportedCmd();\n                    body.push(errorNode);\n                    continue;\n                }\n\n                break;\n            }\n            body.push(atom);\n        }\n        if (this.mode === \"text\") {\n            this.formLigatures(body);\n        }\n        return this.handleInfixNodes(body);\n    };\n\n    /**\n     * Rewrites infix operators such as \\over with corresponding commands such\n     * as \\frac.\n     *\n     * There can only be one infix operator per group.  If there's more than one\n     * then the expression is ambiguous.  This can be resolved by adding {}.\n     */\n\n\n    Parser.prototype.handleInfixNodes = function handleInfixNodes(body) {\n        var overIndex = -1;\n        var funcName = void 0;\n\n        for (var i = 0; i < body.length; i++) {\n            var node = checkNodeType(body[i], \"infix\");\n            if (node) {\n                if (overIndex !== -1) {\n                    throw new src_ParseError(\"only one infix operator per group\", node.token);\n                }\n                overIndex = i;\n                funcName = node.replaceWith;\n            }\n        }\n\n        if (overIndex !== -1 && funcName) {\n            var numerNode = void 0;\n            var denomNode = void 0;\n\n            var numerBody = body.slice(0, overIndex);\n            var denomBody = body.slice(overIndex + 1);\n\n            if (numerBody.length === 1 && numerBody[0].type === \"ordgroup\") {\n                numerNode = numerBody[0];\n            } else {\n                numerNode = { type: \"ordgroup\", mode: this.mode, body: numerBody };\n            }\n\n            if (denomBody.length === 1 && denomBody[0].type === \"ordgroup\") {\n                denomNode = denomBody[0];\n            } else {\n                denomNode = { type: \"ordgroup\", mode: this.mode, body: denomBody };\n            }\n\n            var _node = void 0;\n            if (funcName === \"\\\\\\\\abovefrac\") {\n                _node = this.callFunction(funcName, [numerNode, body[overIndex], denomNode], []);\n            } else {\n                _node = this.callFunction(funcName, [numerNode, denomNode], []);\n            }\n            return [_node];\n        } else {\n            return body;\n        }\n    };\n\n    // The greediness of a superscript or subscript\n\n\n    /**\n     * Handle a subscript or superscript with nice errors.\n     */\n    Parser.prototype.handleSupSubscript = function handleSupSubscript(name) {\n        var symbolToken = this.nextToken;\n        var symbol = symbolToken.text;\n        this.consume();\n        this.consumeSpaces(); // ignore spaces before sup/subscript argument\n        var group = this.parseGroup();\n\n        if (!group) {\n            if (!this.settings.throwOnError && this.nextToken.text[0] === \"\\\\\") {\n                return this.handleUnsupportedCmd();\n            } else {\n                throw new src_ParseError(\"Expected group after '\" + symbol + \"'\", symbolToken);\n            }\n        }\n\n        if (group.type === \"fn\") {\n            // ^ and _ have a greediness, so handle interactions with functions'\n            // greediness\n            var funcGreediness = src_functions[group.result].greediness;\n            if (funcGreediness > Parser.SUPSUB_GREEDINESS) {\n                return this.parseGivenFunction(group);\n            } else {\n                throw new src_ParseError(\"Got function '\" + group.result + \"' with no arguments \" + \"as \" + name, symbolToken);\n            }\n        } else {\n            return group.result;\n        }\n    };\n\n    /**\n     * Converts the textual input of an unsupported command into a text node\n     * contained within a color node whose color is determined by errorColor\n     */\n\n\n    Parser.prototype.handleUnsupportedCmd = function handleUnsupportedCmd() {\n        var text = this.nextToken.text;\n        var textordArray = [];\n\n        for (var i = 0; i < text.length; i++) {\n            textordArray.push({ type: \"textord\", mode: \"text\", text: text[i] });\n        }\n\n        var textNode = {\n            type: \"text\",\n            mode: this.mode,\n            body: textordArray\n        };\n\n        var colorNode = {\n            type: \"color\",\n            mode: this.mode,\n            color: this.settings.errorColor,\n            body: [textNode]\n        };\n\n        this.consume();\n        return colorNode;\n    };\n\n    /**\n     * Parses a group with optional super/subscripts.\n     */\n\n\n    Parser.prototype.parseAtom = function parseAtom(breakOnTokenText) {\n        // The body of an atom is an implicit group, so that things like\n        // \\left(x\\right)^2 work correctly.\n        var base = this.parseImplicitGroup(breakOnTokenText);\n\n        // In text mode, we don't have superscripts or subscripts\n        if (this.mode === \"text\") {\n            return base;\n        }\n\n        // Note that base may be empty (i.e. null) at this point.\n\n        var superscript = void 0;\n        var subscript = void 0;\n        while (true) {\n            // Guaranteed in math mode, so eat any spaces first.\n            this.consumeSpaces();\n\n            // Lex the first token\n            var lex = this.nextToken;\n\n            if (lex.text === \"\\\\limits\" || lex.text === \"\\\\nolimits\") {\n                // We got a limit control\n                var opNode = checkNodeType(base, \"op\");\n                if (opNode) {\n                    var limits = lex.text === \"\\\\limits\";\n                    opNode.limits = limits;\n                    opNode.alwaysHandleSupSub = true;\n                } else {\n                    throw new src_ParseError(\"Limit controls must follow a math operator\", lex);\n                }\n                this.consume();\n            } else if (lex.text === \"^\") {\n                // We got a superscript start\n                if (superscript) {\n                    throw new src_ParseError(\"Double superscript\", lex);\n                }\n                superscript = this.handleSupSubscript(\"superscript\");\n            } else if (lex.text === \"_\") {\n                // We got a subscript start\n                if (subscript) {\n                    throw new src_ParseError(\"Double subscript\", lex);\n                }\n                subscript = this.handleSupSubscript(\"subscript\");\n            } else if (lex.text === \"'\") {\n                // We got a prime\n                if (superscript) {\n                    throw new src_ParseError(\"Double superscript\", lex);\n                }\n                var prime = { type: \"textord\", mode: this.mode, text: \"\\\\prime\" };\n\n                // Many primes can be grouped together, so we handle this here\n                var primes = [prime];\n                this.consume();\n                // Keep lexing tokens until we get something that's not a prime\n                while (this.nextToken.text === \"'\") {\n                    // For each one, add another prime to the list\n                    primes.push(prime);\n                    this.consume();\n                }\n                // If there's a superscript following the primes, combine that\n                // superscript in with the primes.\n                if (this.nextToken.text === \"^\") {\n                    primes.push(this.handleSupSubscript(\"superscript\"));\n                }\n                // Put everything into an ordgroup as the superscript\n                superscript = { type: \"ordgroup\", mode: this.mode, body: primes };\n            } else {\n                // If it wasn't ^, _, or ', stop parsing super/subscripts\n                break;\n            }\n        }\n\n        // Base must be set if superscript or subscript are set per logic above,\n        // but need to check here for type check to pass.\n        if (superscript || subscript) {\n            // If we got either a superscript or subscript, create a supsub\n            return {\n                type: \"supsub\",\n                mode: this.mode,\n                base: base,\n                sup: superscript,\n                sub: subscript\n            };\n        } else {\n            // Otherwise return the original body\n            return base;\n        }\n    };\n\n    /**\n     * Parses an implicit group, which is a group that starts at the end of a\n     * specified, and ends right before a higher explicit group ends, or at EOL. It\n     * is used for functions that appear to affect the current style, like \\Large or\n     * \\textrm, where instead of keeping a style we just pretend that there is an\n     * implicit grouping after it until the end of the group. E.g.\n     *   small text {\\Large large text} small text again\n     */\n\n\n    Parser.prototype.parseImplicitGroup = function parseImplicitGroup(breakOnTokenText) {\n        var start = this.parseSymbol();\n\n        if (start == null) {\n            // If we didn't get anything we handle, fall back to parseFunction\n            return this.parseFunction();\n        } else if (start.type === \"arg\") {\n            // Defer to parseGivenFunction if it's not a function we handle\n            return this.parseGivenFunction(start);\n        }\n\n        var func = start.result;\n\n        if (func === \"\\\\begin\") {\n            // begin...end is similar to left...right\n            var begin = assertNodeType(this.parseGivenFunction(start), \"environment\");\n\n            var envName = begin.name;\n            if (!src_environments.hasOwnProperty(envName)) {\n                throw new src_ParseError(\"No such environment: \" + envName, begin.nameGroup);\n            }\n            // Build the environment object. Arguments and other information will\n            // be made available to the begin and end methods using properties.\n            var env = src_environments[envName];\n\n            var _parseArguments = this.parseArguments(\"\\\\begin{\" + envName + \"}\", env),\n                args = _parseArguments.args,\n                optArgs = _parseArguments.optArgs;\n\n            var context = {\n                mode: this.mode,\n                envName: envName,\n                parser: this\n            };\n            var _result = env.handler(context, args, optArgs);\n            this.expect(\"\\\\end\", false);\n            var endNameToken = this.nextToken;\n            var end = this.parseFunction();\n            if (!end) {\n                throw new src_ParseError(\"failed to parse function after \\\\end\");\n            }\n            end = assertNodeType(end, \"environment\");\n            if (end.name !== envName) {\n                throw new src_ParseError(\"Mismatch: \\\\begin{\" + envName + \"} matched by \\\\end{\" + end.name + \"}\", endNameToken);\n            }\n            return _result;\n        } else {\n            // Defer to parseGivenFunction if it's not a function we handle\n            return this.parseGivenFunction(start, breakOnTokenText);\n        }\n    };\n\n    /**\n     * Parses an entire function, including its base and all of its arguments.\n     * It also handles the case where the parsed node is not a function.\n     */\n\n\n    Parser.prototype.parseFunction = function parseFunction() {\n        var baseGroup = this.parseGroup();\n        return baseGroup ? this.parseGivenFunction(baseGroup) : null;\n    };\n\n    /**\n     * Same as parseFunction(), except that the base is provided, guaranteeing a\n     * non-nullable result.\n     */\n\n\n    Parser.prototype.parseGivenFunction = function parseGivenFunction(baseGroup, breakOnTokenText) {\n        if (baseGroup.type === \"fn\") {\n            var func = baseGroup.result;\n            var funcData = src_functions[func];\n            if (this.mode === \"text\" && !funcData.allowedInText) {\n                throw new src_ParseError(\"Can't use function '\" + func + \"' in text mode\", baseGroup.token);\n            } else if (this.mode === \"math\" && funcData.allowedInMath === false) {\n                throw new src_ParseError(\"Can't use function '\" + func + \"' in math mode\", baseGroup.token);\n            }\n\n            // Consume the command token after possibly switching to the\n            // mode specified by the function (for instant mode switching),\n            // and then immediately switch back.\n            if (funcData.consumeMode) {\n                var oldMode = this.mode;\n                this.switchMode(funcData.consumeMode);\n                this.consume();\n                this.switchMode(oldMode);\n            } else {\n                this.consume();\n            }\n\n            var _parseArguments2 = this.parseArguments(func, funcData),\n                args = _parseArguments2.args,\n                optArgs = _parseArguments2.optArgs;\n\n            var _token = baseGroup.token;\n            return this.callFunction(func, args, optArgs, _token, breakOnTokenText);\n        } else {\n            return baseGroup.result;\n        }\n    };\n\n    /**\n     * Call a function handler with a suitable context and arguments.\n     */\n\n\n    Parser.prototype.callFunction = function callFunction(name, args, optArgs, token, breakOnTokenText) {\n        var context = {\n            funcName: name,\n            parser: this,\n            token: token,\n            breakOnTokenText: breakOnTokenText\n        };\n        var func = src_functions[name];\n        if (func && func.handler) {\n            return func.handler(context, args, optArgs);\n        } else {\n            throw new src_ParseError(\"No function handler for \" + name);\n        }\n    };\n\n    /**\n     * Parses the arguments of a function or environment\n     */\n\n\n    Parser.prototype.parseArguments = function parseArguments(func, // Should look like \"\\name\" or \"\\begin{name}\".\n    funcData) {\n        var totalArgs = funcData.numArgs + funcData.numOptionalArgs;\n        if (totalArgs === 0) {\n            return { args: [], optArgs: [] };\n        }\n\n        var baseGreediness = funcData.greediness;\n        var args = [];\n        var optArgs = [];\n\n        for (var i = 0; i < totalArgs; i++) {\n            var argType = funcData.argTypes && funcData.argTypes[i];\n            var isOptional = i < funcData.numOptionalArgs;\n            // Ignore spaces between arguments.  As the TeXbook says:\n            // \"After you have said ‘\\def\\row#1#2{...}’, you are allowed to\n            //  put spaces between the arguments (e.g., ‘\\row x n’), because\n            //  TeX doesn’t use single spaces as undelimited arguments.\"\n            if (i > 0 && !isOptional) {\n                this.consumeSpaces();\n            }\n            // Also consume leading spaces in math mode, as parseSymbol\n            // won't know what to do with them.  This can only happen with\n            // macros, e.g. \\frac\\foo\\foo where \\foo expands to a space symbol.\n            // In LaTeX, the \\foo's get treated as (blank) arguments).\n            // In KaTeX, for now, both spaces will get consumed.\n            // TODO(edemaine)\n            if (i === 0 && !isOptional && this.mode === \"math\") {\n                this.consumeSpaces();\n            }\n            var nextToken = this.nextToken;\n            var arg = argType ? this.parseGroupOfType(argType, isOptional) : this.parseGroup(isOptional);\n            if (!arg) {\n                if (isOptional) {\n                    optArgs.push(null);\n                    continue;\n                }\n                if (!this.settings.throwOnError && this.nextToken.text[0] === \"\\\\\") {\n                    arg = newArgument(this.handleUnsupportedCmd(), nextToken);\n                } else {\n                    throw new src_ParseError(\"Expected group after '\" + func + \"'\", nextToken);\n                }\n            }\n            var argNode = void 0;\n            if (arg.type === \"fn\") {\n                var argGreediness = src_functions[arg.result].greediness;\n                if (argGreediness > baseGreediness) {\n                    argNode = this.parseGivenFunction(arg);\n                } else {\n                    throw new src_ParseError(\"Got function '\" + arg.result + \"' as \" + \"argument to '\" + func + \"'\", nextToken);\n                }\n            } else {\n                argNode = arg.result;\n            }\n            (isOptional ? optArgs : args).push(argNode);\n        }\n\n        return { args: args, optArgs: optArgs };\n    };\n\n    /**\n     * Parses a group when the mode is changing.\n     */\n\n\n    Parser.prototype.parseGroupOfType = function parseGroupOfType(type, // Used to describe the mode in error messages.\n    optional) {\n        // Handle `original` argTypes\n        if (type === \"original\") {\n            type = this.mode;\n        }\n\n        if (type === \"color\") {\n            return this.parseColorGroup(optional);\n        }\n        if (type === \"size\") {\n            return this.parseSizeGroup(optional);\n        }\n        if (type === \"url\") {\n            throw new src_ParseError(\"Internal bug: 'url' arguments should be handled by Lexer\", this.nextToken);\n        }\n\n        // By the time we get here, type is one of \"text\" or \"math\".\n        // Specify this as mode to parseGroup.\n        return this.parseGroup(optional, type);\n    };\n\n    Parser.prototype.consumeSpaces = function consumeSpaces() {\n        while (this.nextToken.text === \" \") {\n            this.consume();\n        }\n    };\n\n    /**\n     * Parses a group, essentially returning the string formed by the\n     * brace-enclosed tokens plus some position information.\n     */\n\n\n    Parser.prototype.parseStringGroup = function parseStringGroup(modeName, // Used to describe the mode in error messages.\n    optional) {\n        if (optional && this.nextToken.text !== \"[\") {\n            return null;\n        }\n        var outerMode = this.mode;\n        this.mode = \"text\";\n        this.expect(optional ? \"[\" : \"{\");\n        var str = \"\";\n        var firstToken = this.nextToken;\n        var lastToken = firstToken;\n        while (this.nextToken.text !== (optional ? \"]\" : \"}\")) {\n            if (this.nextToken.text === \"EOF\") {\n                throw new src_ParseError(\"Unexpected end of input in \" + modeName, firstToken.range(this.nextToken, str));\n            }\n            lastToken = this.nextToken;\n            str += lastToken.text;\n            this.consume();\n        }\n        this.mode = outerMode;\n        this.expect(optional ? \"]\" : \"}\");\n        return firstToken.range(lastToken, str);\n    };\n\n    /**\n     * Parses a regex-delimited group: the largest sequence of tokens\n     * whose concatenated strings match `regex`. Returns the string\n     * formed by the tokens plus some position information.\n     */\n\n\n    Parser.prototype.parseRegexGroup = function parseRegexGroup(regex, modeName) {\n        var outerMode = this.mode;\n        this.mode = \"text\";\n        var firstToken = this.nextToken;\n        var lastToken = firstToken;\n        var str = \"\";\n        while (this.nextToken.text !== \"EOF\" && regex.test(str + this.nextToken.text)) {\n            lastToken = this.nextToken;\n            str += lastToken.text;\n            this.consume();\n        }\n        if (str === \"\") {\n            throw new src_ParseError(\"Invalid \" + modeName + \": '\" + firstToken.text + \"'\", firstToken);\n        }\n        this.mode = outerMode;\n        return firstToken.range(lastToken, str);\n    };\n\n    /**\n     * Parses a color description.\n     */\n\n\n    Parser.prototype.parseColorGroup = function parseColorGroup(optional) {\n        var res = this.parseStringGroup(\"color\", optional);\n        if (!res) {\n            return null;\n        }\n        var match = /^(#[a-f0-9]{3}|#[a-f0-9]{6}|[a-z]+)$/i.exec(res.text);\n        if (!match) {\n            throw new src_ParseError(\"Invalid color: '\" + res.text + \"'\", res);\n        }\n        return newArgument({\n            type: \"color-token\",\n            mode: this.mode,\n            color: match[0]\n        }, res);\n    };\n\n    /**\n     * Parses a size specification, consisting of magnitude and unit.\n     */\n\n\n    Parser.prototype.parseSizeGroup = function parseSizeGroup(optional) {\n        var res = void 0;\n        var isBlank = false;\n        if (!optional && this.nextToken.text !== \"{\") {\n            res = this.parseRegexGroup(/^[-+]? *(?:$|\\d+|\\d+\\.\\d*|\\.\\d*) *[a-z]{0,2} *$/, \"size\");\n        } else {\n            res = this.parseStringGroup(\"size\", optional);\n        }\n        if (!res) {\n            return null;\n        }\n        if (!optional && res.text.length === 0) {\n            // Because we've tested for what is !optional, this block won't\n            // affect \\kern, \\hspace, etc. It will capture the mandatory arguments\n            // to \\genfrac and \\above.\n            res.text = \"0pt\"; // Enable \\above{}\n            isBlank = true; // This is here specifically for \\genfrac\n        }\n        var match = /([-+]?) *(\\d+(?:\\.\\d*)?|\\.\\d+) *([a-z]{2})/.exec(res.text);\n        if (!match) {\n            throw new src_ParseError(\"Invalid size: '\" + res.text + \"'\", res);\n        }\n        var data = {\n            number: +(match[1] + match[2]), // sign + magnitude, cast to number\n            unit: match[3]\n        };\n        if (!validUnit(data)) {\n            throw new src_ParseError(\"Invalid unit: '\" + data.unit + \"'\", res);\n        }\n        return newArgument({\n            type: \"size\",\n            mode: this.mode,\n            value: data,\n            isBlank: isBlank\n        }, res);\n    };\n\n    /**\n     * If `optional` is false or absent, this parses an ordinary group,\n     * which is either a single nucleus (like \"x\") or an expression\n     * in braces (like \"{x+y}\").\n     * If `optional` is true, it parses either a bracket-delimited expression\n     * (like \"[x+y]\") or returns null to indicate the absence of a\n     * bracket-enclosed group.\n     * If `mode` is present, switches to that mode while parsing the group,\n     * and switches back after.\n     */\n\n\n    Parser.prototype.parseGroup = function parseGroup(optional, mode) {\n        var outerMode = this.mode;\n        var firstToken = this.nextToken;\n        // Try to parse an open brace\n        if (this.nextToken.text === (optional ? \"[\" : \"{\")) {\n            // Switch to specified mode before we expand symbol after brace\n            if (mode) {\n                this.switchMode(mode);\n            }\n            // Start a new group namespace\n            this.gullet.beginGroup();\n            // If we get a brace, parse an expression\n            this.consume();\n            var expression = this.parseExpression(false, optional ? \"]\" : \"}\");\n            var lastToken = this.nextToken;\n            // Switch mode back before consuming symbol after close brace\n            if (mode) {\n                this.switchMode(outerMode);\n            }\n            // End group namespace before consuming symbol after close brace\n            this.gullet.endGroup();\n            // Make sure we get a close brace\n            this.expect(optional ? \"]\" : \"}\");\n            return newArgument({\n                type: \"ordgroup\",\n                mode: this.mode,\n                loc: src_SourceLocation.range(firstToken, lastToken),\n                body: expression\n            }, firstToken.range(lastToken, firstToken.text));\n        } else {\n            // Otherwise, just return a nucleus, or nothing for an optional group\n            if (mode) {\n                this.switchMode(mode);\n            }\n            var _result2 = optional ? null : this.parseSymbol();\n            if (mode) {\n                this.switchMode(outerMode);\n            }\n            return _result2;\n        }\n    };\n\n    /**\n     * Form ligature-like combinations of characters for text mode.\n     * This includes inputs like \"--\", \"---\", \"``\" and \"''\".\n     * The result will simply replace multiple textord nodes with a single\n     * character in each value by a single textord node having multiple\n     * characters in its value.  The representation is still ASCII source.\n     * The group will be modified in place.\n     */\n\n\n    Parser.prototype.formLigatures = function formLigatures(group) {\n        var n = group.length - 1;\n        for (var i = 0; i < n; ++i) {\n            var a = group[i];\n            // $FlowFixMe: Not every node type has a `text` property.\n            var v = a.text;\n            if (v === \"-\" && group[i + 1].text === \"-\") {\n                if (i + 1 < n && group[i + 2].text === \"-\") {\n                    group.splice(i, 3, {\n                        type: \"textord\",\n                        mode: \"text\",\n                        loc: src_SourceLocation.range(a, group[i + 2]),\n                        text: \"---\"\n                    });\n                    n -= 2;\n                } else {\n                    group.splice(i, 2, {\n                        type: \"textord\",\n                        mode: \"text\",\n                        loc: src_SourceLocation.range(a, group[i + 1]),\n                        text: \"--\"\n                    });\n                    n -= 1;\n                }\n            }\n            if ((v === \"'\" || v === \"`\") && group[i + 1].text === v) {\n                group.splice(i, 2, {\n                    type: \"textord\",\n                    mode: \"text\",\n                    loc: src_SourceLocation.range(a, group[i + 1]),\n                    text: v + v\n                });\n                n -= 1;\n            }\n        }\n    };\n\n    /**\n     * Parse a single symbol out of the string. Here, we handle both the functions\n     * we have defined, as well as the single character symbols\n     */\n\n\n    Parser.prototype.parseSymbol = function parseSymbol() {\n        var nucleus = this.nextToken;\n        var text = nucleus.text;\n\n        if (src_functions[text]) {\n            // If there exists a function with this name, we return the\n            // function and say that it is a function.\n            // The token will be consumed later in parseGivenFunction\n            // (after possibly switching modes).\n            return newFunction(nucleus);\n        } else if (/^\\\\(href|url)[^a-zA-Z]/.test(text)) {\n            var _match = text.match(urlFunctionRegex);\n            if (!_match) {\n                throw new src_ParseError(\"Internal error: invalid URL token '\" + text + \"'\", nucleus);\n            }\n            var funcName = _match[1];\n            // match[2] is the only one that can be an empty string,\n            // so it must be at the end of the following or chain:\n            var rawUrl = _match[4] || _match[3] || _match[2];\n            // hyperref package allows backslashes alone in href, but doesn't\n            // generate valid links in such cases; we interpret this as\n            // \"undefined\" behaviour, and keep them as-is. Some browser will\n            // replace backslashes with forward slashes.\n            var url = rawUrl.replace(/\\\\([#$%&~_^{}])/g, '$1');\n            var protocol = /^\\s*([^\\\\/#]*?)(?::|&#0*58|&#x0*3a)/i.exec(url);\n            protocol = protocol != null ? protocol[1] : \"_relative\";\n            var allowed = this.settings.allowedProtocols;\n            if (!utils.contains(allowed, \"*\") && !utils.contains(allowed, protocol)) {\n                throw new src_ParseError(\"Forbidden protocol '\" + protocol + \"' in \" + funcName, nucleus);\n            }\n            var urlArg = {\n                type: \"url\",\n                mode: this.mode,\n                url: url\n            };\n            this.consume();\n            if (funcName === \"\\\\href\") {\n                // two arguments\n                this.consumeSpaces(); // ignore spaces between arguments\n                var description = this.parseGroupOfType(\"original\", false);\n                if (description == null) {\n                    throw new src_ParseError(funcName + \" missing second argument\", nucleus);\n                }\n                if (description.type === \"fn\") {\n                    description = this.parseGivenFunction(description);\n                } else {\n                    // arg.type === \"arg\"\n                    description = description.result;\n                }\n                return newArgument(this.callFunction(funcName, [urlArg, description], []), nucleus);\n            } else {\n                // one argument (\\url)\n                return newArgument(this.callFunction(funcName, [urlArg], []), nucleus);\n            }\n        } else if (/^\\\\verb[^a-zA-Z]/.test(text)) {\n            this.consume();\n            var arg = text.slice(5);\n            var star = arg.charAt(0) === \"*\";\n            if (star) {\n                arg = arg.slice(1);\n            }\n            // Lexer's tokenRegex is constructed to always have matching\n            // first/last characters.\n            if (arg.length < 2 || arg.charAt(0) !== arg.slice(-1)) {\n                throw new src_ParseError(\"\\\\verb assertion failed --\\n                    please report what input caused this bug\");\n            }\n            arg = arg.slice(1, -1); // remove first and last char\n            return newArgument({\n                type: \"verb\",\n                mode: \"text\",\n                body: arg,\n                star: star\n            }, nucleus);\n        }\n        // At this point, we should have a symbol, possibly with accents.\n        // First expand any accented base symbol according to unicodeSymbols.\n        if (unicodeSymbols.hasOwnProperty(text[0]) && !src_symbols[this.mode][text[0]]) {\n            // This behavior is not strict (XeTeX-compatible) in math mode.\n            if (this.settings.strict && this.mode === \"math\") {\n                this.settings.reportNonstrict(\"unicodeTextInMathMode\", \"Accented Unicode text character \\\"\" + text[0] + \"\\\" used in \" + \"math mode\", nucleus);\n            }\n            text = unicodeSymbols[text[0]] + text.substr(1);\n        }\n        // Strip off any combining characters\n        var match = combiningDiacriticalMarksEndRegex.exec(text);\n        if (match) {\n            text = text.substring(0, match.index);\n            if (text === 'i') {\n                text = \"\\u0131\"; // dotless i, in math and text mode\n            } else if (text === 'j') {\n                text = \"\\u0237\"; // dotless j, in math and text mode\n            }\n        }\n        // Recognize base symbol\n        var symbol = void 0;\n        if (src_symbols[this.mode][text]) {\n            if (this.settings.strict && this.mode === 'math' && extraLatin.indexOf(text) >= 0) {\n                this.settings.reportNonstrict(\"unicodeTextInMathMode\", \"Latin-1/Unicode text character \\\"\" + text[0] + \"\\\" used in \" + \"math mode\", nucleus);\n            }\n            var group = src_symbols[this.mode][text].group;\n            var loc = src_SourceLocation.range(nucleus);\n            var s = void 0;\n            if (ATOMS.hasOwnProperty(group)) {\n                // $FlowFixMe\n                var family = group;\n                s = {\n                    type: \"atom\",\n                    mode: this.mode,\n                    family: family,\n                    loc: loc,\n                    text: text\n                };\n            } else {\n                // $FlowFixMe\n                s = {\n                    type: group,\n                    mode: this.mode,\n                    loc: loc,\n                    text: text\n                };\n            }\n            symbol = s;\n        } else if (text.charCodeAt(0) >= 0x80) {\n            // no symbol for e.g. ^\n            if (this.settings.strict) {\n                if (!supportedCodepoint(text.charCodeAt(0))) {\n                    this.settings.reportNonstrict(\"unknownSymbol\", \"Unrecognized Unicode character \\\"\" + text[0] + \"\\\"\" + (\" (\" + text.charCodeAt(0) + \")\"), nucleus);\n                } else if (this.mode === \"math\") {\n                    this.settings.reportNonstrict(\"unicodeTextInMathMode\", \"Unicode text character \\\"\" + text[0] + \"\\\" used in math mode\", nucleus);\n                }\n            }\n            symbol = {\n                type: \"textord\",\n                mode: this.mode,\n                loc: src_SourceLocation.range(nucleus),\n                text: text\n            };\n        } else {\n            return null; // EOF, ^, _, {, }, etc.\n        }\n        this.consume();\n        // Transform combining characters into accents\n        if (match) {\n            for (var i = 0; i < match[0].length; i++) {\n                var accent = match[0][i];\n                if (!unicodeAccents[accent]) {\n                    throw new src_ParseError(\"Unknown accent ' \" + accent + \"'\", nucleus);\n                }\n                var command = unicodeAccents[accent][this.mode];\n                if (!command) {\n                    throw new src_ParseError(\"Accent \" + accent + \" unsupported in \" + this.mode + \" mode\", nucleus);\n                }\n                symbol = {\n                    type: \"accent\",\n                    mode: this.mode,\n                    loc: src_SourceLocation.range(nucleus),\n                    label: command,\n                    isStretchy: false,\n                    isShifty: true,\n                    base: symbol\n                };\n            }\n        }\n        return newArgument(symbol, nucleus);\n    };\n\n    return Parser;\n}();\n\nParser_Parser.endOfExpression = [\"}\", \"\\\\end\", \"\\\\right\", \"&\"];\nParser_Parser.SUPSUB_GREEDINESS = 1;\n/* harmony default export */ var src_Parser = (Parser_Parser);\n// CONCATENATED MODULE: ./src/parseTree.js\n\n/**\n * Provides a single function for parsing an expression using a Parser\n * TODO(emily): Remove this\n */\n\n\n\n\n/**\n * Parses an expression using a Parser, then returns the parsed result.\n */\nvar parseTree_parseTree = function parseTree(toParse, settings) {\n    if (!(typeof toParse === 'string' || toParse instanceof String)) {\n        throw new TypeError('KaTeX can only parse string typed expression');\n    }\n    var parser = new src_Parser(toParse, settings);\n    // Blank out any \\df@tag to avoid spurious \"Duplicate \\tag\" errors\n    delete parser.gullet.macros.current[\"\\\\df@tag\"];\n    var tree = parser.parse();\n\n    // If the input used \\tag, it will set the \\df@tag macro to the tag.\n    // In this case, we separately parse the tag and wrap the tree.\n    if (parser.gullet.macros.get(\"\\\\df@tag\")) {\n        if (!settings.displayMode) {\n            throw new src_ParseError(\"\\\\tag works only in display equations\");\n        }\n        parser.gullet.feed(\"\\\\df@tag\");\n        tree = [{\n            type: \"tag\",\n            mode: \"text\",\n            body: tree,\n            tag: parser.parse()\n        }];\n    }\n\n    return tree;\n};\n\n/* harmony default export */ var src_parseTree = (parseTree_parseTree);\n// CONCATENATED MODULE: ./katex.js\n\n/* eslint no-console:0 */\n/**\n * This is the main entry point for KaTeX. Here, we expose functions for\n * rendering expressions either to DOM nodes or to markup strings.\n *\n * We also expose the ParseError class to check if errors thrown from KaTeX are\n * errors in the expression, or errors in javascript handling.\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Parse and build an expression, and place that expression in the DOM node\n * given.\n */\nvar katex_render = function render(expression, baseNode, options) {\n    baseNode.textContent = \"\";\n    var node = katex_renderToDomTree(expression, options).toNode();\n    baseNode.appendChild(node);\n};\n\n// KaTeX's styles don't work properly in quirks mode. Print out an error, and\n// disable rendering.\nif (typeof document !== \"undefined\") {\n    if (document.compatMode !== \"CSS1Compat\") {\n        typeof console !== \"undefined\" && console.warn(\"Warning: KaTeX doesn't work in quirks mode. Make sure your \" + \"website has a suitable doctype.\");\n\n        katex_render = function render() {\n            throw new src_ParseError(\"KaTeX doesn't work in quirks mode.\");\n        };\n    }\n}\n\n/**\n * Parse and build an expression, and return the markup for that.\n */\nvar renderToString = function renderToString(expression, options) {\n    var markup = katex_renderToDomTree(expression, options).toMarkup();\n    return markup;\n};\n\n/**\n * Parse an expression and return the parse tree.\n */\nvar katex_generateParseTree = function generateParseTree(expression, options) {\n    var settings = new src_Settings(options);\n    return src_parseTree(expression, settings);\n};\n\n/**\n * If the given error is a KaTeX ParseError and options.throwOnError is false,\n * renders the invalid LaTeX as a span with hover title giving the KaTeX\n * error message.  Otherwise, simply throws the error.\n */\nvar katex_renderError = function renderError(error, expression, options) {\n    if (options.throwOnError || !(error instanceof src_ParseError)) {\n        throw error;\n    }\n    var node = buildCommon.makeSpan([\"katex-error\"], [new domTree_SymbolNode(expression)]);\n    node.setAttribute(\"title\", error.toString());\n    node.setAttribute(\"style\", \"color:\" + options.errorColor);\n    return node;\n};\n\n/**\n * Generates and returns the katex build tree. This is used for advanced\n * use cases (like rendering to custom output).\n */\nvar katex_renderToDomTree = function renderToDomTree(expression, options) {\n    var settings = new src_Settings(options);\n    try {\n        var tree = src_parseTree(expression, settings);\n        return buildTree_buildTree(tree, expression, settings);\n    } catch (error) {\n        return katex_renderError(error, expression, settings);\n    }\n};\n\n/**\n * Generates and returns the katex build tree, with just HTML (no MathML).\n * This is used for advanced use cases (like rendering to custom output).\n */\nvar katex_renderToHTMLTree = function renderToHTMLTree(expression, options) {\n    var settings = new src_Settings(options);\n    try {\n        var tree = src_parseTree(expression, settings);\n        return buildTree_buildHTMLTree(tree, expression, settings);\n    } catch (error) {\n        return katex_renderError(error, expression, settings);\n    }\n};\n\n/* harmony default export */ var katex_0 = ({\n    /**\n     * Current KaTeX version\n     */\n    version: \"0.10.0-rc.1\",\n    /**\n     * Renders the given LaTeX into an HTML+MathML combination, and adds\n     * it as a child to the specified DOM node.\n     */\n    render: katex_render,\n    /**\n     * Renders the given LaTeX into an HTML+MathML combination string,\n     * for sending to the client.\n     */\n    renderToString: renderToString,\n    /**\n     * KaTeX error, usually during parsing.\n     */\n    ParseError: src_ParseError,\n    /**\n     * Parses the given LaTeX into KaTeX's internal parse tree structure,\n     * without rendering to HTML or MathML.\n     *\n     * NOTE: This method is not currently recommended for public use.\n     * The internal tree representation is unstable and is very likely\n     * to change. Use at your own risk.\n     */\n    __parse: katex_generateParseTree,\n    /**\n     * Renders the given LaTeX into an HTML+MathML internal DOM tree\n     * representation, without flattening that representation to a string.\n     *\n     * NOTE: This method is not currently recommended for public use.\n     * The internal tree representation is unstable and is very likely\n     * to change. Use at your own risk.\n     */\n    __renderToDomTree: katex_renderToDomTree,\n    /**\n     * Renders the given LaTeX into an HTML internal DOM tree representation,\n     * without MathML and without flattening that representation to a string.\n     *\n     * NOTE: This method is not currently recommended for public use.\n     * The internal tree representation is unstable and is very likely\n     * to change. Use at your own risk.\n     */\n    __renderToHTMLTree: katex_renderToHTMLTree,\n    /**\n     * extends internal font metrics object with a new object\n     * each key in the new object represents a font name\n    */\n    __setFontMetrics: setFontMetrics,\n    /**\n     * adds a new symbol to builtin symbols table\n     */\n    __defineSymbol: defineSymbol,\n    /**\n     * adds a new macro to builtin macro list\n     */\n    __defineMacro: defineMacro,\n    /**\n     * Expose the dom tree node types, which can be useful for type checking nodes.\n     *\n     * NOTE: This method is not currently recommended for public use.\n     * The internal tree representation is unstable and is very likely\n     * to change. Use at your own risk.\n     */\n    __domTree: {\n        Span: domTree_Span,\n        Anchor: domTree_Anchor,\n        SymbolNode: domTree_SymbolNode,\n        SvgNode: domTree_SvgNode,\n        PathNode: domTree_PathNode,\n        LineNode: domTree_LineNode\n    }\n});\n// CONCATENATED MODULE: ./katex.webpack.js\n/**\n * This is the webpack entry point for KaTeX. As flow[1] and jest[2] doesn't support\n * CSS modules natively, a separate entry point is used and it is not flowtyped.\n *\n * [1] https://gist.github.com/lambdahands/d19e0da96285b749f0ef\n * [2] https://facebook.github.io/jest/docs/en/webpack.html\n */\n\n\n\n/* harmony default export */ var katex_webpack = __webpack_exports__[\"default\"] = (katex_0);\n\n/***/ })\n/******/ ])[\"default\"];\n});","// 21.2.5.3 get RegExp.prototype.flags()\nif (require('./_descriptors') && /./g.flags != 'g') require('./_object-dp').f(RegExp.prototype, 'flags', {\n  configurable: true,\n  get: require('./_flags')\n});\n"],"sourceRoot":""}