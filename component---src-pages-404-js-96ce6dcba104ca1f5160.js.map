{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./src/themes/GlobalStyle.js","webpack:///./src/components/Main.js","webpack:///./src/themes/index.js","webpack:///./src/themes/typography.js","webpack:///./src/components/Nav.js","webpack:///./src/layouts/index.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_layouts__WEBPACK_IMPORTED_MODULE_1__","a","createElement","themes_GlobalStyle","Object","styled_components_browser_esm","_templateObject","components_Main","main","Main_templateObject","_ref","theme","bgColor","_ref2","secondaryColor","polished_es","_ref3","_ref4","defaultTransition","_ref5","themes","bodyColor","headerColor","headerFont","maxWidth","gray","lightGray","modifiedTheme","assign","omit_default","typography_theme_lawton_dist_default","headerFontFamily","replace","split","headerWeight","dist_default","NavTag","nav","Nav_templateObject","Header","header","_templateObject2","LinkList","ul","_templateObject3","_ref6","_ref7","HomeLink","gatsby_browser_entry","_templateObject4","_ref8","_ref9","_ref10","Nav","_ref11","title","react_default","to","LayoutDiv","div","layouts_templateObject","layouts_Layout","children","query","render","site","siteMetadata","react","Helmet_default","meta","name","content","data","_3892401927","propTypes","prop_types","isRequired"],"mappings":"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","file":"component---src-pages-404-js-96ce6dcba104ca1f5160.js","sourcesContent":["import React from 'react'\n\nimport Layout from '../layouts'\n\nexport default () => (<Layout>\n  <h1>NOT FOUND</h1>\n  <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n</Layout>)","import { createGlobalStyle } from 'styled-components'\n\nconst GlobalStyle = createGlobalStyle /* css */ `\n  html, body, #___gatsby, #___gatsby>div {\n    height: 100%;\n  }\n`\nexport default GlobalStyle\n","import styled from 'styled-components'\nimport { position, size } from 'polished'\n\nconst Main = styled.main`\n  background: ${({ theme }) => theme.bgColor};\n  a {\n    position: relative;\n    display: inline-block;\n    background: transparent;\n    color: ${({ theme }) => theme.secondaryColor};\n    font-weight: bold;\n    text-decoration: none;\n    >span {\n      color: inherit;\n      background-color: inherit;\n    }\n    &::after {\n      content: '';\n      ${position('absolute', null, null, '0', '0')}\n      ${size('1px', '100%')}\n      background: ${({ theme }) => theme.secondaryColor};\n      transition:\n        opacity ${({ theme }) => theme.defaultTransition},\n        transform ${({ theme }) => theme.defaultTransition};\n      opacity: 0;\n      transform: translateY(.2em);\n    }\n    &:hover::after {\n      opacity: 1;\n      transform: none;\n    }\n  }\n`\nexport default Main","export default {\n  bodyColor: 'hsla(0,0%,0%,.8)',\n  bgColor: 'white',\n  defaultTransition: '.3s ease-in-out',\n  headerColor: 'hsla(0,0%,0%,.9)',\n  headerFont: `-apple-system,'BlinkMacSystemFont','Segoe UI','Roboto','Oxygen','Ubuntu','Cantarell','Fira Sans','Droid Sans','Helvetica Neue','sans-serif'`,\n  maxWidth: 960,\n  secondaryColor: '#ff0000',\n  gray: 'hsla(0,0%,0%,.5)',\n  lightGray: 'hsla(0,0%,0%,.1)'\n}","import Typography from 'typography'\nimport lawtonTheme from 'typography-theme-lawton'\nimport omit from 'lodash/omit'\nimport theme from '.'\n\n// More info here:\n// https://github.com/KyleAMathews/typography.js/blob/master/packages/typography-theme-lawton/src/index.js\nconst modifiedTheme = {\n  ...omit(lawtonTheme, 'overrideStyles'),\n  headerFontFamily: theme.headerFont.replace(/'/g, '').split(','),\n  headerWeight: 500,\n  headerColor: theme.headerColor,\n  bodyColor: theme.bodyColor\n}\nconsole.log('modifiedTheme', modifiedTheme)\nconst typography = new Typography(modifiedTheme)\n\nexport default typography","import React from 'react'\nimport styled from 'styled-components'\nimport { Link } from  'gatsby'\nimport { position, size } from 'polished'\n\nimport typography from '../themes/typography'\n\nconsole.log('typography', typography)\n\nconst NavTag = styled.nav`\n  border-bottom: 1px solid ${({ theme }) => theme.lightGray};\n`\n\nconst Header = styled.header`\n  margin: 0 auto;\n  max-width: ${({ theme }) => theme.maxWidth}px;\n  a { text-decoration: none; }\n`\n\nconst LinkList = styled.ul`\n  display: block;\n  list-style-type: none;\n  margin: 0;\n  text-align: right;\n  position: relative;\n  white-space: nowrap;\n  width: 100%;\n  &::before {\n    content: '';\n    display: block;\n    background: linear-gradient(\n      to right,\n      transparent,\n      ${({ theme }) => theme.lightGray},\n      transparent\n    );\n    ${position('absolute', 0, null, null, null)}\n    ${size('1px', '100%')}\n  }\n  >li, a {\n    color: ${({ theme }) => theme.gray};\n    font-family: ${({ theme }) => theme.headerFont};\n    font-size: 14px;\n    margin: 0;\n    padding: 1em 0;\n    text-transform: uppercase;\n    transition: color ${({ theme }) => theme.defaultTransition};\n    &:not(:first-child) { margin-left: 1em; }\n    &:hover, &:active {\n      color: ${({ theme }) => theme.headerColor};\n    }\n  }\n`\n\nconst HomeLink = styled(Link)`\n  display: block;\n  text-align: center;\n  h1 {\n    display: inline-block;\n    margin: .5em;\n    font-weight: 900;\n    font-size: 22px;\n    letter-spacing: 1px;\n    position: relative;\n    transition: color ${({ theme }) => theme.defaultTransition};\n    &::after {\n      content: '';\n      border-radius: 50%;\n      display: block;\n      background: ${({ theme }) => theme.secondaryColor};\n      ${position('absolute', '10px', '-1em', null, null)}\n      ${size('10px')}\n    }\n    &:hover, &:active {\n      color: ${({ theme }) => theme.secondaryColor};\n    }\n  }\n`\n\nexport default function Nav ({ title }) {\n  return (<NavTag>\n    <Header>\n      <HomeLink to='/'><h1>{title}</h1></HomeLink>\n      <LinkList>\n        <li><Link to='/about'>About</Link></li>\n      </LinkList>\n    </Header>\n  </NavTag>)\n}","import React, { Fragment } from 'react'\nimport Helmet from 'react-helmet'\nimport styled, { ThemeProvider } from 'styled-components'\nimport { StaticQuery, graphql } from  'gatsby'\nimport { any } from 'prop-types'\nimport { size } from 'polished'\n\nimport GlobalStyle from '../themes/GlobalStyle'\nimport Main from '../components/Main'\nimport Nav from '../components/Nav'\nimport theme from '../themes'\n\nconst LayoutDiv = styled.div`\n  background: ${({ theme }) => theme.bgColor};\n  margin: 1em auto;\n  ${size('100%', '100vw')}\n  max-width: ${({ theme }) => theme.maxWidth}px;\n`\n\nconst Layout = ({ children }) => (<ThemeProvider theme={theme}>\n  <StaticQuery\n    query={graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={({ site: { siteMetadata: { title } } }) => (<Fragment>\n      <Helmet\n        title={title}\n        meta={[\n          { name: 'description', content: 'Sample' },\n          { name: 'keywords', content: 'sample, something' },\n        ]}\n      />\n    <Nav title={title} />\n    <Main>\n      <LayoutDiv>{children}</LayoutDiv>\n    </Main>\n    <GlobalStyle />\n  </Fragment>)}\n  />\n</ThemeProvider>)\nLayout.propTypes = {\n  children: any.isRequired\n}\nexport default Layout"],"sourceRoot":""}