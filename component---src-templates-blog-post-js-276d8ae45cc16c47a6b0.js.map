{"version":3,"sources":["webpack:///./src/templates/BlogPost.js","webpack:///./src/themes/GlobalStyle.js","webpack:///./src/components/Main.js","webpack:///./src/components/Nav.js","webpack:///./src/themes/index.js","webpack:///./src/components/Layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","BlogPost","query","disqus_react__WEBPACK_IMPORTED_MODULE_0__","disqus_react__WEBPACK_IMPORTED_MODULE_0___default","n","react_helmet__WEBPACK_IMPORTED_MODULE_1__","react_helmet__WEBPACK_IMPORTED_MODULE_1___default","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","rehype_react__WEBPACK_IMPORTED_MODULE_3__","rehype_react__WEBPACK_IMPORTED_MODULE_3___default","_components_Layout__WEBPACK_IMPORTED_MODULE_4__","renderAst","a","createElement","components","my-component","Compiler","_ref","_ref$data","data","post","markdownRemark","site","location","discussProps","config","identifier","id","title","frontmatter","url","href","shortname","siteMetadata","discussShortName","meta","name","content","description","htmlAst","DiscussionEmbed","themes_GlobalStyle","Object","styled_components_browser_esm","_templateObject","components_Main","main","Main_templateObject","theme","bgColor","_ref2","secondaryColor","polished_es","_ref3","_ref4","defaultTransition","_ref5","NavTag","nav","Nav_templateObject","lightGray","Header","header","_templateObject2","maxWidth","LinkList","ul","_templateObject3","gray","headerFont","_ref6","_ref7","headerColor","HomeLink","gatsby_browser_entry","_templateObject4","_ref8","_ref9","_ref10","Nav","_ref11","react_default","to","themes","bodyColor","LayoutDiv","div","Layout_templateObject","Layout_Layout","children","render","_ref4$site$siteMetada","react","Helmet_default","_3854292632","propTypes","prop_types","isRequired"],"mappings":"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","file":"component---src-templates-blog-post-js-276d8ae45cc16c47a6b0.js","sourcesContent":["import Disqus from 'disqus-react'\nimport Helmet from 'react-helmet'\nimport React from 'react'\nimport rehypeReact from 'rehype-react'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../components/Layout'\n\nconst MyComponent = () => <hr />\n\nconst renderAst = new rehypeReact({\n  createElement: React.createElement,\n  components: { \"my-component\": MyComponent }\n}).Compiler\n\nexport default function BlogPost ({ data: { markdownRemark: post, site }, location }) {\n  const discussProps = {\n    config: {\n      identifier: post.id,\n      title: post.frontmatter.title,\n      url: location.href\n    },\n    shortname: site.siteMetadata.discussShortName\n  }\n  return (<Layout>\n    <Helmet\n      title={`${site.siteMetadata.title}: ${post.frontmatter.title}`}\n      meta={[\n        { name: 'description', content: post.frontmatter.description }\n      ]}\n    />\n    <h1>{post.frontmatter.title}</h1>\n    <div>{renderAst(post.htmlAst)}</div>\n    <Disqus.DiscussionEmbed {...discussProps} />\n  </Layout>)\n}\n\nexport const query = graphql`\nquery ($slug: String!) {\n  site {\n    siteMetadata {\n      discussShortName\n      title\n    }\n  }\n  markdownRemark(fields: {slug: {eq: $slug}}) {\n    frontmatter {\n      description\n      title\n    }\n    htmlAst\n    id\n  }\n}`","import { createGlobalStyle } from 'styled-components'\n\nconst GlobalStyle = createGlobalStyle /* css */ `\n  html, body, #___gatsby, #___gatsby>div {\n    height: 100%;\n  }\n`\nexport default GlobalStyle\n","import styled from 'styled-components'\nimport { position, size } from 'polished'\n\nconst Main = styled.main`\n  background: ${({ theme }) => theme.bgColor};\n  a {\n    position: relative;\n    display: inline-block;\n    background: transparent;\n    color: ${({ theme }) => theme.secondaryColor};\n    font-weight: bold;\n    text-decoration: none;\n    >span {\n      color: inherit;\n      background-color: inherit;\n    }\n    &::after {\n      content: '';\n      ${position('absolute', null, null, '0', '0')}\n      ${size('1px', '100%')}\n      background: ${({ theme }) => theme.secondaryColor};\n      transition:\n        opacity ${({ theme }) => theme.defaultTransition},\n        transform ${({ theme }) => theme.defaultTransition};\n      opacity: 0;\n      transform: translateY(.2em);\n    }\n    &:hover::after {\n      opacity: 1;\n      transform: none;\n    }\n  }\n`\nexport default Main","import React from 'react'\nimport styled from 'styled-components'\nimport { Link } from  'gatsby'\nimport { position, size } from 'polished'\n\nconst NavTag = styled.nav`\n  border-bottom: 1px solid ${({ theme }) => theme.lightGray};\n`\n\nconst Header = styled.header`\n  margin: 0 auto;\n  max-width: ${({ theme }) => theme.maxWidth}px;\n  a { text-decoration: none; }\n`\n\nconst LinkList = styled.ul`\n  display: block;\n  list-style-type: none;\n  margin: 0;\n  text-align: right;\n  position: relative;\n  white-space: nowrap;\n  width: 100%;\n  &::before {\n    content: '';\n    display: block;\n    background: linear-gradient(\n      to right,\n      transparent,\n      ${({ theme }) => theme.lightGray},\n      transparent\n    );\n    ${position('absolute', 0, null, null, null)}\n    ${size('1px', '100%')}\n  }\n  >li, a {\n    color: ${({ theme }) => theme.gray};\n    font-family: ${({ theme }) => theme.headerFont};\n    font-size: 14px;\n    margin: 0;\n    padding: 1em 0;\n    text-transform: uppercase;\n    transition: color ${({ theme }) => theme.defaultTransition};\n    &:not(:first-child) { margin-left: 1em; }\n    &:hover, &:active {\n      color: ${({ theme }) => theme.headerColor};\n    }\n  }\n`\n\nconst HomeLink = styled(Link)`\n  display: block;\n  text-align: center;\n  h1 {\n    display: inline-block;\n    margin: .5em;\n    font-weight: 900;\n    font-size: 22px;\n    letter-spacing: 1px;\n    position: relative;\n    transition: color ${({ theme }) => theme.defaultTransition};\n    &::after {\n      content: '';\n      border-radius: 50%;\n      display: block;\n      background: ${({ theme }) => theme.secondaryColor};\n      ${position('absolute', '10px', '-1em', null, null)}\n      ${size('10px')}\n    }\n    &:hover, &:active {\n      color: ${({ theme }) => theme.secondaryColor};\n    }\n  }\n`\n\nexport default function Nav ({ title }) {\n  return (<NavTag>\n    <Header>\n      <HomeLink to='/'><h1>{title}</h1></HomeLink>\n      <LinkList>\n        <li><Link to='/about'>About</Link></li>\n      </LinkList>\n    </Header>\n  </NavTag>)\n}","export default {\n  bodyColor: 'hsla(0,0%,0%,.8)',\n  bgColor: 'white',\n  defaultTransition: '.3s ease-in-out',\n  headerColor: 'hsla(0,0%,0%,.9)',\n  headerFont: `-apple-system,'BlinkMacSystemFont','Segoe UI','Roboto','Oxygen','Ubuntu','Cantarell','Fira Sans','Droid Sans','Helvetica Neue','sans-serif'`,\n  maxWidth: 960,\n  secondaryColor: '#ff0000',\n  gray: 'hsla(0,0%,0%,.5)',\n  lightGray: 'hsla(0,0%,0%,.1)'\n}","import React, { Fragment } from 'react'\nimport Helmet from 'react-helmet'\nimport styled, { ThemeProvider } from 'styled-components'\nimport { StaticQuery, graphql } from  'gatsby'\nimport { any } from 'prop-types'\nimport { size } from 'polished'\n\nimport GlobalStyle from '../themes/GlobalStyle'\nimport Main from '../components/Main'\nimport Nav from '../components/Nav'\nimport theme from '../themes'\n\nconst LayoutDiv = styled.div`\n  background: ${({ theme }) => theme.bgColor};\n  margin: 1em auto;\n  ${size('100%', '100vw')}\n  max-width: ${({ theme }) => theme.maxWidth}px;\n`\n\nconst Layout = ({ children }) => (<ThemeProvider theme={theme}>\n  <StaticQuery\n    query={graphql`\n      query {\n        site {\n          siteMetadata {\n            description\n            title\n          }\n        }\n      }\n    `}\n    render={({ site: { siteMetadata: { description, title } } }) => (<Fragment>\n      <Helmet\n        title={title}\n        meta={[\n          { name: 'description', content: description }\n        ]}\n      />\n    <Nav title={title} />\n    <Main>\n      <LayoutDiv>{children}</LayoutDiv>\n    </Main>\n    <GlobalStyle />\n  </Fragment>)}\n  />\n</ThemeProvider>)\nLayout.propTypes = {\n  children: any.isRequired\n}\nexport default Layout"],"sourceRoot":""}